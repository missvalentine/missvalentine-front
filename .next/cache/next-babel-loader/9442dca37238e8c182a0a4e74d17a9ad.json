{"ast":null,"code":"import { isAlpha, isEmail, isEmpty, isNumeric } from \"validator\"; // import { isValidPhoneNumber } from \"react-phone-number-input\";\n\nimport { emailNotValidErrMsg, phoneNotValidErrMsg, zipValidErrMsg } from \"../../constants/constantMessage\";\nimport projectSettings, { projectName } from \"../../constants/projectSettings\";\nvar enableCountry = projectSettings.enableCountry;\nexport var required = function required(value) {\n  if (!value.toString().trim().length) {\n    // We can return string or jsx as the 'error' prop for the validated Component\n    return \"require\";\n  }\n};\nexport var email = function email(value) {\n  if (!isEmail(value)) {\n    return \"\".concat(value, \" is not a valid email.\");\n  }\n};\nexport var fieldValidation = function fieldValidation() {\n  var field = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \" \";\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \" \";\n  var typeArr = type.split(\",\").map(function (el) {\n    return el.trim();\n  });\n\n  if (typeArr.includes(\"required\")) {\n    if (isEmpty(field.trim())) {\n      return {\n        isError: true,\n        errorMsg: \"can't be empty\"\n      };\n    }\n  }\n\n  if (typeArr.includes(\"name\")) {\n    if (!isAlpha(field)) {\n      return {\n        isError: true,\n        errorMsg: \"Only Alphabets\"\n      };\n    }\n  }\n\n  if (typeArr.includes(\"email\")) {\n    if (!isEmail(field)) {\n      return {\n        isError: true,\n        errorMsg: emailNotValidErrMsg\n      };\n    }\n  } // if (typeArr.includes(\"phone\")) {\n  //   if (!isValidPhoneNumber(field)) {\n  //     return {\n  //       isError: true,\n  //       errorMsg: phoneNotValidErrMsg\n  //     };\n  //   }\n  // }\n\n\n  if (typeArr.includes(\"zipcode\")) {\n    // if(isPostalCode(this.state[field])){\n    if (!isNumeric(field)) {\n      return {\n        isError: true,\n        errorMsg: zipValidErrMsg\n      };\n    }\n  }\n\n  if (typeArr.includes(\"routingNumber\")) {\n    // if(isPostalCode(this.state[field])){\n    if (!isNumeric(field)) {\n      if (field.length === 9) {\n        return {\n          isError: true,\n          errorMsg: \"Bank routing number should be 9 digits.\"\n        };\n      }\n\n      return {\n        isError: true,\n        errorMsg: \"Bank routing number is not Correct.\"\n      };\n    }\n  }\n\n  if (typeArr.includes(\"country\")) {\n    if (!enableCountry.includes(field)) {\n      return {\n        isError: true,\n        errorMsg: \"\".concat(projectName, \" offers shipping to USA only\")\n      };\n    }\n  }\n\n  return {\n    isError: false,\n    errorMsg: \"\"\n  };\n};","map":null,"metadata":{},"sourceType":"module"}