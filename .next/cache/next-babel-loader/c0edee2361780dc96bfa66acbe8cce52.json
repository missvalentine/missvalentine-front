{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { connect } from 'react-redux';\nimport { setReferrer } from '../redux/actions';\nimport { makeCancelable } from \"../services/makeCancelable\";\nimport BasicFunction from \"../services/extra/basicFunction\";\nimport { addAmbassador } from \"../services/api\";\nvar basicFunction = new BasicFunction();\n\nvar AppWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(AppWrapper, _React$Component);\n\n  var _super = _createSuper(AppWrapper);\n\n  function AppWrapper() {\n    _classCallCheck(this, AppWrapper);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AppWrapper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.referrerSetting();\n\n      if (typeof this.props.router !== \"undefined\") {\n        var _this$props$router = this.props.router,\n            query = _this$props$router.query,\n            asPath = _this$props$router.asPath;\n\n        if (query.ref) {}\n      }\n    }\n  }, {\n    key: \"referrerSetting\",\n    value: function referrerSetting() {\n      var _this = this;\n\n      if (true) {\n        var _window$location = window.location,\n            href = _window$location.href,\n            pathname = _window$location.pathname;\n        var _this$props = this.props,\n            _setReferrer = _this$props.setReferrer,\n            referrer = _this$props.referrer;\n        var url = new URL(window.location.href);\n        var ambassador_id = url.searchParams.get(\"ref\");\n        var referralUrl = referrer.referralUrl ? referrer.referralUrl : document.referrer;\n        var cUrl = href;\n        var originalUrl = basicFunction.removeParams(cUrl, \"ref\");\n\n        if (referralUrl) {\n          if (referralUrl.includes(window.origin)) {\n            referralUrl = \"\";\n          }\n        }\n\n        if (ambassador_id) {\n          _setReferrer({\n            ambassadorId: ambassador_id,\n            ambassadorUrl: referralUrl,\n            referralUrl: referralUrl\n          });\n\n          this.cancelableRef = makeCancelable(addAmbassador({\n            ambass_id: ambassador_id,\n            url: originalUrl,\n            refer_url: referralUrl\n          }), function (res) {\n            var resJson = res.data;\n\n            if (resJson.status) {\n              _setReferrer({\n                referralUrl: null\n              });\n\n              if (resJson.referral) {\n                _setReferrer({\n                  referralUrlId: resJson.referral._id\n                });\n              }\n            } else {\n              _this.setState({\n                modal: true,\n                affMsg: \"Invalid Referral Url .\"\n              }); //   setTimeout(() => {\n              //     this.props.history.push(url)                      this.props.history.push(url);\n              //   }, 2000);\n\n            }\n          }, function (err) {\n            _this.setState({\n              modal: true,\n              affMsg: \"Invalid Referral Url .\"\n            });\n\n            setTimeout(function () {\n              _this.props.history.push(url);\n            }, 2000);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, this.props.children);\n    }\n  }]);\n\n  return AppWrapper;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    referrer: state.referrer\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setReferrer: setReferrer\n})(AppWrapper);","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/components/AppWrapper.js"],"names":["connect","setReferrer","makeCancelable","BasicFunction","addAmbassador","basicFunction","AppWrapper","referrerSetting","props","router","query","asPath","ref","window","location","href","pathname","referrer","url","URL","ambassador_id","searchParams","get","referralUrl","document","cUrl","originalUrl","removeParams","includes","origin","ambassadorId","ambassadorUrl","cancelableRef","ambass_id","refer_url","res","resJson","data","status","referral","referralUrlId","_id","setState","modal","affMsg","err","setTimeout","history","push","children","React","Component","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport {\n    setReferrer\n} from '../redux/actions'\nimport { makeCancelable } from \"../services/makeCancelable\";\nimport BasicFunction from \"../services/extra/basicFunction\";\nimport { addAmbassador } from \"../services/api\"\nconst basicFunction = new BasicFunction();\nclass AppWrapper extends React.Component {\n    componentDidMount(){\n        this.referrerSetting()\n        if(typeof this.props.router !== \"undefined\"){\n            const {\n                query, asPath\n            } = this.props.router\n            if(query.ref){\n            }\n        }\n    }\n    referrerSetting() {\n      if(typeof window !== \"undefined\"){\n        const { href, pathname } = window.location;\n        const { setReferrer, referrer } = this.props;\n        var url = new URL(window.location.href);\n        const ambassador_id = url.searchParams.get(\"ref\");\n        var referralUrl = referrer.referralUrl\n          ? referrer.referralUrl\n          : document.referrer;\n        const cUrl = href;\n        const originalUrl = basicFunction.removeParams(cUrl, \"ref\");\n        if (referralUrl) {\n          if (referralUrl.includes(window.origin)) {\n            referralUrl = \"\";\n          }\n        }\n        if (ambassador_id) {\n              setReferrer({\n              ambassadorId: ambassador_id,\n              ambassadorUrl: referralUrl,\n              referralUrl: referralUrl\n              });\n              this.cancelableRef = makeCancelable(\n              addAmbassador({\n                  ambass_id: ambassador_id,\n                  url: originalUrl,\n                  refer_url: referralUrl\n              }),\n              res => {\n                  const resJson = res.data\n                  if (resJson.status) {\n                  setReferrer({\n                      referralUrl: null\n                  });\n                  if (resJson.referral) {\n                      setReferrer({\n                      referralUrlId: resJson.referral._id\n                      });\n                  }\n                  } else {\n                  this.setState({\n                      modal: true,\n                      affMsg: \"Invalid Referral Url .\"\n                  });\n                //   setTimeout(() => {\n                //     this.props.history.push(url)                      this.props.history.push(url);\n                //   }, 2000);\n                  }\n              },\n              err => {\n                  this.setState({\n                  modal: true,\n                  affMsg: \"Invalid Referral Url .\"\n                  });\n                  setTimeout(() => {\n                  this.props.history.push(url);\n                  }, 2000);\n              }\n              );\n          }\n        }\n    }\n    render(){\n        return (\n            <>\n                {this.props.children}\n            </>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    referrer: state.referrer\n})\nexport default connect(mapStateToProps, {setReferrer} )(AppWrapper)"]},"metadata":{},"sourceType":"module"}