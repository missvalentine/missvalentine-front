{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/components/chatBot/ChatBot.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport dynamic from \"next/dynamic\";\nimport ChatBot from \"react-simple-chatbot\";\nimport Router from \"next/router\";\nimport { ThemeProvider } from \"styled-components\";\nimport { connect } from \"react-redux\";\nvar ChatProductList = dynamic(_c = function _c() {\n  return import(\"./ChatProductList\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"./ChatProductList\")];\n    },\n    modules: [\"./ChatProductList\"]\n  }\n});\n_c2 = ChatProductList;\nvar ChatCategoryList = dynamic(_c3 = function _c3() {\n  return import(\"./ChatCategoryList\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"./ChatCategoryList\")];\n    },\n    modules: [\"./ChatCategoryList\"]\n  }\n});\n_c4 = ChatCategoryList;\nvar ChatProductCard = dynamic(_c5 = function _c5() {\n  return import(\"./ChatProductCard\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"./ChatProductCard\")];\n    },\n    modules: [\"./ChatProductCard\"]\n  }\n});\n_c6 = ChatProductCard;\nvar ChatUserOneRet = dynamic(_c7 = function _c7() {\n  return import(\"./ChatUserOneRet\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"./ChatUserOneRet\")];\n    },\n    modules: [\"./ChatUserOneRet\"]\n  }\n});\n_c8 = ChatUserOneRet;\nimport ChatMsgList from \"./ChatMsgList\";\nvar ChatOrderList = dynamic(_c9 = function _c9() {\n  return import(\"./ChatOrderList\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"./ChatOrderList\")];\n    },\n    modules: [\"./ChatOrderList\"]\n  }\n});\n_c10 = ChatOrderList;\nvar LearnResponse = dynamic(_c11 = function _c11() {\n  return import(\"./LearnResponse\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"./LearnResponse\")];\n    },\n    modules: [\"./LearnResponse\"]\n  }\n});\n_c12 = LearnResponse;\nimport { isEmpty, isEmail } from \"validator\";\nimport { chatTheme, imageUrl } from \"../../constants/projectSettings\";\nvar chatMsgList = new ChatMsgList();\nvar getInitialMsg = chatMsgList.getInitialMsg,\n    getInitialMsg2 = chatMsgList.getInitialMsg2,\n    shopNowMsg = chatMsgList.shopNowMsg,\n    redirectForTracking = chatMsgList.redirectForTracking,\n    emptyTrackingIdErr = chatMsgList.emptyTrackingIdErr,\n    getProductChooseMsg = chatMsgList.getProductChooseMsg,\n    getMsgAfterCategory = chatMsgList.getMsgAfterCategory,\n    contactFirst = chatMsgList.contactFirst,\n    contactSecond = chatMsgList.contactSecond,\n    contactThird = chatMsgList.contactThird,\n    contactFourth = chatMsgList.contactFourth,\n    repeatMsg = chatMsgList.repeatMsg,\n    afterProduct = chatMsgList.afterProduct,\n    contactErrMsgOne = chatMsgList.contactErrMsgOne,\n    contactErrMsgTwo = chatMsgList.contactErrMsgTwo,\n    checkoutRedirectMsg = chatMsgList.checkoutRedirectMsg,\n    checkoutNoItemMsg = chatMsgList.checkoutNoItemMsg,\n    getProductListMsg = chatMsgList.getProductListMsg,\n    pickProductMsg = chatMsgList.pickProductMsg,\n    afterProductFinish = chatMsgList.afterProductFinish,\n    checkoutFinish = chatMsgList.checkoutFinish,\n    learnMoreUserPre = chatMsgList.learnMoreUserPre,\n    learnMoreQuit = chatMsgList.learnMoreQuit,\n    learnMoreNext = chatMsgList.learnMoreNext;\n\nvar ChatBotElement = /*#__PURE__*/function (_Component) {\n  _inherits(ChatBotElement, _Component);\n\n  var _super = _createSuper(ChatBotElement);\n\n  function ChatBotElement(props) {\n    var _this;\n\n    _classCallCheck(this, ChatBotElement);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleFloating\", function () {\n      _this.setState(function (prevState) {\n        return {\n          opened: !prevState.opened\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearChat\", function () {\n      _this.setState({\n        clear: true\n      }, function () {\n        _this.setState({\n          clear: false\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"ifLogin\", function (login) {\n      var notLogin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      if (_this.props) if (_this.props.user) {\n        if (_this.props.user._id && _this.props.user.username) return login;\n      }\n      return notLogin;\n    });\n\n    _this.state = {\n      userName: props.user.email,\n      opened: false,\n      clear: false\n    };\n    return _this;\n  }\n\n  _createClass(ChatBotElement, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.ifLogin();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      chatTheme;\n\n      var theme = _objectSpread({}, chatTheme);\n\n      var _this$props = this.props,\n          isOpen = _this$props.isOpen,\n          items = _this$props.items;\n      var _this$state = this.state,\n          opened = _this$state.opened,\n          clear = _this$state.clear;\n      var chat = [this.ifLogin({\n        id: \"initialOne\",\n        message: function message() {\n          var userName = _this2.props.user && _this2.props.user.username.split(\" \")[0];\n\n          return getInitialMsg(userName);\n        },\n        trigger: \"initialTwo\"\n      }), {\n        id: \"initialTwo\",\n        message: getInitialMsg2(),\n        trigger: \"firstOptionsFresh\"\n      }, {\n        id: \"firstOptionsFresh\",\n        options: [{\n          value: \"initialOne\",\n          label: \"Shop Now\",\n          trigger: \"shopSelected\"\n        }, {\n          value: \"checkout\",\n          label: \"Checkout\",\n          trigger: \"checkout\"\n        }, {\n          value: \"contact\",\n          label: \"Contact us\",\n          trigger: \"contact\"\n        }, {\n          value: \"learnMore\",\n          label: \"Learn more\",\n          trigger: \"learnMoreUserPre\"\n        }]\n      }, {\n        id: \"firstOptions\",\n        options: [{\n          value: \"initialOne\",\n          label: \"Shop Now\",\n          trigger: \"shopSelected\"\n        }, {\n          value: \"checkout\",\n          label: \"Checkout\",\n          trigger: \"checkout\"\n        }, {\n          value: \"contact\",\n          label: \"Contact us\",\n          trigger: \"contact\"\n        }, {\n          value: \"learnMore\",\n          label: \"Learn more\",\n          trigger: \"learnMoreUserPre\"\n        }]\n      }, {\n        id: \"learnMoreUserPre\",\n        message: learnMoreUserPre(),\n        trigger: \"learnMoreUser\"\n      }, {\n        id: \"learnMoreUser\",\n        user: true,\n        trigger: \"learnMoreResponce\"\n      }, {\n        id: \"learnMoreResponce\",\n        component: __jsx(LearnResponse, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 20\n          }\n        }),\n        waitAction: true,\n        asMessage: true\n      }, {\n        id: \"learnMoreQuit\",\n        message: learnMoreQuit(),\n        trigger: \"learnMoreQuitAfter\"\n      }, {\n        id: \"learnMoreQuitAfter\",\n        user: true,\n        trigger: function trigger(_ref) {\n          var value = _ref.value;\n          if (value.toLowerCase().trim() === \"yes\") return \"firstOptions\";\n          return \"learnMoreNext\";\n        } // trigger: \"learnMoreResponce\"\n\n      }, {\n        id: \"learnMoreNext\",\n        message: learnMoreNext(),\n        trigger: \"learnMoreUser\"\n      }, {\n        id: \"shopSelected\",\n        message: shopNowMsg(),\n        trigger: \"userOne\"\n      }, {\n        id: \"userOne\",\n        user: true,\n        // waitAction: true,\n        trigger: \"5\"\n      }, {\n        id: 5,\n        component: __jsx(ChatUserOneRet, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 20\n          }\n        }),\n        waitAction: true,\n        asMessage: true\n      }, // {\n      //   id: \"trackNow\",\n      //   message: msgTrackNow(),\n      //   trigger: \"getTrackingId\"\n      // },\n      {\n        id: \"trackNowLogin\",\n        // message: msgTrackNow(),\n        component: __jsx(ChatOrderList, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 20\n          }\n        }),\n        trigger: \"trackNowLoginNext\",\n        waitAction: true\n      }, {\n        id: \"trackNowLoginNext\",\n        message: function message(pp) {\n          setTimeout(function () {\n            window.open(\"https://www.google.com\");\n          }, 2000);\n          return redirectForTracking();\n        },\n        trigger: \"repeat\"\n      }, {\n        id: \"trackNow\",\n        user: true,\n        validator: function validator(value) {\n          if (isEmpty(value)) {\n            return emptyTrackingIdErr();\n          }\n\n          return true;\n        },\n        trigger: function trigger(props) {\n          return \"repeat\";\n        }\n      }, {\n        id: \"categoryList\",\n        component: __jsx(ChatCategoryList, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 20\n          }\n        }),\n        waitAction: true,\n        // asMessage: true,\n        trigger: \"postCategory\"\n      }, {\n        id: \"postCategory\",\n        message: function message(_ref2) {\n          var previousValue = _ref2.previousValue;\n          return getMsgAfterCategory(previousValue);\n        },\n        trigger: \"preProduct\"\n      }, {\n        id: \"preProduct\",\n        message: getProductListMsg(),\n        trigger: \"preProduct2\"\n      }, {\n        id: \"preProduct2\",\n        message: pickProductMsg(),\n        trigger: \"products\"\n      }, {\n        id: \"products\",\n        component: __jsx(ChatProductList, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 20\n          }\n        }),\n        waitAction: true,\n        trigger: \"productSelected1\" // end: true\n\n      }, {\n        id: \"productSelected1\",\n        message: \"Awesome! 😍\",\n        trigger: function trigger(props) {\n          return \"productSelected2\";\n        }\n      }, {\n        id: \"productSelected2\",\n        message: function message(_ref3) {\n          var steps = _ref3.steps;\n          return getProductChooseMsg(steps.products.value.productTitle); // return `${steps.products.value.productTitle} is my favourite`\n        },\n        // end: true\n        trigger: \"afterProduct\"\n      }, {\n        id: \"afterProduct\",\n        message: afterProduct(),\n        trigger: \"singleProduct\"\n      }, {\n        id: \"singleProduct\",\n        component: __jsx(ChatProductCard, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 20\n          }\n        }),\n        trigger: \"productNext\"\n      }, {\n        id: \"productNext\",\n        message: afterProductFinish(),\n        trigger: \"firstOptions\"\n      }, {\n        id: \"checkout\",\n        message: function message() {\n          if (items && items.length > 0) {\n            return checkoutRedirectMsg();\n          }\n\n          return checkoutNoItemMsg();\n        },\n        trigger: function trigger() {\n          if (items && items.length > 0) {\n            return \"checkout1\";\n          }\n\n          return \"repeat\";\n        }\n      }, {\n        id: \"checkout1\",\n        message: checkoutFinish(),\n        trigger: \"checkout2\"\n      }, {\n        id: \"checkout2\",\n        message: function message() {\n          // const { history, countryCode } = this.props;\n          setTimeout(function () {\n            Router.push(\"/checkout\");\n\n            _this2.toggleFloating();\n\n            _this2.clearChat();\n          }, 400);\n          return \"\";\n        },\n        end: true\n      }, {\n        id: \"contact\",\n        message: contactFirst(),\n        trigger: \"contactUserFirst\"\n      }, {\n        id: \"contactUserFirst\",\n        user: true,\n        // waitAction: true,\n        trigger: function trigger(_ref4) {\n          var value = _ref4.value;\n          if (isEmail(value)) return \"contactTwo\";else {\n            return \"contactUserErr\";\n          }\n        }\n      }, {\n        id: \"contactUserErr\",\n        message: contactErrMsgOne(),\n        trigger: \"contactUserErr2\"\n      }, {\n        id: \"contactUserErr2\",\n        message: contactErrMsgTwo(),\n        trigger: \"contactUserFirst\"\n      }, {\n        id: \"contactTwo\",\n        message: contactSecond(),\n        trigger: \"contactUserSecond\"\n      }, {\n        id: \"contactUserSecond\",\n        user: true,\n        // waitAction: true,\n        trigger: \"contactThree\"\n      }, {\n        id: \"contactThree\",\n        message: contactThird(),\n        trigger: \"contactFourth\"\n      }, {\n        id: \"contactFourth\",\n        message: contactFourth(),\n        trigger: \"repeat\"\n      }, {\n        id: \"repeat\",\n        message: repeatMsg(),\n        trigger: \"firstOptions\"\n      }].filter(function (el) {\n        return el;\n      });\n      if (clear) return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 23\n        }\n      });\n      return __jsx(\"div\", {\n        className: \"react-chat-bot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"chat-inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 9\n        }\n      }, __jsx(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }\n      }, __jsx(ChatBot, {\n        opened: opened,\n        toggleFloating: this.toggleFloating,\n        floatingStyle: {\n          bottom: \"42px\"\n        },\n        enableMobileAutoFocus: true,\n        floating: true,\n        botAvatar: \"\".concat(imageUrl, \"/Logo-chat.png\"),\n        bubbleStyle: {\n          marginBottom: 0,\n          // marginTop: \"10px\",\n          maxWidth: \"70%\",\n          fontSize: \"16px\",\n          boxShadow: \"none\"\n        },\n        inputAttributes: {\n          placeHolder: \"Type the \"\n        },\n        bubbleOptionStyle: {\n          marginBottom: 0,\n          marginTop: \"10px\",\n          fontSize: \"16px\",\n          boxShadow: \"none\",\n          borderBottom: \"1px solid currentColor\",\n          paddingRight: \"30px\",\n          fontWeight: \"600\",\n          paddingLeft: \"0\",\n          paddingBottom: \"0\",\n          marginRight: \"10px\",\n          minWidth: \"40%\"\n        },\n        style: {\n          width: \"450px\",\n          maxWidth: \"100%\",\n          bottom: 0,\n          right: isOpen ? \"380px\" : \"32px\",\n          transition: \"all 0.4s ease 0s\"\n        },\n        customStyle: {\n          boxShadow: \"none\",\n          justifyContent: \"left\",\n          marginLeft: \"46px\"\n        },\n        steps: chat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return ChatBotElement;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    isOpen: state.drawers.isCartOpen,\n    countryCode: state.location.countryCode,\n    items: state.cart.items\n  };\n};\n\nexport default connect(mapStateToProps)(ChatBotElement);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"ChatProductList$dynamic\");\n$RefreshReg$(_c2, \"ChatProductList\");\n$RefreshReg$(_c3, \"ChatCategoryList$dynamic\");\n$RefreshReg$(_c4, \"ChatCategoryList\");\n$RefreshReg$(_c5, \"ChatProductCard$dynamic\");\n$RefreshReg$(_c6, \"ChatProductCard\");\n$RefreshReg$(_c7, \"ChatUserOneRet$dynamic\");\n$RefreshReg$(_c8, \"ChatUserOneRet\");\n$RefreshReg$(_c9, \"ChatOrderList$dynamic\");\n$RefreshReg$(_c10, \"ChatOrderList\");\n$RefreshReg$(_c11, \"LearnResponse$dynamic\");\n$RefreshReg$(_c12, \"LearnResponse\");","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/components/chatBot/ChatBot.js"],"names":["React","Component","dynamic","ChatBot","Router","ThemeProvider","connect","ChatProductList","ChatCategoryList","ChatProductCard","ChatUserOneRet","ChatMsgList","ChatOrderList","LearnResponse","isEmpty","isEmail","chatTheme","imageUrl","chatMsgList","getInitialMsg","getInitialMsg2","shopNowMsg","redirectForTracking","emptyTrackingIdErr","getProductChooseMsg","getMsgAfterCategory","contactFirst","contactSecond","contactThird","contactFourth","repeatMsg","afterProduct","contactErrMsgOne","contactErrMsgTwo","checkoutRedirectMsg","checkoutNoItemMsg","getProductListMsg","pickProductMsg","afterProductFinish","checkoutFinish","learnMoreUserPre","learnMoreQuit","learnMoreNext","ChatBotElement","props","setState","prevState","opened","clear","login","notLogin","user","_id","username","state","userName","email","ifLogin","theme","isOpen","items","chat","id","message","split","trigger","options","value","label","component","waitAction","asMessage","toLowerCase","trim","pp","setTimeout","window","open","validator","previousValue","steps","products","productTitle","length","push","toggleFloating","clearChat","end","filter","el","bottom","marginBottom","maxWidth","fontSize","boxShadow","placeHolder","marginTop","borderBottom","paddingRight","fontWeight","paddingLeft","paddingBottom","marginRight","minWidth","width","right","transition","justifyContent","marginLeft","mapStateToProps","drawers","isCartOpen","countryCode","location","cart"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport dynamic from \"next/dynamic\";\nimport ChatBot from \"react-simple-chatbot\";\nimport Router from \"next/router\";\nimport { ThemeProvider } from \"styled-components\";\nimport { connect } from \"react-redux\";\nconst ChatProductList = dynamic(() => import(\"./ChatProductList\"));\nconst ChatCategoryList = dynamic(() => import(\"./ChatCategoryList\"));\nconst ChatProductCard = dynamic(() => import(\"./ChatProductCard\"));\nconst ChatUserOneRet = dynamic(() => import(\"./ChatUserOneRet\"));\nimport ChatMsgList from \"./ChatMsgList\";\nconst ChatOrderList = dynamic(() => import(\"./ChatOrderList\"));\nconst LearnResponse = dynamic(() => import(\"./LearnResponse\"));\nimport { isEmpty, isEmail } from \"validator\";\nimport { chatTheme, imageUrl } from \"../../constants/projectSettings\";\n\nconst chatMsgList = new ChatMsgList();\nconst {\n  getInitialMsg,\n  getInitialMsg2,\n  shopNowMsg,\n  redirectForTracking,\n  emptyTrackingIdErr,\n  getProductChooseMsg,\n  getMsgAfterCategory,\n  contactFirst,\n  contactSecond,\n  contactThird,\n  contactFourth,\n  repeatMsg,\n  afterProduct,\n  contactErrMsgOne,\n  contactErrMsgTwo,\n  checkoutRedirectMsg,\n  checkoutNoItemMsg,\n  getProductListMsg,\n  pickProductMsg,\n  afterProductFinish,\n  checkoutFinish,\n  learnMoreUserPre,\n  learnMoreQuit,\n  learnMoreNext,\n} = chatMsgList;\n\nclass ChatBotElement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: props.user.email,\n      opened: false,\n      clear: false,\n    };\n  }\n  componentDidMount() {\n    this.ifLogin();\n  }\n  toggleFloating = () => {\n    this.setState((prevState) => ({\n      opened: !prevState.opened,\n    }));\n  };\n  clearChat = () => {\n    this.setState(\n      {\n        clear: true,\n      },\n      () => {\n        this.setState({\n          clear: false,\n        });\n      }\n    );\n  };\n  ifLogin = (login, notLogin = null) => {\n    if (this.props)\n      if (this.props.user) {\n        if (this.props.user._id && this.props.user.username) return login;\n      }\n    return notLogin;\n  };\n  render() {\n    chatTheme;\n    const theme = {\n      ...chatTheme,\n    };\n    const { isOpen, items } = this.props;\n    const { opened, clear } = this.state;\n    const chat = [\n      this.ifLogin({\n        id: \"initialOne\",\n        message: () => {\n          const userName =\n            this.props.user && this.props.user.username.split(\" \")[0];\n          return getInitialMsg(userName);\n        },\n        trigger: \"initialTwo\",\n      }),\n      {\n        id: \"initialTwo\",\n        message: getInitialMsg2(),\n        trigger: \"firstOptionsFresh\",\n      },\n      {\n        id: \"firstOptionsFresh\",\n        options: [\n          { value: \"initialOne\", label: \"Shop Now\", trigger: \"shopSelected\" },\n          { value: \"checkout\", label: \"Checkout\", trigger: \"checkout\" },\n          { value: \"contact\", label: \"Contact us\", trigger: \"contact\" },\n          {\n            value: \"learnMore\",\n            label: \"Learn more\",\n            trigger: \"learnMoreUserPre\",\n          },\n        ],\n      },\n      {\n        id: \"firstOptions\",\n        options: [\n          { value: \"initialOne\", label: \"Shop Now\", trigger: \"shopSelected\" },\n          { value: \"checkout\", label: \"Checkout\", trigger: \"checkout\" },\n          { value: \"contact\", label: \"Contact us\", trigger: \"contact\" },\n          {\n            value: \"learnMore\",\n            label: \"Learn more\",\n            trigger: \"learnMoreUserPre\",\n          },\n        ],\n      },\n      {\n        id: \"learnMoreUserPre\",\n        message: learnMoreUserPre(),\n        trigger: \"learnMoreUser\",\n      },\n      {\n        id: \"learnMoreUser\",\n        user: true,\n        trigger: \"learnMoreResponce\",\n      },\n      {\n        id: \"learnMoreResponce\",\n        component: <LearnResponse />,\n        waitAction: true,\n        asMessage: true,\n      },\n      {\n        id: \"learnMoreQuit\",\n        message: learnMoreQuit(),\n        trigger: \"learnMoreQuitAfter\",\n      },\n      {\n        id: \"learnMoreQuitAfter\",\n        user: true,\n        trigger: ({ value }) => {\n          if (value.toLowerCase().trim() === \"yes\") return \"firstOptions\";\n\n          return \"learnMoreNext\";\n        },\n        // trigger: \"learnMoreResponce\"\n      },\n      {\n        id: \"learnMoreNext\",\n        message: learnMoreNext(),\n        trigger: \"learnMoreUser\",\n      },\n      {\n        id: \"shopSelected\",\n        message: shopNowMsg(),\n        trigger: \"userOne\",\n      },\n      {\n        id: \"userOne\",\n        user: true,\n        // waitAction: true,\n        trigger: \"5\",\n      },\n      {\n        id: 5,\n        component: <ChatUserOneRet />,\n        waitAction: true,\n        asMessage: true,\n      },\n      // {\n      //   id: \"trackNow\",\n      //   message: msgTrackNow(),\n      //   trigger: \"getTrackingId\"\n      // },\n      {\n        id: \"trackNowLogin\",\n        // message: msgTrackNow(),\n        component: <ChatOrderList />,\n        trigger: \"trackNowLoginNext\",\n        waitAction: true,\n      },\n      {\n        id: \"trackNowLoginNext\",\n        message: (pp) => {\n          setTimeout(() => {\n            window.open(\"https://www.google.com\");\n          }, 2000);\n          return redirectForTracking();\n        },\n        trigger: \"repeat\",\n      },\n      {\n        id: \"trackNow\",\n        user: true,\n        validator: (value) => {\n          if (isEmpty(value)) {\n            return emptyTrackingIdErr();\n          }\n          return true;\n        },\n        trigger: (props) => {\n          return \"repeat\";\n        },\n      },\n      {\n        id: \"categoryList\",\n        component: <ChatCategoryList />,\n        waitAction: true,\n        // asMessage: true,\n        trigger: \"postCategory\",\n      },\n      {\n        id: \"postCategory\",\n        message: ({ previousValue }) => {\n          return getMsgAfterCategory(previousValue);\n        },\n        trigger: \"preProduct\",\n      },\n      {\n        id: \"preProduct\",\n        message: getProductListMsg(),\n        trigger: \"preProduct2\",\n      },\n      {\n        id: \"preProduct2\",\n        message: pickProductMsg(),\n        trigger: \"products\",\n      },\n      {\n        id: \"products\",\n        component: <ChatProductList />,\n        waitAction: true,\n        trigger: \"productSelected1\",\n        // end: true\n      },\n      {\n        id: \"productSelected1\",\n        message: \"Awesome! 😍\",\n        trigger: (props) => {\n          return \"productSelected2\";\n        },\n      },\n      {\n        id: \"productSelected2\",\n        message: ({ steps }) => {\n          return getProductChooseMsg(steps.products.value.productTitle);\n          // return `${steps.products.value.productTitle} is my favourite`\n        },\n        // end: true\n        trigger: \"afterProduct\",\n      },\n      {\n        id: \"afterProduct\",\n        message: afterProduct(),\n        trigger: \"singleProduct\",\n      },\n      {\n        id: \"singleProduct\",\n        component: <ChatProductCard />,\n        trigger: \"productNext\",\n      },\n      {\n        id: \"productNext\",\n        message: afterProductFinish(),\n        trigger: \"firstOptions\",\n      },\n      {\n        id: \"checkout\",\n        message: () => {\n          if (items && items.length > 0) {\n            return checkoutRedirectMsg();\n          }\n          return checkoutNoItemMsg();\n        },\n        trigger: () => {\n          if (items && items.length > 0) {\n            return \"checkout1\";\n          }\n          return \"repeat\";\n        },\n      },\n      {\n        id: \"checkout1\",\n        message: checkoutFinish(),\n        trigger: \"checkout2\",\n      },\n      {\n        id: \"checkout2\",\n        message: () => {\n          // const { history, countryCode } = this.props;\n          setTimeout(() => {\n            Router.push(`/checkout`);\n            this.toggleFloating();\n            this.clearChat();\n          }, 400);\n          return \"\";\n        },\n        end: true,\n      },\n      {\n        id: \"contact\",\n        message: contactFirst(),\n        trigger: \"contactUserFirst\",\n      },\n      {\n        id: \"contactUserFirst\",\n        user: true,\n        // waitAction: true,\n        trigger: ({ value }) => {\n          if (isEmail(value)) return \"contactTwo\";\n          else {\n            return \"contactUserErr\";\n          }\n        },\n      },\n      {\n        id: \"contactUserErr\",\n        message: contactErrMsgOne(),\n        trigger: \"contactUserErr2\",\n      },\n      {\n        id: \"contactUserErr2\",\n        message: contactErrMsgTwo(),\n        trigger: \"contactUserFirst\",\n      },\n      {\n        id: \"contactTwo\",\n        message: contactSecond(),\n        trigger: \"contactUserSecond\",\n      },\n      {\n        id: \"contactUserSecond\",\n        user: true,\n        // waitAction: true,\n        trigger: \"contactThree\",\n      },\n      {\n        id: \"contactThree\",\n        message: contactThird(),\n        trigger: \"contactFourth\",\n      },\n      {\n        id: \"contactFourth\",\n        message: contactFourth(),\n        trigger: \"repeat\",\n      },\n      {\n        id: \"repeat\",\n        message: repeatMsg(),\n        trigger: \"firstOptions\",\n      },\n    ].filter((el) => el);\n\n    if (clear) return <div />;\n\n    return (\n      <div className=\"react-chat-bot\">\n        <div className=\"chat-inner\">\n          <ThemeProvider theme={theme}>\n            <ChatBot\n              opened={opened}\n              toggleFloating={this.toggleFloating}\n              floatingStyle={{\n                bottom: \"42px\",\n              }}\n              enableMobileAutoFocus={true}\n              floating={true}\n              botAvatar={`${imageUrl}/Logo-chat.png`}\n              bubbleStyle={{\n                marginBottom: 0,\n                // marginTop: \"10px\",\n                maxWidth: \"70%\",\n\n                fontSize: \"16px\",\n                boxShadow: \"none\",\n              }}\n              inputAttributes={{\n                placeHolder: \"Type the \",\n              }}\n              bubbleOptionStyle={{\n                marginBottom: 0,\n                marginTop: \"10px\",\n\n                fontSize: \"16px\",\n                boxShadow: \"none\",\n                borderBottom: \"1px solid currentColor\",\n                paddingRight: \"30px\",\n                fontWeight: \"600\",\n                paddingLeft: \"0\",\n                paddingBottom: \"0\",\n                marginRight: \"10px\",\n                minWidth: \"40%\",\n              }}\n              style={{\n                width: \"450px\",\n                maxWidth: \"100%\",\n\n                bottom: 0,\n                right: isOpen ? \"380px\" : \"32px\",\n                transition: \"all 0.4s ease 0s\",\n              }}\n              customStyle={{\n                boxShadow: \"none\",\n                justifyContent: \"left\",\n                marginLeft: \"46px\",\n              }}\n              steps={chat}\n            />\n          </ThemeProvider>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isOpen: state.drawers.isCartOpen,\n  countryCode: state.location.countryCode,\n  items: state.cart.items,\n});\nexport default connect(mapStateToProps)(ChatBotElement);\n"]},"metadata":{},"sourceType":"module"}