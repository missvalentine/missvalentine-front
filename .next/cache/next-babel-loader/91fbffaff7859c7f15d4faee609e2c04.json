{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_CARDS, SET_ERRORS, CLEAR_ERRORS, SET_USER } from \"./type\";\nimport { authorizeAddCard, updateUserDetails, getUserDetails, authorizeDeleteCard } from \"../../services/api\";\nexport var setCards = function setCards(payload) {\n  return {\n    type: SET_CARDS,\n    payload: payload\n  };\n};\nexport var getCards = function getCards(id) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              getUserDetails(id).then(function (resRaw) {\n                var res = resRaw.data;\n                console.log(res);\n                var cards = returnCards(res);\n                dispatch(setCards(cards));\n              })[\"catch\"](function (err) {\n                return console.log({\n                  err: err\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var addCardAuthorize = function addCardAuthorize(data) {\n  return function (dispatch) {\n    var user = data.user,\n        card = data.card,\n        bank = data.bank,\n        oldCards = data.oldCards;\n    var userMetaId = user.userMetaId,\n        _id = user._id,\n        userMetaObj = user.userMetaObj;\n    console.log({\n      data: data,\n      dispatch: dispatch\n    });\n\n    var sendCardDetails = function sendCardDetails(customData, userId) {\n      console.log({\n        customData: customData,\n        userId: userId\n      });\n      authorizeAddCard(customData).then(function (response) {\n        var res = response.data;\n        var status = res.status,\n            card = res.card;\n\n        if (status && card && card.paymentProfile && card.messages && card.messages.resultCode === \"Ok\") {\n          //   if (userId) {\n          //     updateUserMeta(userId);\n          //   }\n          var _card$paymentProfile = card.paymentProfile,\n              customerProfileId = _card$paymentProfile.customerProfileId,\n              customerPaymentProfileId = _card$paymentProfile.customerPaymentProfileId,\n              payment = _card$paymentProfile.payment;\n\n          var newCard = _objectSpread({\n            customerProfileId: customerProfileId,\n            customerPaymentProfileId: customerPaymentProfileId\n          }, payment);\n\n          var allCardsPre = oldCards ? [].concat(_toConsumableArray(oldCards), [newCard]) : [newCard];\n          var defaultCard = allCardsPre.find(function (el) {\n            return el.isDefault === true;\n          });\n          var allCards = allCardsPre.map(function (el, index) {\n            if (index === 0 && !defaultCard) return _objectSpread(_objectSpread({}, el), {}, {\n              isDefault: true\n            });\n            return el;\n          });\n          updateUserDetails({\n            userid: _id,\n            carddetails: {\n              cards: allCards\n            }\n          }).then(function (response) {\n            console.log({\n              response: response\n            });\n            var res = response.data;\n            var cards = returnCards(res);\n            dispatch(setCards(cards)); // getUserMetaNoCart(userId);\n\n            dispatch({\n              type: CLEAR_ERRORS,\n              payload: {}\n            });\n            getUserDetails(userId).then(function (response) {\n              var res = response.data;\n\n              if (res.user && res.user._id) {\n                console.log(\"user meta found\", res);\n                dispatch({\n                  type: SET_USER,\n                  payload: _objectSpread(_objectSpread({}, res.user.userid), {}, {\n                    userMetaId: res.user._id,\n                    userMetaObj: res.user\n                  })\n                });\n              }\n            });\n          })[\"catch\"](function (err) {\n            dispatch({\n              type: SET_ERRORS,\n              payload: {\n                cards: [\"Some thing wrong\"]\n              }\n            });\n            getUserDetails(userId).then(function (response) {\n              var res = response.data;\n\n              if (res.user && res.user._id) {\n                console.log(\"user meta found\", res);\n                dispatch({\n                  type: SET_USER,\n                  payload: _objectSpread(_objectSpread({}, res.user.userid), {}, {\n                    userMetaId: res.user._id,\n                    userMetaObj: res.user\n                  })\n                });\n              }\n            });\n            console.log({\n              err: err\n            });\n          });\n          console.log({\n            customerProfileId: customerProfileId,\n            customerPaymentProfileId: customerPaymentProfileId,\n            payment: payment,\n            customData: customData\n          });\n        } else {\n          dispatch({\n            type: SET_ERRORS,\n            payload: {\n              cards: [\"Some thing wrong\"]\n            }\n          });\n        }\n      });\n    };\n\n    var chooseCardOrBank = function chooseCardOrBank(userMetaId, userMetaObj) {\n      var customerProfile = userMetaObj.customerProfile;\n\n      if (customerProfile) {\n        if (card) {\n          var cardnumber = card.cardnumber,\n              cvc = card.cvc,\n              expmonth = card.expmonth,\n              expyear = card.expyear;\n          var creditcard = {\n            cardNumber: cardnumber.split(\"-\").join(\"\"),\n            expirationDate: \"20\".concat(expyear, \"-\").concat(expmonth),\n            cardCode: cvc\n          };\n          sendCardDetails({\n            creditcard: creditcard,\n            profileid: customerProfile\n          });\n        } else if (bank) {\n          sendCardDetails({\n            bank: bank,\n            profileid: customerProfile\n          });\n        }\n      } else {\n        if (card) {\n          var _cardnumber = card.cardnumber,\n              _cvc = card.cvc,\n              _expmonth = card.expmonth,\n              _expyear = card.expyear;\n          var _creditcard = {\n            cardNumber: _cardnumber.split(\"-\").join(\"\"),\n            expirationDate: \"20\".concat(_expyear, \"-\").concat(_expmonth),\n            cardCode: _cvc\n          };\n          var userMetaIdId = userMetaId._id ? userMetaId._id : typeof userMetaId === \"string\" && userMetaId;\n          sendCardDetails({\n            creditcard: _creditcard,\n            email: userMetaIdId + \"@cbdbene.com\",\n            metaid: userMetaIdId\n          }, _id);\n        } else if (bank) {\n          var _userMetaIdId = userMetaId._id ? userMetaId._id : typeof userMetaId === \"string\" && userMetaId;\n\n          sendCardDetails({\n            bank: bank,\n            email: _userMetaIdId + \"@cbdbene.com\",\n            metaid: _userMetaIdId\n          }, _id);\n        }\n      }\n    };\n\n    if (userMetaObj && userMetaId) {\n      chooseCardOrBank(userMetaId, userMetaObj);\n    } else if (_id) {\n      getUserDetails(_id).then(function (res) {\n        console.log({\n          res: res\n        });\n        var user = res.data.user;\n        var userMetaId = user._id;\n        var userMetaObj = data.user;\n        chooseCardOrBank(userMetaId, userMetaObj);\n      });\n    }\n  };\n};\n\nvar returnCards = function returnCards(res) {\n  if (res.user) {\n    if (res.user.carddetails) {\n      return res.user.carddetails;\n    }\n  }\n\n  return {};\n};\n\nexport var addCard = function addCard(userid, card) {\n  var oldDetail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var oldCards = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  return function (dispatch) {\n    console.log({\n      userid: userid,\n      card: card\n    });\n    var found = oldCards.find(function (el) {\n      return el.id === card.id;\n    });\n    console.log({\n      found: found\n    });\n\n    if (found) {\n      dispatch(editCard(userid, card, oldDetail, oldCards));\n    } else {\n      var allCardsPre = oldCards ? [].concat(_toConsumableArray(oldCards), [card]) : [card];\n      var defaultCard = allCardsPre.find(function (el) {\n        return el.isDefault === true;\n      });\n      var allCards = allCardsPre.map(function (el, index) {\n        if (index === 0 && !defaultCard) return _objectSpread(_objectSpread({}, el), {}, {\n          isDefault: true\n        });\n        return el;\n      });\n      updateUserDetails({\n        userid: userid,\n        carddetails: _objectSpread(_objectSpread({}, oldDetail), {}, {\n          cards: allCards\n        })\n      }).then(function (rep) {\n        var res = rep.data;\n        console.log({\n          res: res\n        });\n        var cards = returnCards(res);\n        dispatch(setCards(cards));\n      })[\"catch\"](function (err) {\n        console.log({\n          err: err\n        });\n      });\n    }\n  };\n};\nexport var editCard = function editCard(userid, card) {\n  var oldDetail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var oldCards = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  return function (dispatch) {\n    var newCard = oldCards.map(function (el) {\n      if (el.id === card.id) return card;\n      return el;\n    });\n    addUpdateUserDetails({\n      userid: userid,\n      carddetails: _objectSpread(_objectSpread({}, oldDetail), {}, {\n        cards: newCard\n      })\n    }).then(function (rep) {\n      var res = rep.data;\n      console.log({\n        res: res\n      });\n      var cards = returnCards(res);\n      dispatch(setCards(cards));\n    })[\"catch\"](function (err) {\n      console.log({\n        err: err\n      });\n    });\n  };\n};\nexport var deleteCard = function deleteCard(userid, card) {\n  var oldDetail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var oldCards = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  return function (dispatch) {\n    var newCard = oldCards.filter(function (el) {\n      return el.customerPaymentProfileId !== card.customerPaymentProfileId;\n    });\n    authorizeDeleteCard({\n      paymentid: card.customerPaymentProfileId,\n      profileid: card.customerProfileId\n    }).then(function (rep) {\n      var res = rep.data;\n      console.log({\n        res: res\n      });\n\n      if (res && res.data && res.data.messages && res.data.messages.resultCode === \"Ok\") {\n        var defaultCard = newCard.find(function (el) {\n          return el.isDefault === true;\n        });\n        var allCards = newCard.map(function (el, index) {\n          if (index === 0 && !defaultCard) return _objectSpread(_objectSpread({}, el), {}, {\n            isDefault: true\n          });\n          return el;\n        });\n        updateUserDetails({\n          userid: userid,\n          carddetails: _objectSpread(_objectSpread({}, oldDetail), {}, {\n            cards: allCards\n          })\n        }).then(function (rep) {\n          var res = rep.data;\n          console.log({\n            res: res\n          });\n          var cards = returnCards(res);\n          dispatch(setCards(cards));\n        })[\"catch\"](function (err) {\n          console.log({\n            err: err\n          });\n        });\n      }\n    });\n  };\n};\nexport var setDefaultCard = function setDefaultCard(userid, id) {\n  var oldDetail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var oldCards = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  return function (dispatch) {\n    var newCard = oldCards.map(function (el) {\n      return _objectSpread(_objectSpread({}, el), {}, {\n        isDefault: el.customerPaymentProfileId === id\n      });\n    });\n    updateUserDetails({\n      userid: userid,\n      carddetails: _objectSpread(_objectSpread({}, oldDetail), {}, {\n        cards: newCard\n      })\n    }).then(function (rep) {\n      var res = rep.data;\n      console.log({\n        res: res\n      });\n      var cards = returnCards(res);\n      dispatch(setCards(cards));\n    })[\"catch\"](function (err) {\n      console.log({\n        err: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missnew front/redux/actions/cards.js"],"names":["SET_CARDS","SET_ERRORS","CLEAR_ERRORS","SET_USER","authorizeAddCard","updateUserDetails","getUserDetails","authorizeDeleteCard","setCards","payload","type","getCards","id","dispatch","then","resRaw","res","data","console","log","cards","returnCards","err","addCardAuthorize","user","card","bank","oldCards","userMetaId","_id","userMetaObj","sendCardDetails","customData","userId","response","status","paymentProfile","messages","resultCode","customerProfileId","customerPaymentProfileId","payment","newCard","allCardsPre","defaultCard","find","el","isDefault","allCards","map","index","userid","carddetails","chooseCardOrBank","customerProfile","cardnumber","cvc","expmonth","expyear","creditcard","cardNumber","split","join","expirationDate","cardCode","profileid","userMetaIdId","email","metaid","addCard","oldDetail","found","editCard","rep","addUpdateUserDetails","deleteCard","filter","paymentid","setDefaultCard"],"mappings":"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","sourcesContent":["import { SET_CARDS, SET_ERRORS, CLEAR_ERRORS, SET_USER } from \"./type\";\nimport { \n  authorizeAddCard, \n  updateUserDetails, \n  getUserDetails,\n  authorizeDeleteCard\n} from \"../../services/api\";\nexport const setCards = payload => ({\n  type: SET_CARDS,\n  payload\n});\n\nexport const getCards = id => async dispatch => {\n  getUserDetails(id)\n    .then(resRaw => {\n      const res = resRaw.data\n      console.log(res);\n      const cards = returnCards(res);\n      dispatch(setCards(cards));\n    })\n    .catch(err => console.log({ err }));\n};\n\nexport const addCardAuthorize = data => dispatch => {\n  const { user, card, bank, oldCards } = data;\n  const { userMetaId, _id, userMetaObj } = user;\n  console.log({\n    data, dispatch\n  })\n  const sendCardDetails = (customData, userId) => {\n    console.log({\n      customData,\n      userId\n    });\n    authorizeAddCard(customData)\n      .then(response => {\n        const res = response.data\n        const { status, card } = res;\n        if (\n          status &&\n          card &&\n          card.paymentProfile &&\n          card.messages &&\n          card.messages.resultCode === \"Ok\"\n        ) {\n        //   if (userId) {\n        //     updateUserMeta(userId);\n        //   }\n\n          const {\n            customerProfileId,\n            customerPaymentProfileId,\n            payment\n          } = card.paymentProfile;\n\n          const newCard = {\n            customerProfileId,\n            customerPaymentProfileId,\n            ...payment\n          };\n          const allCardsPre = oldCards ? [...oldCards, newCard] : [newCard]\n          const defaultCard = allCardsPre.find(el => el.isDefault === true)\n          const allCards = allCardsPre.map((el, index)=> {\n            if(index === 0 && !defaultCard)\n              return ({\n                ...el,\n                isDefault: true\n              })\n            return el\n          })\n          updateUserDetails({\n            userid: _id,\n            carddetails: {\n              cards: allCards\n            }\n          })\n            .then(response => {\n              console.log({ response });\n              const res = response.data\n              const cards = returnCards(res);\n              dispatch(setCards(cards));\n              // getUserMetaNoCart(userId);\n              dispatch({\n                type: CLEAR_ERRORS,\n                payload: {}\n              });\n              getUserDetails(userId)\n                .then(response => {\n                  const res = response.data\n                  if (res.user && res.user._id) {\n                    console.log(\"user meta found\", res);\n                    dispatch({\n                      type: SET_USER,\n                      payload: {\n                        ...res.user.userid,\n                        userMetaId: res.user._id,\n                        userMetaObj: res.user\n                      }\n                    });\n                  }\n                });\n            })\n            .catch(err => {\n              dispatch({\n                type: SET_ERRORS,\n                payload: {\n                  cards: [\"Some thing wrong\"]\n                }\n              });\n\n              getUserDetails(userId)\n                .then(response => {\n                    const res = response.data\n                  if (res.user && res.user._id) {\n                    console.log(\"user meta found\", res);\n                    dispatch({\n                      type: SET_USER,\n                      payload: {\n                        ...res.user.userid,\n                        userMetaId: res.user._id,\n                        userMetaObj: res.user\n                      }\n                    });\n                  }\n                });\n              console.log({ err });\n            });\n          console.log({\n            customerProfileId,\n            customerPaymentProfileId,\n            payment,\n            customData\n          });\n        } else {\n          dispatch({\n            type: SET_ERRORS,\n            payload: {\n              cards: [\"Some thing wrong\"]\n            }\n          });\n        }\n      });\n  };\n  const chooseCardOrBank = (userMetaId, userMetaObj) => {\n    const { customerProfile } = userMetaObj;\n    if (customerProfile) {\n      if (card) {\n        const { cardnumber, cvc, expmonth, expyear } = card;\n        const creditcard = {\n          cardNumber: cardnumber.split(\"-\").join(\"\"),\n          expirationDate: `20${expyear}-${expmonth}`,\n          cardCode: cvc\n        };\n        sendCardDetails({\n          creditcard,\n          profileid: customerProfile\n        });\n      } else if (bank) {\n        sendCardDetails({\n          bank,\n          profileid: customerProfile\n        });\n      }\n    } else {\n      if (card) {\n        const { cardnumber, cvc, expmonth, expyear } = card;\n        const creditcard = {\n          cardNumber: cardnumber.split(\"-\").join(\"\"),\n          expirationDate: `20${expyear}-${expmonth}`,\n          cardCode: cvc\n        };\n        const userMetaIdId = userMetaId._id ? userMetaId._id : ( typeof userMetaId === \"string\" && userMetaId ) \n        sendCardDetails(\n          {\n            creditcard,\n            email: userMetaIdId + \"@cbdbene.com\",\n            metaid: userMetaIdId\n          },\n          _id\n        );\n      } else if (bank) {\n        const userMetaIdId = userMetaId._id ? userMetaId._id : ( typeof userMetaId === \"string\" && userMetaId ) \n        sendCardDetails(\n          {\n            bank,\n            email: userMetaIdId + \"@cbdbene.com\",\n            metaid: userMetaIdId\n          },\n          _id\n        );\n      }\n    }\n  }\n  if (userMetaObj && userMetaId) {\n    chooseCardOrBank(userMetaId, userMetaObj, )\n  }else if(_id){\n    getUserDetails(_id).then(res => {\n      console.log({ res });\n      const {\n        user\n      } = res.data\n      const userMetaId = user._id;\n      const userMetaObj = data.user;\n      chooseCardOrBank(userMetaId, userMetaObj, )\n    })\n  }\n};\nconst returnCards = res => {\n  if (res.user) {\n    if (res.user.carddetails) {\n      return res.user.carddetails;\n    }\n  }\n  return {};\n};\nexport const addCard = (\n  userid,\n  card,\n  oldDetail = {},\n  oldCards = []\n) => dispatch => {\n  console.log({\n    userid,\n    card\n  });\n  const found = oldCards.find(el => el.id === card.id);\n  console.log({\n    found\n  });\n  if (found) {\n    dispatch(editCard(userid, card, oldDetail, oldCards));\n  } else {\n    \n    const allCardsPre = oldCards ? [...oldCards, card] : [card]\n    const defaultCard = allCardsPre.find(el => el.isDefault === true)\n    const allCards = allCardsPre.map((el, index)=> {\n      if(index === 0 && !defaultCard)\n        return ({\n          ...el,\n          isDefault: true\n        })\n      return el\n    })\n    updateUserDetails({\n      userid,\n      carddetails: {\n        ...oldDetail,\n        cards: allCards\n      }\n    })\n      .then(rep => {\n        const res = rep.data\n        console.log({ res });\n        const cards = returnCards(res);\n        dispatch(setCards(cards));\n      })\n      .catch(err => {\n        console.log({ err });\n      });\n  }\n};\nexport const editCard = (\n  userid,\n  card,\n  oldDetail = {},\n  oldCards = []\n) => dispatch => {\n  const newCard = oldCards.map(el => {\n    if (el.id === card.id) return card;\n\n    return el;\n  });\n  addUpdateUserDetails({\n    userid,\n    carddetails: {\n      ...oldDetail,\n      cards: newCard\n    }\n  })\n    .then(rep => {\n      const res = rep.data\n      console.log({ res });\n      const cards = returnCards(res);\n      dispatch(setCards(cards));\n    })\n    .catch(err => {\n      console.log({ err });\n    });\n};\nexport const deleteCard = (\n  userid,\n  card,\n  oldDetail = {},\n  oldCards = []\n) => dispatch => {\n  const newCard = oldCards.filter(\n    el => el.customerPaymentProfileId !== card.customerPaymentProfileId\n  );\n\n  authorizeDeleteCard({\n    paymentid: card.customerPaymentProfileId,\n    profileid: card.customerProfileId\n  })\n    .then(rep => {\n      const res = rep.data\n      console.log({\n        res\n      });\n      if (\n        res &&\n        res.data &&\n        res.data.messages &&\n        res.data.messages.resultCode === \"Ok\"\n      ) {\n        \n        const defaultCard = newCard.find(el => el.isDefault === true)\n        const allCards = newCard.map((el, index)=> {\n          if(index === 0 && !defaultCard)\n            return ({\n              ...el,\n              isDefault: true\n            })\n          return el\n        })\n        updateUserDetails({\n          userid,\n          carddetails: {\n            ...oldDetail,\n            cards: allCards\n          }\n        })\n          .then(rep => {\n            const res = rep.data\n            console.log({ res });\n            const cards = returnCards(res);\n            dispatch(setCards(cards));\n          })\n          .catch(err => {\n            console.log({ err });\n          });\n      }\n    });\n};\nexport const setDefaultCard = (\n  userid,\n  id,\n  oldDetail = {},\n  oldCards = []\n) => dispatch => {\n  const newCard = oldCards.map(el => {\n    return {\n      ...el,\n      isDefault: el.customerPaymentProfileId === id\n    };\n  });\n\n  updateUserDetails({\n    userid,\n    carddetails: {\n      ...oldDetail,\n      cards: newCard\n    }\n  })\n    .then(rep => {\n      const res = rep.data\n      console.log({ res });\n      const cards = returnCards(res);\n      dispatch(setCards(cards));\n    })\n    .catch(err => {\n      console.log({ err });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}