{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport { baseUrl } from '../constants/projectSettings';\nexport const useHttp = async ({\n  method = 'get',\n  url,\n  data,\n  options\n}) => {\n  try {\n    console.log('http', data);\n    const auth = JSON.parse(localStorage.getItem('auth'));\n    const {\n      user,\n      token\n    } = auth;\n    let headers = {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    };\n\n    if (user) {\n      headers = _objectSpread(_objectSpread({}, headers), {}, {\n        Authorization: `Bearer ${token}`\n      });\n    }\n\n    if (options && options.headers) {\n      headers = _objectSpread(_objectSpread({}, headers), options.headers);\n    }\n\n    const res = await axios({\n      method,\n      url,\n      baseURL: baseUrl,\n      data,\n      headers: headers\n    }).then(response => {\n      return response;\n    }).catch(err => {\n      console.log(err);\n      return err;\n    });\n    return res;\n  } catch (err) {\n    console.log(err);\n    return err;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}