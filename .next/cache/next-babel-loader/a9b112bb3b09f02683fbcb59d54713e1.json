{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { connect } from 'react-redux';\nimport { setReferrer } from '../redux/actions';\nimport { makeCancelable } from \"../services/makeCancelable\";\nimport BasicFunction from \"../services/extra/basicFunction\";\nimport { addAmbassador } from \"../services/api\";\nconst basicFunction = new BasicFunction();\n\nclass AppWrapper extends React.Component {\n  componentDidMount() {\n    this.referrerSetting();\n\n    if (typeof this.props.router !== \"undefined\") {\n      const {\n        query,\n        asPath\n      } = this.props.router;\n\n      if (query.ref) {}\n    }\n  }\n\n  referrerSetting() {\n    if (false) {\n      const {\n        href,\n        pathname\n      } = window.location;\n      const {\n        setReferrer,\n        referrer\n      } = this.props;\n      var url = new URL(window.location.href);\n      const ambassador_id = url.searchParams.get(\"ref\");\n      var referralUrl = referrer.referralUrl ? referrer.referralUrl : document.referrer;\n      const cUrl = href;\n      const originalUrl = basicFunction.removeParams(cUrl, \"ref\");\n\n      if (referralUrl) {\n        if (referralUrl.includes(window.origin)) {\n          referralUrl = \"\";\n        }\n      }\n\n      if (ambassador_id) {\n        setReferrer({\n          ambassadorId: ambassador_id,\n          ambassadorUrl: referralUrl,\n          referralUrl: referralUrl\n        });\n        this.cancelableRef = makeCancelable(addAmbassador({\n          ambass_id: ambassador_id,\n          url: originalUrl,\n          refer_url: referralUrl\n        }), res => {\n          const resJson = res.data;\n\n          if (resJson.status) {\n            setReferrer({\n              referralUrl: null\n            });\n\n            if (resJson.referral) {\n              setReferrer({\n                referralUrlId: resJson.referral._id\n              });\n            }\n          } else {\n            this.setState({\n              modal: true,\n              affMsg: \"Invalid Referral Url .\"\n            }); //   setTimeout(() => {\n            //     this.props.history.push(url)                      this.props.history.push(url);\n            //   }, 2000);\n          }\n        }, err => {\n          this.setState({\n            modal: true,\n            affMsg: \"Invalid Referral Url .\"\n          });\n          setTimeout(() => {\n            this.props.history.push(url);\n          }, 2000);\n        });\n      }\n    }\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, this.props.children);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  referrer: state.referrer\n});\n\nexport default connect(mapStateToProps, {\n  setReferrer\n})(AppWrapper);","map":null,"metadata":{},"sourceType":"module"}