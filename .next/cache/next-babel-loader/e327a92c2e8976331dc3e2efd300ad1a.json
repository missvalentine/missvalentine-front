{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { getColorCode } from '../utilis/customFunctions';\nimport { useRouter } from 'next/router';\nimport '../components/styles/app.scss';\nimport { Button } from 'antd';\nimport { HeartOutlined, HeartFilled, HeartTwoTone } from '@ant-design/icons';\nexport default function Product(props) {\n  const {\n    data,\n    isSelectable,\n    isSelected,\n    handleSelectClick\n  } = props;\n  const {\n    images,\n    name,\n    colors,\n    price,\n    shortDesc\n  } = data;\n  const router = useRouter();\n  const {\n    0: showImageNo,\n    1: setShowImageNo\n  } = useState(0);\n  const imagesCount = images.length;\n\n  const handleOnMouseEnter = () => {\n    imagesCount >= 2 && setShowImageNo(s => s + 1);\n  };\n\n  const handleOnMouseLeave = () => {\n    imagesCount >= 2 && setShowImageNo(s => s - 1);\n  };\n\n  return __jsx(\"div\", {\n    className: `c-product-card   ${isSelected && 'c-product-card--selected '}`\n  }, __jsx(\"div\", {\n    className: \"c-product-card__image-wrapper\",\n    onClick: () => !isSelected && router.push({\n      pathname: `products/${data._id}`,\n      state: data\n    })\n  }, images && images[showImageNo] && __jsx(\"img\", {\n    src: images[showImageNo].data,\n    alt: 'product image',\n    className: \"c-product-card__image\",\n    onMouseEnter: handleOnMouseEnter,\n    onMouseLeave: handleOnMouseLeave\n  }), __jsx(\"div\", {\n    className: \"c-product-card__image-text\"\n  })), __jsx(\"div\", {\n    className: \"c-product-card__details\"\n  }, __jsx(\"div\", {\n    className: \"c-product-card__details-name\",\n    onClick: () => !isSelected && router.push({\n      pathname: `products/${data._id}`,\n      state: data\n    })\n  }, name), __jsx(\"div\", {\n    className: \"c-product-card__details-desc\"\n  }, shortDesc), price && price !== '' && __jsx(\"div\", {\n    className: \"c-product-card__details-price\"\n  }, \"Rs. \", price), __jsx(\"div\", {\n    className: \"c-product-card__details-colors\"\n  }, colors.map((c, i) => __jsx(\"div\", {\n    className: \"c-product-card__details-color\"\n  }, __jsx(\"div\", {\n    style: {\n      backgroundColor: getColorCode(c)\n    }\n  })))), isSelectable && __jsx(Button, {\n    type: isSelected ? 'primary' : 'default',\n    shape: \"rounded\",\n    onClick: () => handleSelectClick(data)\n  }, isSelected ? 'Selected' : 'Select')));\n}","map":null,"metadata":{},"sourceType":"module"}