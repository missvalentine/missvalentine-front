{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport dynamic from 'next/dynamic';\nvar CartItem = dynamic(function () {\n  return import(\"./CartItem\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"./CartItem\")];\n    },\n    modules: [\"./CartItem\"]\n  }\n});\nvar Button = dynamic(function () {\n  return import(\"./form-components/Button\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"./form-components/Button\")];\n    },\n    modules: [\"./form-components/Button\"]\n  }\n});\nimport { connect } from \"react-redux\";\nimport { getProductTitle, getProductShortDesc, getProductImage } from \"../services/helpers/product\";\nimport { getGrandTotal } from \"../services/helpers/cart\";\nimport { numberFormat } from \"../services/helpers/misc\";\nimport { initialCart } from \"../constants/reduxInitialStates\";\nimport { modifyItem, removeFromCart, hideCartBar, setCoupon as setStateCoupon, removeCoupon } from \"../redux/actions\";\nimport Link from \"next/link\";\nvar Heading = dynamic(function () {\n  return import(\"./Heading\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"./Heading\")];\n    },\n    modules: [\"./Heading\"]\n  }\n});\nvar Input = dynamic(function () {\n  return import(\"./form-components/Input\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"./form-components/Input\")];\n    },\n    modules: [\"./form-components/Input\"]\n  }\n});\nimport { useEffect, useState } from \"react\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { getCoupon } from \"../services/apis/checkout\";\n\nvar CartDrawer = function CartDrawer(_ref) {\n  var complete = _ref.complete,\n      cart = _ref.cart,\n      modifyItem = _ref.modifyItem,\n      removeFromCart = _ref.removeFromCart,\n      hideCartBar = _ref.hideCartBar,\n      setStateCoupon = _ref.setStateCoupon,\n      removeCoupon = _ref.removeCoupon;\n\n  var _useState = useState(\"\"),\n      coupon = _useState[0],\n      setCoupon = _useState[1];\n\n  var handleInput = function handleInput(e) {\n    setCoupon(e.target.value.toUpperCase());\n\n    if (e.target.value === \"\" && cart.taxCouponCode != \"\") {\n      removeCoupon(cart);\n    }\n  };\n\n  useEffect(function () {\n    if (cart.taxCouponDiscount != 0) {\n      setCoupon(cart.taxCouponCode);\n    }\n  }, []);\n\n  var handleDiscount = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$getCoupon, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getCoupon(coupon);\n\n            case 2:\n              _yield$getCoupon = _context.sent;\n              data = _yield$getCoupon.data;\n\n              if (data.status) {\n                setStateCoupon(data.coupon.data.filter(function (data) {\n                  return data.id === coupon;\n                })[0], cart);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleDiscount() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); //console.log(cart);\n\n\n  var qtyChange = function qtyChange(qty, oldItem) {\n    modifyItem({\n      oldItem: oldItem,\n      newItem: _objectSpread(_objectSpread({}, oldItem), {}, {\n        qty: qty\n      })\n    });\n  };\n\n  var grandTotal = getGrandTotal(cart.subTotal, cart.taxPercent, cart.shippingCharge, cart.taxCouponDiscount);\n  console.log(cart);\n  var hasItems = cart.items.length > 0 ? true : false;\n  var taxPrice = cart.taxCouponDiscount ? (cart.taxCouponDiscount / 100 * cart.subTotal).toFixed(2) : 0;\n  var shippingCharge = (cart.shippingCharge || 0).toFixed(2) || 0;\n  console.log(taxPrice, cart.taxPercent);\n  return __jsx(\"div\", {\n    className: \"c-cart-drawer\"\n  }, hasItems && __jsx(React.Fragment, null, cart.items.map(function (el, i) {\n    // console.log(el);\n    return __jsx(CartItem, {\n      key: i,\n      title: getProductTitle(el),\n      image: getProductImage(el),\n      subTitle: getProductShortDesc(el),\n      price: \"$\".concat(numberFormat(parseFloat(el.saleprice) * el.qty)),\n      quantity: el.qty,\n      onRemove: function onRemove() {\n        return removeFromCart(el);\n      },\n      isDisabled: !cart.isEditable,\n      onQtyChange: function onQtyChange(e) {\n        if (cart.isEditable) qtyChange(e, el);\n      }\n    });\n  }), __jsx(\"div\", {\n    className: \"mt-auto\"\n  }), complete && __jsx(React.Fragment, null, __jsx(CartItem, {\n    small: true,\n    title: \"Subtotal\",\n    price: \"$\".concat(numberFormat(parseFloat(cart.subTotal))),\n    total: true,\n    versions: [\"small\", \"no-border\"]\n  }), __jsx(CartItem, {\n    small: true,\n    title: \"Shipping\",\n    price: \"$\".concat(shippingCharge),\n    total: true // versions={cart.taxPercent ? [\"small\", \"no-border\"] : [\"small\"]}\n    ,\n    versions: [\"small\", \"no-border\"]\n  }), taxPrice > 0 && __jsx(CartItem, {\n    small: true,\n    title: \"Discount\" // price={`${(cart.taxPercent) ? cart.taxPercent : 0}`}\n    ,\n    price: \"-$\".concat(taxPrice),\n    total: true,\n    versions: [\"small\", \"no-border\"]\n  }), cart.taxPercent > 0 && __jsx(CartItem, {\n    small: true,\n    title: \"Tax\" // price={`${(cart.taxPercent) ? cart.taxPercent : 0}`}\n    ,\n    price: \"$\".concat(numberFormat(parseFloat(cart.taxPercent * cart.subTotal))),\n    total: true,\n    versions: [\"small\", \"no-border\"]\n  }), __jsx(CartItem, {\n    title: \"Total\",\n    price: \"$\".concat(grandTotal),\n    total: true,\n    versions: [\"no-border\"]\n  }), __jsx(\"div\", {\n    className: \"c-cart-drawer__discount-flex\"\n  }, __jsx(Input, {\n    value: coupon,\n    onChange: handleInput,\n    placeholder: \"Discount Code\",\n    versions: [\"discount\"]\n  }), __jsx(Button, {\n    onClick: handleDiscount,\n    type: \"submit\",\n    versions: [\"discount\"],\n    value: \"Apply\"\n  }))), !complete && __jsx(React.Fragment, null, __jsx(CartItem, {\n    title: \"subtotal\",\n    price: \"$\".concat(numberFormat(parseFloat(cart.subTotal))),\n    total: true,\n    versions: [\"no-border\"]\n  }), __jsx(\"div\", {\n    className: \"c-cart-drawer__btn-wrapper row justify-content-center\"\n  }, __jsx(Link, {\n    href: \"/checkout\"\n  }, __jsx(\"a\", {\n    className: \"c-btn c-btn--block c-btn--dark mt-5\",\n    style: {\n      marginBottom: \"4rem\"\n    }\n  }, \"Proceed to checkout\"))))), !hasItems && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"c-cart-drawer__emptyCart\"\n  }, __jsx(LazyLoadImage, {\n    className: \"c-cart-drawer__emptyCart--icon\",\n    src: \"/images/empty-cart.png\",\n    alt: \"Empty Cart..\"\n  })), __jsx(Heading, {\n    parentClass: \"c-cart-item\",\n    versions: [\"dark\"],\n    style: {\n      textAlign: \"center\"\n    }\n  }, \"Your bag is empty\"), __jsx(\"div\", {\n    className: \"c-cart-drawer__btn-wrapper mt-auto mb-4 row justify-content-center\"\n  }, __jsx(Link, {\n    href: \"/shop\"\n  }, __jsx(\"a\", {\n    onClick: hideCartBar,\n    className: \"c-btn c-btn--block c-btn--dark\"\n  }, \"Continue shopping\")))));\n};\n\nCartDrawer.defaultProps = {\n  complete: false,\n  cart: initialCart\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cart: state.cart\n  };\n};\n\nexport default connect(mapStateToProps, {\n  modifyItem: modifyItem,\n  removeFromCart: removeFromCart,\n  hideCartBar: hideCartBar,\n  setStateCoupon: setStateCoupon,\n  removeCoupon: removeCoupon\n})(CartDrawer);","map":null,"metadata":{},"sourceType":"module"}