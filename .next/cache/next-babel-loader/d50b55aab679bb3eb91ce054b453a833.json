{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { updateUserDetails, getUserDetails } from \"../../services/apis/user\";\nimport { SET_ADDRESS } from \"./type\";\nexport var setAddress = function setAddress(payload) {\n  return {\n    type: SET_ADDRESS,\n    payload: payload\n  };\n};\nexport var getAddress = function getAddress(id) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              getUserDetails(id).then(function (res) {\n                console.log(res);\n\n                if (res.data.user) {\n                  if (res.data.user.shippingdetails) {\n                    dispatch(setAddress(res.data.user.shippingdetails));\n                  } else {\n                    dispatch(setAddress({}));\n                  }\n                } else {\n                  dispatch(setAddress({}));\n                }\n              })[\"catch\"](console.log);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nvar returnAddress = function returnAddress(res) {\n  if (res.user) {\n    if (res.user.shippingdetails) {\n      return res.user.shippingdetails;\n    }\n  }\n\n  return {};\n};\n\nexport var addAddress = function addAddress(userid, address) {\n  var oldDetail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var oldAddress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  return function (dispatch) {\n    if (address.constructor === Array) {\n      var addressArr = address.filter(function (el) {\n        return el;\n      });\n      var addresses1 = [].concat(_toConsumableArray(oldAddress), _toConsumableArray(addressArr)).map(function (elx) {\n        return elx;\n      });\n      var hasDefault = addresses1.find(function (el) {\n        return el.isDefault === true;\n      });\n      var addresses2 = addresses1.map(function (el, index) {\n        if (index === 0 && !hasDefault) {\n          return _objectSpread(_objectSpread({}, el), {}, {\n            isDefault: true\n          });\n        }\n\n        return el;\n      });\n      updateUserDetails({\n        userid: userid,\n        shippingdetails: _objectSpread(_objectSpread({}, oldDetail), {}, {\n          address: addresses2\n        })\n      }).then(function (res) {\n        console.log({\n          res: res\n        });\n        var address = returnAddress(res.data);\n        dispatch(setAddress(address));\n      })[\"catch\"](function (err) {\n        console.log({\n          err: err\n        });\n      });\n    } else {\n      var _addresses = [].concat(_toConsumableArray(oldAddress), [address]).map(function (elx) {\n        return elx;\n      });\n\n      var _hasDefault = _addresses.find(function (el) {\n        return el.isDefault === true;\n      });\n\n      var _addresses2 = _addresses.map(function (el, index) {\n        if (index === 0 && !_hasDefault) {\n          return _objectSpread(_objectSpread({}, el), {}, {\n            isDefault: true\n          });\n        }\n\n        return el;\n      });\n\n      updateUserDetails({\n        userid: userid,\n        shippingdetails: _objectSpread(_objectSpread({}, oldDetail), {}, {\n          address: _addresses2\n        })\n      }).then(function (res) {\n        console.log({\n          res: res\n        });\n        var address = returnAddress(res.data);\n        dispatch(setAddress(address));\n      })[\"catch\"](function (err) {\n        console.log({\n          err: err\n        });\n      });\n    }\n  };\n};\nexport var deleteAddress = function deleteAddress(userid, id) {\n  var oldDetail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var oldAddress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  return function (dispatch) {\n    var newAddress1 = oldAddress.filter(function (el) {\n      return el.id !== id;\n    });\n    var defaultAddress = newAddress1.find(function (el) {\n      return el.isDefault === true;\n    });\n    var newAddress = newAddress1.map(function (el, index) {\n      if (index === 0 && !defaultAddress) {\n        return _objectSpread(_objectSpread({}, el), {}, {\n          isDefault: true\n        });\n      }\n\n      return el;\n    });\n    updateUserDetails({\n      userid: userid,\n      shippingdetails: _objectSpread(_objectSpread({}, oldDetail), {}, {\n        address: newAddress\n      })\n    }).then(function (res) {\n      console.log({\n        res: res\n      });\n      var address = returnAddress(res.data);\n      dispatch(setAddress(address));\n    })[\"catch\"](function (err) {\n      console.log({\n        err: err\n      });\n    });\n  };\n};\nexport var setDefaultAddress = function setDefaultAddress(userid, id) {\n  var oldDetail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var oldAddress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  return function (dispatch) {\n    var newAddress = oldAddress.map(function (el) {\n      return _objectSpread(_objectSpread({}, el), {}, {\n        isDefault: el.id === id\n      });\n    });\n    updateUserDetails({\n      userid: userid,\n      shippingdetails: _objectSpread(_objectSpread({}, oldDetail), {}, {\n        address: newAddress\n      })\n    }).then(function (res) {\n      console.log({\n        res: res\n      });\n      var address = returnAddress(res.data);\n      dispatch(setAddress(address));\n    })[\"catch\"](function (err) {\n      console.log({\n        err: err\n      });\n    });\n  };\n};\nexport var editAddress = function editAddress(userid, address) {\n  var oldDetail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var oldAddress = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  return function (dispatch) {\n    var newAddress = oldAddress.map(function (el) {\n      if (el.id === address.id) return address;\n      return el;\n    });\n    updateUserDetails({\n      userid: userid,\n      shippingdetails: _objectSpread(_objectSpread({}, oldDetail), {}, {\n        address: newAddress\n      })\n    }).then(function (res) {\n      console.log({\n        res: res\n      });\n      var address = returnAddress(res.data);\n      dispatch(setAddress(address));\n    })[\"catch\"](function (err) {\n      console.log({\n        err: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/redux/actions/address.js"],"names":["updateUserDetails","getUserDetails","SET_ADDRESS","setAddress","payload","type","getAddress","id","dispatch","then","res","console","log","data","user","shippingdetails","returnAddress","addAddress","userid","address","oldDetail","oldAddress","constructor","Array","addressArr","filter","el","addresses1","map","elx","hasDefault","find","isDefault","addresses2","index","err","deleteAddress","newAddress1","defaultAddress","newAddress","setDefaultAddress","editAddress"],"mappings":"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","sourcesContent":["import { updateUserDetails, getUserDetails } from \"../../services/apis/user\";\n\nimport { SET_ADDRESS } from \"./type\";\n\nexport const setAddress = (payload) => ({\n  type: SET_ADDRESS,\n  payload,\n});\n\nexport const getAddress = (id) => async (dispatch) => {\n  getUserDetails(id)\n    .then((res) => {\n      console.log(res);\n      if (res.data.user) {\n        if (res.data.user.shippingdetails) {\n          dispatch(setAddress(res.data.user.shippingdetails));\n        } else {\n          dispatch(setAddress({}));\n        }\n      } else {\n        dispatch(setAddress({}));\n      }\n    })\n    .catch(console.log);\n};\nconst returnAddress = (res) => {\n  if (res.user) {\n    if (res.user.shippingdetails) {\n      return res.user.shippingdetails;\n    }\n  }\n  return {};\n};\nexport const addAddress = (\n  userid,\n  address,\n  oldDetail = {},\n  oldAddress = []\n) => (dispatch) => {\n  if (address.constructor === Array) {\n    const addressArr = address.filter((el) => el);\n    const addresses1 = [...oldAddress, ...addressArr].map((elx) => elx);\n    const hasDefault = addresses1.find((el) => el.isDefault === true);\n    const addresses2 = addresses1.map((el, index) => {\n      if (index === 0 && !hasDefault) {\n        return {\n          ...el,\n          isDefault: true,\n        };\n      }\n      return el;\n    });\n    updateUserDetails({\n      userid,\n      shippingdetails: {\n        ...oldDetail,\n        address: addresses2,\n      },\n    })\n      .then((res) => {\n        console.log({ res });\n        const address = returnAddress(res.data);\n        dispatch(setAddress(address));\n      })\n      .catch((err) => {\n        console.log({ err });\n      });\n  } else {\n    const addresses1 = [...oldAddress, address].map((elx) => {\n      return elx;\n    });\n    const hasDefault = addresses1.find((el) => el.isDefault === true);\n    const addresses2 = addresses1.map((el, index) => {\n      if (index === 0 && !hasDefault) {\n        return {\n          ...el,\n          isDefault: true,\n        };\n      }\n      return el;\n    });\n    updateUserDetails({\n      userid,\n      shippingdetails: {\n        ...oldDetail,\n        address: addresses2,\n      },\n    })\n      .then((res) => {\n        console.log({ res });\n        const address = returnAddress(res.data);\n        dispatch(setAddress(address));\n      })\n      .catch((err) => {\n        console.log({ err });\n      });\n  }\n};\nexport const deleteAddress = (userid, id, oldDetail = {}, oldAddress = []) => (\n  dispatch\n) => {\n  const newAddress1 = oldAddress.filter((el) => el.id !== id);\n  const defaultAddress = newAddress1.find((el) => el.isDefault === true);\n  const newAddress = newAddress1.map((el, index) => {\n    if (index === 0 && !defaultAddress) {\n      return {\n        ...el,\n        isDefault: true,\n      };\n    }\n    return el;\n  });\n  updateUserDetails({\n    userid,\n    shippingdetails: {\n      ...oldDetail,\n      address: newAddress,\n    },\n  })\n    .then((res) => {\n      console.log({ res });\n      const address = returnAddress(res.data);\n      dispatch(setAddress(address));\n    })\n    .catch((err) => {\n      console.log({ err });\n    });\n};\nexport const setDefaultAddress = (\n  userid,\n  id,\n  oldDetail = {},\n  oldAddress = []\n) => (dispatch) => {\n  const newAddress = oldAddress.map((el) => {\n    return {\n      ...el,\n      isDefault: el.id === id,\n    };\n  });\n\n  updateUserDetails({\n    userid,\n    shippingdetails: {\n      ...oldDetail,\n      address: newAddress,\n    },\n  })\n    .then((res) => {\n      console.log({ res });\n      const address = returnAddress(res.data);\n      dispatch(setAddress(address));\n    })\n    .catch((err) => {\n      console.log({ err });\n    });\n};\nexport const editAddress = (\n  userid,\n  address,\n  oldDetail = {},\n  oldAddress = []\n) => (dispatch) => {\n  const newAddress = oldAddress.map((el) => {\n    if (el.id === address.id) return address;\n\n    return el;\n  });\n  updateUserDetails({\n    userid,\n    shippingdetails: {\n      ...oldDetail,\n      address: newAddress,\n    },\n  })\n    .then((res) => {\n      console.log({ res });\n      const address = returnAddress(res.data);\n      dispatch(setAddress(address));\n    })\n    .catch((err) => {\n      console.log({ err });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}