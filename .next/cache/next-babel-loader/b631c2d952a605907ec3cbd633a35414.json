{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport _ from \"lodash\";\nimport { expireMonthInvalid, expireYearInvalid, cardNumberInvalid, cardDetailsNotMAtch, shippingExtraRate, defaultOrderStatus, defaultStatusInOrder, shippingStaticRate } from \"../../constants/constantMessage\"; // import { referralPresent } from \"../../components\";\n\nconst referralPresent = 25;\nimport { combineLoop } from \"box-dimension-calculator\"; // import { variablePriceSet } from \"./cartHealpers\";\n\nexport default class BasicFunction {\n  constructor() {\n    _defineProperty(this, \"removeEmpty\", obj => {\n      Object.keys(obj).forEach(key => obj[key] === null && delete obj[key]);\n    });\n\n    _defineProperty(this, \"getSelectedAttributes\", item => {\n      if (item.producttype === \"variable\") return item.attributes.map(el => ({\n        [el.names]: item[el.names].value\n      })).filter(el => el).reduce((a, b) => _objectSpread(_objectSpread({}, a), b), {});\n      return null;\n    });\n\n    _defineProperty(this, \"calculatePrice\", item => {\n      const {\n        saleprice,\n        regularprice,\n        subscribedDiscountPersent,\n        qty: {\n          value\n        },\n        subscribed\n      } = item;\n\n      if (subscribed) {\n        if (saleprice) {\n          const price = parseFloat(saleprice) * parseFloat(value) / parseFloat(subscribedDiscountPersent);\n          return price;\n        } else if (regularprice) {\n          const price = parseFloat(regularprice) * parseFloat(value) / parseFloat(subscribedDiscountPersent);\n          return price;\n        }\n\n        return 0;\n      }\n    });\n\n    _defineProperty(this, \"convertCardErrors\", error => {\n      switch (error) {\n        case \"Your card number is incorrect.\":\n          return cardNumberInvalid;\n\n        case \"Missing required param: card[exp_year].\":\n          return expireYearInvalid;\n\n        case \"Could not find payment information.\":\n          return cardDetailsNotMAtch;\n\n        case \"Your card's expiration year is invalid.\":\n          return expireYearInvalid;\n\n        case \"Your card's expiration month is invalid.\":\n          return expireMonthInvalid;\n\n        default:\n          return expireMonthInvalid;\n      }\n    });\n\n    _defineProperty(this, \"stripeCheckValidation\", paymentDetail => {\n      const {\n        cvNumber,\n        expDate,\n        cardNumber\n      } = paymentDetail;\n\n      if (cvNumber && cvNumber.length <= 2) {\n        return false;\n      }\n\n      if (expDate && expDate.length <= 4) {\n        return false;\n      }\n\n      if (cardNumber && cardNumber.length <= 18) {\n        return false;\n      }\n\n      return true;\n    });\n\n    _defineProperty(this, \"getShippingRates\", rateArr => {\n      if (rateArr.length > 0) {\n        const filteredRates = _.uniqBy(rateArr, function (e) {\n          return e.service;\n        });\n\n        const smallSorted = filteredRates.sort((a, b) => parseFloat(a.rate || 0) - parseFloat(b.rate || 0));\n        const Smallest = smallSorted[0];\n        const Smallest1 = smallSorted[1];\n        const Smallest2 = smallSorted[2];\n        const PriorityRaw = filteredRates.find(el => el.service === \"Priority\");\n        const ExpressRaw = filteredRates.find(el => el.service === \"Express\"); // const standard =\n        //   Smallest.service === \"Priority\" || Smallest.service === \"Express\"\n        //     ? null\n        //     : {\n        //         ...Smallest,\n        //         customName: \"Standard\",\n        //         customRate: parseFloat(Smallest.rate) + shippingExtraRate\n        //       };\n        // const Priority = PriorityRaw\n        //   ? {\n        //       ...PriorityRaw,\n        //       customName: \"Priority\",\n        //       customRate: parseFloat(PriorityRaw.rate) + shippingExtraRate\n        //     }\n        //   : null;\n        // const Express = ExpressRaw\n        //   ? {\n        //       ...ExpressRaw,\n        //       customName: \"Express\",\n        //       customRate: parseFloat(ExpressRaw.rate) + shippingExtraRate\n        //     }\n        //   : null;\n\n        const standard = Smallest && _objectSpread(_objectSpread({}, Smallest), {}, {\n          customName: \"Standard\",\n          customRate: parseFloat(Smallest.rate) + shippingExtraRate\n        });\n\n        const Priority = Smallest1 && _objectSpread(_objectSpread({}, Smallest1), {}, {\n          customName: \"Priority\",\n          customRate: parseFloat(Smallest1.rate) + shippingExtraRate\n        });\n\n        const Express = Smallest2 && _objectSpread(_objectSpread({}, Smallest2), {}, {\n          customName: \"Express\",\n          customRate: parseFloat(Smallest2.rate) + shippingExtraRate\n        });\n\n        return [standard, Priority, Express].filter(el => el);\n      }\n\n      return rateArr; // return [\n      //   {\n      //     carrier: \"Carrier_Not_Found\",\n      //     created_at: new Date(),\n      //     currency: \"USD\",\n      //     mode: \"test\",\n      //     object: \"Rate\",\n      //     customName: \"Standard\",\n      //     rate: shippingStaticRate,\n      //     customRate: shippingStaticRate,\n      //     retail_currency: \"USD\",\n      //   }\n      // ]\n    });\n  }\n\n  dateFun(date) {\n    var d = new Date(date),\n        month = \"\" + (d.getMonth() + 1),\n        day = \"\" + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    return [month, day, year].join(\"/\");\n  }\n\n  dateFun2(date) {\n    var d = new Date(date),\n        month = \"\" + (d.getMonth() + 1),\n        day = \"\" + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    return [month, day, year].join(\"/\");\n  }\n\n  dateTimeAmPm(date) {\n    var d = new Date(date),\n        month = \"\" + (d.getMonth() + 1),\n        day = \"\" + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    const dateis = month + \"/\" + day + \"/\" + year + \" \";\n    var hours = d.getHours();\n    var minutes = d.getMinutes();\n    var ampm = hours >= 12 ? \"PM\" : \"AM\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\n    return dateis + strTime;\n  }\n\n  dateTimeAmPmOld(date) {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    var d = new Date(date),\n        month = \"\" + (d.getMonth() + 1),\n        day = \"\" + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    const monthnameis = monthNames[month - 1];\n    const dateis = monthnameis + \" \" + day + \",\" + year + \" \";\n    var hours = d.getHours();\n    var minutes = d.getMinutes();\n    var ampm = hours >= 12 ? \"PM\" : \"AM\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\n    return dateis + strTime;\n  }\n\n  dateTimeInMonthName(date) {\n    if (!date) return \"-\";\n    const monthNames = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n    var d = new Date(date),\n        month = \"\" + (d.getMonth() + 1),\n        day = \"\" + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    const monthnameis = monthNames[month - 1];\n    const dateis = monthnameis + \" \" + day + \", \" + year + \" \"; //var hours = d.getHours();\n    // var minutes = d.getMinutes();\n    //  hours = hours % 12;\n    //  hours = hours ? hours : 12; // the hour '0' should be '12'\n    // minutes = minutes < 10 ? \"0\" + minutes : minutes;\n\n    return dateis;\n  }\n\n  currancyAdd(number) {\n    if (number >= 0) {\n      return \"$\" + number;\n    } else {\n      return \"-$\" + Math.abs(number);\n    }\n  }\n\n  nombarFormat(nbr) {\n    if (nbr === 0 && nbr === \"\") {\n      return \"0.00\";\n    } else {\n      if (nbr) {\n        var nr = nbr.toFixed(2);\n        nr = nr.toString();\n        var pattern = /(-?\\d+)(\\d{3})/;\n\n        while (pattern.test(nr)) nr = nr.replace(pattern, \"$1,$2\");\n\n        return nr;\n      } else {\n        return 0.0;\n      }\n    }\n  }\n\n  currancyAddWithNumber(numberX) {\n    const number = parseFloat(numberX);\n    const withoutUsd = this.currencyWithoutUsd(number); // return `${withoutUsd} USD`;\n\n    return `${withoutUsd}`;\n  }\n\n  currencyWithoutUsd(numberX) {\n    if (numberX) {\n      let number = parseFloat(numberX);\n      number = number.toFixed(2);\n      var pattern = /(-?\\d+)(\\d{3})/;\n\n      if (number >= 0) {\n        number = number.toString();\n\n        while (pattern.test(number)) number = number.replace(pattern, \"$1,$2\");\n\n        return \"$\" + number;\n      } else {\n        var num = Math.abs(number);\n        num = num.toFixed(2);\n        num = num.toString();\n\n        while (pattern.test(num)) num = num.replace(pattern, \"$1,$2\");\n\n        return \"-$\" + num;\n      }\n    } else {\n      return \"$0.00\";\n    }\n  }\n\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  sliceToNumber(string = 0, digit = 0) {\n    return string.slice(0, digit);\n  }\n\n  timeConverter(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp * 1000); // var months = [\n    //   \"Jan\",\n    //   \"Feb\",\n    //   \"Mar\",\n    //   \"Apr\",\n    //   \"May\",\n    //   \"Jun\",\n    //   \"Jul\",\n    //   \"Aug\",\n    //   \"Sep\",\n    //   \"Oct\",\n    //   \"Nov\",\n    //   \"Dec\"\n    // ];\n    // var year = a.getFullYear();\n    // var month = months[a.getMonth()];\n    // var date = a.getDate();\n\n    var hour = a.getHours();\n    var min = a.getMinutes(); // var sec = a.getSeconds();\n\n    if (min < 10) {\n      min = \"0\" + min;\n    } // var ampm = \"AM\";\n\n\n    var timeis = \"\";\n\n    if (hour <= 12) {\n      timeis = hour + \":\" + min + \"AM\";\n    } else {\n      hour = parseFloat(hour) - 12;\n      timeis = hour + \":\" + min + \"PM\";\n    } //   var res = hour + \":\" + min;\n\n\n    return timeis;\n  }\n\n  currentDate() {\n    var d = new Date();\n    var year = parseInt(d.getYear()) - 100;\n    var month = d.getMonth() + 1;\n    return \"20\" + year + \"/\" + month + \"/\" + d.getDate();\n  }\n\n  currentDateYesterday() {\n    var d = new Date();\n    var year = parseInt(d.getYear()) - 100;\n    var month = d.getMonth() + 1;\n    var yesterday = new Date(d.getTime());\n    yesterday.setDate(d.getDate() - 1);\n    var date = yesterday.getDate();\n    return \"20\" + year + \"/\" + month + \"/\" + date;\n  }\n\n  currentDateBeforeDay(beforeDay) {\n    var d = new Date();\n    var yesterday = new Date(d.getTime());\n    yesterday.setDate(d.getDate() - parseInt(beforeDay));\n    var date = yesterday.getDate();\n    var year = parseInt(yesterday.getYear()) - 100;\n    var month = yesterday.getMonth() + 1;\n    return \"20\" + year + \"/\" + month + \"/\" + date;\n  }\n\n  currentDateBeforeMonth(beforeMonth) {\n    var d = new Date();\n    d.setMonth(d.getMonth() - parseInt(beforeMonth));\n    var month = d.getMonth() + parseInt(1);\n    var year = parseInt(d.getYear()) - 100;\n    return \"20\" + year + \"/\" + month + \"/\" + d.getDate();\n  }\n\n  currentDateBeforeYear(beforeYear) {\n    var d = new Date();\n    var month = d.getMonth() + parseInt(1);\n    var year = parseInt(d.getYear()) - 100;\n    year = year - parseInt(beforeYear);\n    return \"20\" + year + \"/\" + month + \"/\" + d.getDate();\n  }\n\n  graphColorPostion(data) {\n    if (data >= 0) {\n      return \"#1fa764\";\n    } else {\n      return \"#ed5454\";\n    }\n  }\n\n  graphColorFillPostion(data) {\n    if (data >= 0) {\n      return \"#abe5c1\";\n    } else {\n      return \"#ffa1a9\";\n    }\n  }\n\n  stringToArray(str) {\n    var res = str.split(\",\");\n    var newArray = [];\n    res.forEach(character => {\n      if (character === character.toUpperCase()) {\n        if (character.length <= 4) {\n          newArray.push(character);\n        }\n      }\n    });\n    return newArray.slice(0, 10);\n  }\n\n  checkIsUpparCashOrNot(character) {\n    if (character === character.toUpperCase()) {\n      if (character.length <= 4) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  stringCheckResponseInColor(str, spn) {\n    var innerHTML = str;\n    spn = spn.toUpperCase();\n    var index = innerHTML.indexOf(spn);\n\n    if (index >= 0) {\n      innerHTML = innerHTML.substring(0, index) + \"<span className='highlight'>\" + innerHTML.substring(index, index + spn.length) + \"</span>\" + innerHTML.substring(index + spn.length); // return 'ram';\n    }\n\n    return innerHTML;\n  }\n\n  subStrStartEnd(str, starting, ending) {\n    if (str) {\n      return str.substr(starting, ending);\n    } else {\n      return str;\n    }\n  }\n\n  bodyColor() {\n    var currentUrl = window.location.href;\n    var ar = currentUrl.split(\"/\");\n\n    if (ar[3] === \"stocks\") {\n      return \"black\";\n    } else {\n      return \"\";\n    }\n  }\n\n  getParchantage(parValue, totalvalue) {\n    return parseFloat(parValue) * parseFloat(totalvalue) / 100;\n  }\n\n  getUnknownParchantage(parValue, totalvalue) {\n    return parseFloat(parValue) / totalvalue * 100;\n  }\n\n  getMinMaxValue(ar) {\n    /*eslint no-extend-native: [\"error\", { \"exceptions\": [\"Array\"] }]*/\n    if (ar.producttype === \"variable\") {\n      const arr = [];\n      ar.variation.map(key => {\n        arr.push(key.sale_price);\n        return null;\n      });\n\n      Array.prototype.max = function () {\n        return Math.max.apply(null, this);\n      };\n\n      Array.prototype.min = function () {\n        return Math.min.apply(null, this);\n      };\n\n      if (arr.length > 1) {\n        if (arr.min() === arr.max()) {\n          const returnString = \"From $\" + this.nombarFormat(arr.min());\n          return returnString;\n        }\n\n        const returnString = \"From $\" + this.nombarFormat(arr.min()) + \" - $\" + this.nombarFormat(arr.max());\n        return returnString;\n      } else {\n        const returnString = \"From $\" + this.nombarFormat(arr.min());\n        return returnString;\n      }\n    }\n  }\n\n  getMinMaxValue2(ar) {\n    /*eslint no-extend-native: [\"error\", { \"exceptions\": [\"Array\"] }]*/\n    if (ar.producttype === \"variable\") {\n      const arr = [];\n      ar.variation.map(key => {\n        arr.push(key.sale_price);\n        return null;\n      });\n\n      Array.prototype.max = function () {\n        return Math.max.apply(null, this);\n      };\n\n      Array.prototype.min = function () {\n        return Math.min.apply(null, this);\n      };\n\n      if (arr.length > 1) {\n        if (arr.min() === arr.max()) {\n          const returnString = \"$\" + this.nombarFormat(arr.min());\n          return returnString;\n        }\n\n        const returnString = \"$\" + this.nombarFormat(arr.min()) + \" - $\" + this.nombarFormat(arr.max());\n        return returnString;\n      } else {\n        const returnString = \"$\" + this.nombarFormat(arr.min());\n        return returnString;\n      }\n    }\n  }\n\n  getMinMaxValueWithVariation(ar) {\n    if (ar.producttype === \"variable\") {\n      const arr = [];\n      ar.variation.map(key => {\n        arr.push(key.sale_price);\n        return null;\n      });\n\n      Array.prototype.max = function () {\n        return Math.max.apply(null, this);\n      };\n\n      Array.prototype.min = function () {\n        return Math.min.apply(null, this);\n      };\n\n      if (arr.length > 1) {\n        const returnString = \"From $\" + this.nombarFormat(arr.min()) + \" - $\" + this.nombarFormat(arr.max());\n        return returnString;\n      } else {\n        const returnString = \"From $\" + this.nombarFormat(arr.min());\n        return returnString;\n      }\n    } else {\n      if (ar.dsaleprice) {\n        const returnString = \"From $\" + this.nombarFormat(ar.dsaleprice);\n        return returnString;\n      } else {\n        const returnString = \"From $\" + this.nombarFormat(ar.dregularprice);\n        return returnString;\n      }\n    }\n  }\n\n  isLoaded(obj) {\n    return Object.values(obj).every(el => el);\n  }\n\n  removeParams(url, sParam) {\n    url = url.split(\"?\")[0] + \"?\";\n    var sPageURL = decodeURIComponent(window.location.search.substring(1)),\n        sURLVariables = sPageURL.split(\"&\"),\n        sParameterName,\n        i;\n\n    for (i = 0; i < sURLVariables.length; i++) {\n      sParameterName = sURLVariables[i].split(\"=\");\n\n      if (sParameterName[0] !== sParam) {\n        url = url + sParameterName[0] + \"=\" + sParameterName[1] + \"&\";\n      }\n    }\n\n    return url.substring(0, url.length - 1);\n  }\n\n  returnReferringUrl(url) {\n    if (!url) return \"Direct traffic\";\n    if (url.trim() === \"\") return \"Direct traffic\";\n    return url;\n  }\n\n  getDialCode(countryCodeList, countryCode) {\n    var returnCuntryCode = \"\";\n    countryCodeList.forEach(element => {\n      if (element.code === countryCode) {\n        returnCuntryCode = element.dial_code;\n      }\n    });\n    return returnCuntryCode;\n  }\n\n  showExportMsg(shippingType, isSame, billingAddress, shippingAddress) {\n    if (shippingType !== \"express\") return false;\n\n    if (isSame) {\n      if (billingAddress) if (billingAddress.toLowerCase().trim() === \"usa\") {\n        return false;\n      }\n    } else {\n      if (shippingAddress) if (shippingAddress.toLowerCase().trim() === \"usa\") {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  parseOrderProduct(item) {\n    const isCombo = item.combo ? true : false,\n          comboId = item.combo ? item._id : null,\n          productId = item.combo ? null : item.productid._id,\n          productMeta = item.combo ? null : item._id,\n          isSubscribed = item.subscribed ? true : false,\n          subscriptionMeta = item.subscribed ? {\n      duration: item.subscribedTime\n    } : null,\n          itemId = item._id,\n          _id = item._id,\n          qty = item.qty.value,\n          title = item.combo ? item.title : item.productid.producttitle,\n          unitPrice = item.saleprice ? item.saleprice : item.regularprice,\n          subTotal = item.saleprice ? this.multiply(item.saleprice, item.qty.value) : this.multiply(item.regularprice, item.qty.value),\n          attribute = this.getSelectedAttributes(item),\n          height = item.shipping_height,\n          width = item.shipping_width,\n          length = item.shipping_length,\n          volume = item.volume,\n          weight = item.weight;\n    const order = {\n      isCombo,\n      comboId,\n      productId,\n      productMeta,\n      isSubscribed,\n      subscriptionMeta,\n      itemId,\n      _id,\n      qty,\n      unitPrice,\n      subTotal,\n      attribute,\n      width,\n      length,\n      height,\n      title,\n      volume,\n      weight\n    };\n    this.removeEmpty(order);\n    return order;\n  }\n\n  multiply(a, b) {\n    return parseFloat(a) * parseFloat(b);\n  }\n\n  generateOrderNew(stateObj, paymentResponse = \"\", referralId, cart, user, confirmShipRes) {\n    const {\n      service\n    } = confirmShipRes,\n          confirmRest = _objectWithoutProperties(confirmShipRes, [\"service\"]);\n\n    const {\n      paymentMethod\n    } = stateObj;\n    const {\n      items,\n      shippingCharge,\n      subTotal,\n      totalWeight,\n      totalVolume,\n      taxValue,\n      taxPercent,\n      taxCouponDiscount,\n      taxCouponCode\n    } = cart;\n    const orderProducts = items.map(el => this.parseOrderProduct(el));\n    const {\n      height: totalHeight,\n      length: totalLength,\n      width: totalWidth\n    } = this.getHeightWeight(orderProducts);\n\n    const order = _objectSpread({\n      totalVolume,\n      totalWeight,\n      shippingMethod: service,\n      products: orderProducts,\n      countryTax: taxPercent * 100,\n      taxAmount: taxValue || parseFloat(cart.subTotal || 0) * parseFloat(taxPercent || 0) || 0,\n      shippingCharge,\n      userDetails: this.getUserDetails(stateObj).user,\n      orderStatus: defaultOrderStatus,\n      paymentMethod: paymentMethod === \"stripe\" ? \"Authorize\" : paymentMethod,\n      status: defaultStatusInOrder,\n      wholeSubtotal: parseFloat(subTotal.toFixed(2)),\n      wasReferred: referralId ? true : false,\n      referral: referralId ? referralId : null,\n      isCoupon: taxCouponCode ? true : false,\n      couponId: taxCouponCode,\n      couponDisc: taxCouponCode ? taxCouponDiscount : null,\n      grandTotal: this.getGrandTotal(subTotal, taxPercent, shippingCharge, taxCouponDiscount),\n      isGuest: user._id ? false : true,\n      userId: user._id ? user._id : null,\n      userMetaId: user.userMetaId ? user.userMetaId : null,\n      totalHeight,\n      totalWidth,\n      totalLength,\n      refPercentage: referralPresent\n    }, confirmRest);\n\n    this.removeEmpty(order);\n    return order;\n  }\n\n  getDiscount(discount, subTotal) {\n    return discount * subTotal / 100 || 0;\n  }\n\n  getGrandTotal(subTotal, taxPresent, shippingCharge, discount) {\n    const amountWithTax = subTotal + taxPresent * subTotal + shippingCharge;\n    const discountAmount = this.getDiscount(discount, subTotal);\n    const total = parseFloat(amountWithTax || 0) - parseFloat(discountAmount || 0);\n    return parseFloat(total.toFixed(2));\n  }\n\n  getHeightWeight(items) {\n    const height = items.map(el => el.height * parseFloat(el.qty));\n    const width = items.map(el => el.width * parseFloat(el.qty));\n    const length = items.map(el => el.length * parseFloat(el.qty));\n    const shape = {\n      height: height.reduce((a, b) => a + b, 0),\n      width: width.reduce((a, b) => a + b, 0),\n      length: length.reduce((a, b) => a + b, 0)\n    };\n    return shape;\n  }\n\n  generateOrder(stateObj, paymentResponse = \"\", referrer_url_id, cart, user, confirmShipRes) {\n    const {\n      service\n    } = confirmShipRes,\n          confirmRest = _objectWithoutProperties(confirmShipRes, [\"service\"]);\n\n    var transactionId = \"000\";\n    const payType = stateObj.paymentMethod;\n\n    if (stateObj.paymentMethod === \"stripe\" && paymentResponse) {\n      transactionId = paymentResponse;\n    }\n\n    if (stateObj.paymentMethod === \"paypal\" && paymentResponse && paymentResponse.paymentID) {\n      transactionId = paymentResponse.paymentID;\n    } // return false;\n\n\n    const {\n      items,\n      shippingCharge,\n      subTotal,\n      totalWeight,\n      totalVolume,\n      taxValue,\n      taxPercent,\n      taxCouponDiscount,\n      taxCouponCode\n    } = cart;\n    const {\n      billing_first_name,\n      billing_last_name,\n      billing_email_name,\n      billing_phone_name,\n      billing_address_name_01,\n      billing_address_name_02,\n      billing_address_town,\n      shipping_first_name,\n      shipping_last_name,\n      shipping_address_name_01,\n      shipping_address_name_02,\n      shipping_address_town,\n      selectedShippingCity,\n      selectedCity,\n      selectedShippingCountry,\n      selectedCountry,\n      shipping_zip_code,\n      billing_zip_code,\n      sameShipping\n    } = stateObj;\n    let order = {};\n    let country = \"\";\n\n    if (selectedShippingCountry) {\n      country = selectedShippingCountry;\n    } else if (selectedCountry) {\n      country = selectedCountry || \"\";\n    }\n\n    let state = \"\";\n\n    if (selectedShippingCity) {\n      state = selectedShippingCity;\n    } else if (selectedCity) {\n      state = selectedCity || \"\";\n    }\n\n    let zipcode = \"\";\n\n    if (shipping_zip_code) {\n      zipcode = shipping_zip_code;\n    } else if (billing_zip_code) {\n      zipcode = billing_zip_code;\n    }\n\n    order.orderproduct = items.map(el => {\n      // console.log({el})\n      // this.parseOrderProduct(el);\n      // console.log({\n      //   checkOrder: this.parseOrderProduct(el)\n      // })\n      // return this.parseOrderProduct(el)\n      let returnItem = {\n        productmetaid: el._id,\n        proucttitle: el.combo ? el.title : el.productid.producttitle,\n        quantity: el.qty.value,\n        singleprice: el.saleprice ? el.saleprice : el.regularprice,\n        subtotal: 0,\n        orderdate: Date(),\n        country,\n        isguest: true || false,\n        subscribed: el.subscribed,\n        subscribedDiscountPersent: el.subscribedDiscountPersent\n      };\n      let subtotal = parseInt(returnItem.quantity || 1) * parseInt(returnItem.singleprice || 1);\n      let attribute = {};\n\n      if (el.producttype === \"variable\") {\n        el.attributes.map((item, index) => {\n          attribute = _objectSpread(_objectSpread({}, attribute), {}, {\n            [item.names]: el[item.names].value\n          });\n          return null;\n        });\n      }\n\n      returnItem = _objectSpread(_objectSpread({}, returnItem), {}, {\n        subtotal,\n        attribute\n      });\n      return _objectSpread({}, returnItem);\n    });\n    let shippingAddress = `${shipping_first_name} ${shipping_last_name}, ${shipping_address_name_01} ${shipping_address_name_02} ${shipping_address_town} `;\n    let billingAddress = `${billing_first_name} ${billing_last_name}, ${billing_address_name_01} ${billing_address_name_02} ${billing_address_town} `;\n    const TaxgrandTotalWithTax = subTotal + taxPercent * subTotal + shippingCharge;\n    const discount = taxCouponDiscount * subTotal / 100;\n\n    if (user._id) {\n      const userid = user._id;\n      order.userid = userid;\n    }\n\n    order.grandtotal = parseFloat(TaxgrandTotalWithTax || 0) - parseFloat(discount || 0);\n    order.coupondisc = taxCouponDiscount;\n    order.couponid = taxCouponCode;\n    order.country = country;\n    order.offerprice = 100;\n    order.shippingmethod = service || \"Express shipping\" || \"Normal shipping\";\n    order.wholesubtotal = subTotal;\n    order.shippingcharge = shippingCharge || 0;\n    order.paymentmethod = payType;\n    order.ordernote = \"Make it quick\";\n    order.status = \"in process\";\n    order.paymentstatus = \"Done\";\n    order.transactionid = transactionId;\n    order.country_tax = taxPercent * 100;\n    order.totalweight = totalWeight;\n    order.totalvolume = totalVolume;\n    order.taxamount = taxValue;\n    order.userdetails = {\n      country,\n      firstname: billing_first_name,\n      lastname: billing_last_name,\n      email: billing_email_name,\n      shippingaddress: sameShipping ? billingAddress : shippingAddress,\n      billingaddress: billingAddress,\n      extraaddress: \"jdjdjd\",\n      city: shipping_address_town ? shipping_address_town : billing_address_town,\n      state,\n      zipcode,\n      phonenumber: billing_phone_name\n    };\n    order.orderstatus = \"Not delivered\";\n\n    if (referrer_url_id) {\n      order.wasreferred = true;\n      order.referral = referrer_url_id;\n    }\n\n    return _objectSpread(_objectSpread({}, order), confirmRest);\n  }\n\n  getUserDetails(stateObj) {\n    const {\n      billing_first_name,\n      billing_last_name,\n      billing_email_name,\n      billing_phone_name,\n      billing_address_name_01,\n      billing_address_name_02,\n      billing_address_town,\n      shipping_first_name,\n      shipping_last_name,\n      shipping_address_name_01,\n      shipping_address_name_02,\n      shipping_address_town,\n      selectedShippingCity,\n      selectedCity,\n      selectedShippingCountry,\n      selectedCountry,\n      shipping_zip_code,\n      billing_zip_code,\n      sameShipping\n    } = stateObj;\n    const shippingAddress = `${shipping_first_name} ${shipping_last_name}, ${shipping_address_name_01} ${shipping_address_name_02} ${shipping_address_town} `;\n    const billingAddress = `${billing_first_name} ${billing_last_name}, ${billing_address_name_01} ${billing_address_name_02} ${billing_address_town} `;\n    const user = {\n      firstname: billing_first_name,\n      lastname: billing_last_name,\n      email: billing_email_name,\n      shippingaddress: sameShipping ? billingAddress : shippingAddress,\n      billingaddress: billingAddress,\n      phonenumber: billing_phone_name,\n      country: this.getOneValid(selectedShippingCountry, selectedCountry),\n      zipcode: this.getOneValid(shipping_zip_code, billing_zip_code),\n      state: this.getOneValid(selectedShippingCity, selectedCity)\n    };\n    return {\n      user,\n      shippingAddress,\n      billingAddress\n    };\n  }\n\n  getOneValid(a, b) {\n    if (a && a.trim()) return a;\n    if (b && b.trim()) return b;\n    return \"\";\n  }\n\n  checkProductInWishList(list = [], product_id) {\n    var flag = false; // console.log(list)\n    // console.log(product_id)\n\n    if (list.length > 0) {\n      list.forEach((itm, i) => {\n        if (itm.productid === product_id) {\n          flag = i;\n        }\n      });\n    }\n\n    return flag;\n  }\n\n  getSingleElementByMultipleObject(arrayData, f) {\n    const result = arrayData.reduce(function (r, a) {\n      r[a.carrier] = r[a.carrier] || [];\n      r[a.carrier].push(a);\n      return r;\n    }, {});\n    return result;\n  }\n\n  shippingStringRate(key) {\n    if (key && key.est_delivery_days) {\n      return \" in \" + key.est_delivery_days + \" Days .\";\n    } else {\n      return \" in - Days .\";\n    }\n  }\n\n  cartHeightWidhtCalculation(item) {\n    var height = 0;\n    var width = 0;\n    var length = 0;\n    var weight = 0;\n\n    if (item.length > 0) {\n      item.forEach(itm => {\n        height = height + itm.shipping_height;\n        width = width + itm.shipping_width;\n        length = length + itm.shipping_length;\n        weight = weight + itm.weight;\n      });\n    }\n\n    return {\n      height,\n      width,\n      length,\n      weight\n    };\n  }\n\n  cartHeightWidhtCalculation2(itemA) {\n    var height = 0;\n    var width = 0;\n    var length = 0;\n    var weight = 0;\n\n    function flatten(arr) {\n      return arr.reduce(function (flat, toFlatten) {\n        return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n      }, []);\n    }\n\n    const item = flatten(itemA.map(el => {\n      const qty = el.qty ? el.qty.value ? parseInt(el.qty.value) : 1 : 1;\n      if (qty > 1) return new Array(qty).fill(el);\n      return el;\n    }));\n\n    const getGreater = (a, b) => {\n      if (a > b) return a;\n      return b;\n    };\n\n    if (item.length > 0) {\n      item.forEach(itm => {\n        // height = getGreater(height, itm.shipping_height);\n        // width = width + itm.shipping_width;\n        // length = getGreater(length, itm.shipping_length);\n        weight = weight + itm.weight;\n      });\n    }\n\n    const itemsB = itemA.map(el => ({\n      h: el.shipping_height,\n      l: el.shipping_length,\n      w: el.shipping_width,\n      qty: el.qty.value\n    }));\n    const itemsC = [].concat.apply([], itemsB);\n    const itemsD = combineLoop(itemsC)[0];\n    return {\n      height: itemsD.h,\n      width: itemsD.w,\n      length: itemsD.l,\n      weight\n    };\n  }\n\n  exportToJson(objectData, fileName = \"export\") {\n    let filename = `${fileName}.json`;\n    let contentType = \"application/json;charset=utf-8;\";\n\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(objectData)))], {\n        type: contentType\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(objectData));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  }\n\n  qtyList(qty = 10) {\n    const quantity = parseFloat(qty) > 10 ? parseFloat(qty) : 10;\n    const temp = new Array(quantity).fill(\"\");\n    const newarray = temp.map((el, index) => ({\n      label: index + 1,\n      value: index + 1\n    }));\n    return newarray;\n  }\n\n}","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missnew front/services/extra/basicFunction.js"],"names":["_","expireMonthInvalid","expireYearInvalid","cardNumberInvalid","cardDetailsNotMAtch","shippingExtraRate","defaultOrderStatus","defaultStatusInOrder","shippingStaticRate","referralPresent","combineLoop","BasicFunction","obj","Object","keys","forEach","key","item","producttype","attributes","map","el","names","value","filter","reduce","a","b","saleprice","regularprice","subscribedDiscountPersent","qty","subscribed","price","parseFloat","error","paymentDetail","cvNumber","expDate","cardNumber","length","rateArr","filteredRates","uniqBy","e","service","smallSorted","sort","rate","Smallest","Smallest1","Smallest2","PriorityRaw","find","ExpressRaw","standard","customName","customRate","Priority","Express","dateFun","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","dateFun2","dateTimeAmPm","dateis","hours","getHours","minutes","getMinutes","ampm","strTime","dateTimeAmPmOld","monthNames","monthnameis","dateTimeInMonthName","currancyAdd","number","Math","abs","nombarFormat","nbr","nr","toFixed","toString","pattern","test","replace","currancyAddWithNumber","numberX","withoutUsd","currencyWithoutUsd","num","capitalizeFirstLetter","string","charAt","toUpperCase","slice","sliceToNumber","digit","timeConverter","UNIX_timestamp","hour","min","timeis","currentDate","parseInt","getYear","currentDateYesterday","yesterday","getTime","setDate","currentDateBeforeDay","beforeDay","currentDateBeforeMonth","beforeMonth","setMonth","currentDateBeforeYear","beforeYear","graphColorPostion","data","graphColorFillPostion","stringToArray","str","res","split","newArray","character","push","checkIsUpparCashOrNot","stringCheckResponseInColor","spn","innerHTML","index","indexOf","substring","subStrStartEnd","starting","ending","substr","bodyColor","currentUrl","window","location","href","ar","getParchantage","parValue","totalvalue","getUnknownParchantage","getMinMaxValue","arr","variation","sale_price","Array","prototype","max","apply","returnString","getMinMaxValue2","getMinMaxValueWithVariation","dsaleprice","dregularprice","isLoaded","values","every","removeParams","url","sParam","sPageURL","decodeURIComponent","search","sURLVariables","sParameterName","i","returnReferringUrl","trim","getDialCode","countryCodeList","countryCode","returnCuntryCode","element","code","dial_code","showExportMsg","shippingType","isSame","billingAddress","shippingAddress","toLowerCase","parseOrderProduct","isCombo","combo","comboId","_id","productId","productid","productMeta","isSubscribed","subscriptionMeta","duration","subscribedTime","itemId","title","producttitle","unitPrice","subTotal","multiply","attribute","getSelectedAttributes","height","shipping_height","width","shipping_width","shipping_length","volume","weight","order","removeEmpty","generateOrderNew","stateObj","paymentResponse","referralId","cart","user","confirmShipRes","confirmRest","paymentMethod","items","shippingCharge","totalWeight","totalVolume","taxValue","taxPercent","taxCouponDiscount","taxCouponCode","orderProducts","totalHeight","totalLength","totalWidth","getHeightWeight","shippingMethod","products","countryTax","taxAmount","userDetails","getUserDetails","orderStatus","status","wholeSubtotal","wasReferred","referral","isCoupon","couponId","couponDisc","grandTotal","getGrandTotal","isGuest","userId","userMetaId","refPercentage","getDiscount","discount","taxPresent","amountWithTax","discountAmount","total","shape","generateOrder","referrer_url_id","transactionId","payType","paymentID","billing_first_name","billing_last_name","billing_email_name","billing_phone_name","billing_address_name_01","billing_address_name_02","billing_address_town","shipping_first_name","shipping_last_name","shipping_address_name_01","shipping_address_name_02","shipping_address_town","selectedShippingCity","selectedCity","selectedShippingCountry","selectedCountry","shipping_zip_code","billing_zip_code","sameShipping","country","state","zipcode","orderproduct","returnItem","productmetaid","proucttitle","quantity","singleprice","subtotal","orderdate","isguest","TaxgrandTotalWithTax","userid","grandtotal","coupondisc","couponid","offerprice","shippingmethod","wholesubtotal","shippingcharge","paymentmethod","ordernote","paymentstatus","transactionid","country_tax","totalweight","totalvolume","taxamount","userdetails","firstname","lastname","email","shippingaddress","billingaddress","extraaddress","city","phonenumber","orderstatus","wasreferred","getOneValid","checkProductInWishList","list","product_id","flag","itm","getSingleElementByMultipleObject","arrayData","f","result","r","carrier","shippingStringRate","est_delivery_days","cartHeightWidhtCalculation","cartHeightWidhtCalculation2","itemA","flatten","flat","toFlatten","concat","isArray","fill","getGreater","itemsB","h","l","w","itemsC","itemsD","exportToJson","objectData","fileName","filename","contentType","navigator","msSaveOrOpenBlob","blob","Blob","encodeURI","JSON","stringify","type","document","createElement","download","encodeURIComponent","target","body","appendChild","click","removeChild","qtyList","temp","newarray","label"],"mappings":"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","sourcesContent":["import _ from \"lodash\"\nimport {\n  expireMonthInvalid,\n  expireYearInvalid,\n  cardNumberInvalid,\n  cardDetailsNotMAtch,\n  shippingExtraRate,\n  defaultOrderStatus,\n  defaultStatusInOrder,\n  shippingStaticRate\n} from \"../../constants/constantMessage\";\n// import { referralPresent } from \"../../components\";\n const referralPresent = 25;\nimport { combineLoop } from \"box-dimension-calculator\";\n// import { variablePriceSet } from \"./cartHealpers\";\n\nexport default class BasicFunction {\n  dateFun(date) {\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    return [month, day, year].join(\"/\");\n  }\n  dateFun2(date) {\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    return [month, day, year].join(\"/\");\n  }\n  dateTimeAmPm(date) {\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    const dateis = month + \"/\" + day + \"/\" + year + \" \";\n    var hours = d.getHours();\n    var minutes = d.getMinutes();\n    var ampm = hours >= 12 ? \"PM\" : \"AM\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\n    return dateis + strTime;\n  }\n  dateTimeAmPmOld(date) {\n    const monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    const monthnameis = monthNames[month - 1];\n    const dateis = monthnameis + \" \" + day + \",\" + year + \" \";\n    var hours = d.getHours();\n    var minutes = d.getMinutes();\n    var ampm = hours >= 12 ? \"PM\" : \"AM\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\n    return dateis + strTime;\n  }\n  dateTimeInMonthName(date) {\n    if (!date) return \"-\";\n\n    const monthNames = [\n      \"Jan\",\n      \"Feb\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"Aug\",\n      \"Sept\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ];\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    const monthnameis = monthNames[month - 1];\n    const dateis = monthnameis + \" \" + day + \", \" + year + \" \";\n    //var hours = d.getHours();\n    // var minutes = d.getMinutes();\n    //  hours = hours % 12;\n    //  hours = hours ? hours : 12; // the hour '0' should be '12'\n    // minutes = minutes < 10 ? \"0\" + minutes : minutes;\n\n    return dateis;\n  }\n\n  currancyAdd(number) {\n    if (number >= 0) {\n      return \"$\" + number;\n    } else {\n      return \"-$\" + Math.abs(number);\n    }\n  }\n  nombarFormat(nbr) {\n    if (nbr === 0 && nbr === \"\") {\n      return \"0.00\";\n    } else {\n      if (nbr) {\n        var nr = nbr.toFixed(2);\n        nr = nr.toString();\n        var pattern = /(-?\\d+)(\\d{3})/;\n        while (pattern.test(nr)) nr = nr.replace(pattern, \"$1,$2\");\n        return nr;\n      } else {\n        return 0.0;\n      }\n    }\n  }\n  currancyAddWithNumber(numberX) {\n    const number = parseFloat(numberX);\n    const withoutUsd = this.currencyWithoutUsd(number);\n    // return `${withoutUsd} USD`;\n    return `${withoutUsd}`;\n  }\n\n  currencyWithoutUsd(numberX) {\n    if (numberX) {\n      let number = parseFloat(numberX);\n      number = number.toFixed(2);\n      var pattern = /(-?\\d+)(\\d{3})/;\n      if (number >= 0) {\n        number = number.toString();\n        while (pattern.test(number)) number = number.replace(pattern, \"$1,$2\");\n        return \"$\" + number;\n      } else {\n        var num = Math.abs(number);\n        num = num.toFixed(2);\n        num = num.toString();\n\n        while (pattern.test(num)) num = num.replace(pattern, \"$1,$2\");\n        return \"-$\" + num;\n      }\n    } else {\n      return \"$0.00\";\n    }\n  }\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  sliceToNumber(string = 0, digit = 0) {\n    return string.slice(0, digit);\n  }\n\n  timeConverter(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp * 1000);\n    // var months = [\n    //   \"Jan\",\n    //   \"Feb\",\n    //   \"Mar\",\n    //   \"Apr\",\n    //   \"May\",\n    //   \"Jun\",\n    //   \"Jul\",\n    //   \"Aug\",\n    //   \"Sep\",\n    //   \"Oct\",\n    //   \"Nov\",\n    //   \"Dec\"\n    // ];\n    // var year = a.getFullYear();\n    // var month = months[a.getMonth()];\n    // var date = a.getDate();\n    var hour = a.getHours();\n    var min = a.getMinutes();\n    // var sec = a.getSeconds();\n    if (min < 10) {\n      min = \"0\" + min;\n    }\n    // var ampm = \"AM\";\n    var timeis = \"\";\n    if (hour <= 12) {\n      timeis = hour + \":\" + min + \"AM\";\n    } else {\n      hour = parseFloat(hour) - 12;\n      timeis = hour + \":\" + min + \"PM\";\n    }\n    //   var res = hour + \":\" + min;\n    return timeis;\n  }\n  currentDate() {\n    var d = new Date();\n    var year = parseInt(d.getYear()) - 100;\n    var month = d.getMonth() + 1;\n    return \"20\" + year + \"/\" + month + \"/\" + d.getDate();\n  }\n  currentDateYesterday() {\n    var d = new Date();\n    var year = parseInt(d.getYear()) - 100;\n    var month = d.getMonth() + 1;\n    var yesterday = new Date(d.getTime());\n    yesterday.setDate(d.getDate() - 1);\n    var date = yesterday.getDate();\n    return \"20\" + year + \"/\" + month + \"/\" + date;\n  }\n  currentDateBeforeDay(beforeDay) {\n    var d = new Date();\n\n    var yesterday = new Date(d.getTime());\n    yesterday.setDate(d.getDate() - parseInt(beforeDay));\n    var date = yesterday.getDate();\n    var year = parseInt(yesterday.getYear()) - 100;\n    var month = yesterday.getMonth() + 1;\n\n    return \"20\" + year + \"/\" + month + \"/\" + date;\n  }\n  currentDateBeforeMonth(beforeMonth) {\n    var d = new Date();\n    d.setMonth(d.getMonth() - parseInt(beforeMonth));\n    var month = d.getMonth() + parseInt(1);\n    var year = parseInt(d.getYear()) - 100;\n    return \"20\" + year + \"/\" + month + \"/\" + d.getDate();\n  }\n  currentDateBeforeYear(beforeYear) {\n    var d = new Date();\n    var month = d.getMonth() + parseInt(1);\n    var year = parseInt(d.getYear()) - 100;\n    year = year - parseInt(beforeYear);\n    return \"20\" + year + \"/\" + month + \"/\" + d.getDate();\n  }\n\n  graphColorPostion(data) {\n    if (data >= 0) {\n      return \"#1fa764\";\n    } else {\n      return \"#ed5454\";\n    }\n  }\n  graphColorFillPostion(data) {\n    if (data >= 0) {\n      return \"#abe5c1\";\n    } else {\n      return \"#ffa1a9\";\n    }\n  }\n\n  stringToArray(str) {\n    var res = str.split(\",\");\n    var newArray = [];\n    res.forEach(character => {\n      if (character === character.toUpperCase()) {\n        if (character.length <= 4) {\n          newArray.push(character);\n        }\n      }\n    });\n    return newArray.slice(0, 10);\n  }\n\n  checkIsUpparCashOrNot(character) {\n    if (character === character.toUpperCase()) {\n      if (character.length <= 4) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  stringCheckResponseInColor(str, spn) {\n    var innerHTML = str;\n    spn = spn.toUpperCase();\n    var index = innerHTML.indexOf(spn);\n    if (index >= 0) {\n      innerHTML =\n        innerHTML.substring(0, index) +\n        \"<span className='highlight'>\" +\n        innerHTML.substring(index, index + spn.length) +\n        \"</span>\" +\n        innerHTML.substring(index + spn.length);\n\n      // return 'ram';\n    }\n\n    return innerHTML;\n  }\n\n  subStrStartEnd(str, starting, ending) {\n    if (str) {\n      return str.substr(starting, ending);\n    } else {\n      return str;\n    }\n  }\n\n  bodyColor() {\n    var currentUrl = window.location.href;\n    var ar = currentUrl.split(\"/\");\n\n    if (ar[3] === \"stocks\") {\n      return \"black\";\n    } else {\n      return \"\";\n    }\n  }\n\n  getParchantage(parValue, totalvalue) {\n    return (parseFloat(parValue) * parseFloat(totalvalue)) / 100;\n  }\n  getUnknownParchantage(parValue, totalvalue) {\n    return (parseFloat(parValue) / totalvalue) * 100;\n  }\n\n  getMinMaxValue(ar) {\n    /*eslint no-extend-native: [\"error\", { \"exceptions\": [\"Array\"] }]*/\n    if (ar.producttype === \"variable\") {\n      const arr = [];\n      ar.variation.map(key => {\n        arr.push(key.sale_price);\n        return null;\n      });\n      Array.prototype.max = function() {\n        return Math.max.apply(null, this);\n      };\n\n      Array.prototype.min = function() {\n        return Math.min.apply(null, this);\n      };\n      if (arr.length > 1) {\n        if (arr.min() === arr.max()) {\n          const returnString = \"From $\" + this.nombarFormat(arr.min()) ;\n          return returnString;\n        }\n        const returnString =\n          \"From $\" +\n          this.nombarFormat(arr.min()) +\n          \" - $\" +\n          this.nombarFormat(arr.max());\n        return returnString;\n      } else {\n        const returnString = \"From $\" + this.nombarFormat(arr.min());\n        return returnString;\n      }\n    }\n  }\n  getMinMaxValue2(ar) {\n    /*eslint no-extend-native: [\"error\", { \"exceptions\": [\"Array\"] }]*/\n    if (ar.producttype === \"variable\") {\n      const arr = [];\n      ar.variation.map(key => {\n        arr.push(key.sale_price);\n        return null;\n      });\n      Array.prototype.max = function() {\n        return Math.max.apply(null, this);\n      };\n\n      Array.prototype.min = function() {\n        return Math.min.apply(null, this);\n      };\n      if (arr.length > 1) {\n        if (arr.min() === arr.max()) {\n          const returnString = \"$\" + this.nombarFormat(arr.min());\n          return returnString;\n        }\n        const returnString =\n          \"$\" +\n          this.nombarFormat(arr.min()) +\n          \" - $\" +\n          this.nombarFormat(arr.max());\n        return returnString;\n      } else {\n        const returnString = \"$\" + this.nombarFormat(arr.min());\n        return returnString;\n      }\n    }\n  }\n  getMinMaxValueWithVariation(ar) {\n    if (ar.producttype === \"variable\") {\n      const arr = [];\n      ar.variation.map(key => {\n        arr.push(key.sale_price);\n        return null;\n      });\n      Array.prototype.max = function() {\n        return Math.max.apply(null, this);\n      };\n\n      Array.prototype.min = function() {\n        return Math.min.apply(null, this);\n      };\n      if (arr.length > 1) {\n        const returnString =\n          \"From $\" +\n          this.nombarFormat(arr.min()) +\n          \" - $\" +\n          this.nombarFormat(arr.max());\n        return returnString;\n      } else {\n        const returnString = \"From $\" + this.nombarFormat(arr.min());\n        return returnString;\n      }\n    } else {\n      if (ar.dsaleprice) {\n        const returnString =\n          \"From $\" + this.nombarFormat(ar.dsaleprice) ;\n        return returnString;\n      } else {\n        const returnString =\n          \"From $\" + this.nombarFormat(ar.dregularprice) ;\n        return returnString;\n      }\n    }\n  }\n\n  isLoaded(obj) {\n    return Object.values(obj).every(el => el);\n  }\n\n  removeParams(url, sParam) {\n    url = url.split(\"?\")[0] + \"?\";\n    var sPageURL = decodeURIComponent(window.location.search.substring(1)),\n      sURLVariables = sPageURL.split(\"&\"),\n      sParameterName,\n      i;\n\n    for (i = 0; i < sURLVariables.length; i++) {\n      sParameterName = sURLVariables[i].split(\"=\");\n      if (sParameterName[0] !== sParam) {\n        url = url + sParameterName[0] + \"=\" + sParameterName[1] + \"&\";\n      }\n    }\n    return url.substring(0, url.length - 1);\n  }\n\n  returnReferringUrl(url) {\n    if (!url) return \"Direct traffic\";\n    if (url.trim() === \"\") return \"Direct traffic\";\n    return url;\n  }\n  getDialCode(countryCodeList, countryCode) {\n    var returnCuntryCode = \"\";\n    countryCodeList.forEach(element => {\n      if (element.code === countryCode) {\n        returnCuntryCode = element.dial_code;\n      }\n    });\n    return returnCuntryCode;\n  }\n  showExportMsg(shippingType, isSame, billingAddress, shippingAddress) {\n    if (shippingType !== \"express\") return false;\n\n    if (isSame) {\n      if (billingAddress)\n        if (billingAddress.toLowerCase().trim() === \"usa\") {\n          return false;\n        }\n    } else {\n      if (shippingAddress)\n        if (shippingAddress.toLowerCase().trim() === \"usa\") {\n          return false;\n        }\n    }\n\n    return true;\n  }\n  parseOrderProduct(item) {\n    const isCombo = item.combo ? true : false,\n      comboId = item.combo ? item._id : null,\n      productId = item.combo ? null : item.productid._id,\n      productMeta = item.combo ? null : item._id,\n      isSubscribed = item.subscribed ? true : false,\n      subscriptionMeta = item.subscribed\n        ? {\n            duration: item.subscribedTime\n          }\n        : null,\n      itemId = item._id,\n      _id = item._id,\n      qty = item.qty.value,\n      title = item.combo ? item.title : item.productid.producttitle,\n      unitPrice = item.saleprice ? item.saleprice : item.regularprice,\n      subTotal = item.saleprice\n        ? this.multiply(item.saleprice, item.qty.value)\n        : this.multiply(item.regularprice, item.qty.value),\n      attribute = this.getSelectedAttributes(item),\n      height = item.shipping_height,\n      width = item.shipping_width,\n      length = item.shipping_length,\n      volume = item.volume,\n      weight = item.weight;\n\n    const order = {\n      isCombo,\n      comboId,\n      productId,\n      productMeta,\n      isSubscribed,\n      subscriptionMeta,\n      itemId,\n      _id,\n      qty,\n      unitPrice,\n      subTotal,\n      attribute,\n      width,\n      length,\n      height,\n      title,\n      volume,\n      weight\n    };\n    this.removeEmpty(order);\n    return order;\n  }\n  removeEmpty = obj => {\n    Object.keys(obj).forEach(key => obj[key] === null && delete obj[key]);\n  };\n  getSelectedAttributes = item => {\n    if (item.producttype === \"variable\")\n      return item.attributes\n        .map(el => ({\n          [el.names]: item[el.names].value\n        }))\n        .filter(el => el)\n        .reduce(\n          (a, b) => ({\n            ...a,\n            ...b\n          }),\n          {}\n        );\n    return null;\n  };\n  multiply(a, b) {\n    return parseFloat(a) * parseFloat(b);\n  }\n  generateOrderNew(\n    stateObj,\n    paymentResponse = \"\",\n    referralId,\n    cart,\n    user,\n    confirmShipRes\n  ) {\n    const { service, ...confirmRest } = confirmShipRes;\n    const { paymentMethod } = stateObj;\n    const {\n      items,\n      shippingCharge,\n      subTotal,\n      totalWeight,\n      totalVolume,\n      taxValue,\n      taxPercent,\n      taxCouponDiscount,\n      taxCouponCode\n    } = cart;\n\n    const orderProducts = items.map(el => this.parseOrderProduct(el));\n    const {\n      height: totalHeight,\n      length: totalLength,\n      width: totalWidth\n    } = this.getHeightWeight(orderProducts);\n    const order = {\n      totalVolume,\n      totalWeight,\n      shippingMethod: service,\n      products: orderProducts,\n      countryTax: taxPercent * 100,\n      taxAmount:\n        taxValue ||\n        parseFloat(cart.subTotal || 0) * parseFloat(taxPercent || 0) ||\n        0,\n      shippingCharge,\n      userDetails: this.getUserDetails(stateObj).user,\n      orderStatus: defaultOrderStatus,\n      paymentMethod: paymentMethod === \"stripe\" ? \"Authorize\" : paymentMethod,\n      status: defaultStatusInOrder,\n      wholeSubtotal: parseFloat(subTotal.toFixed(2)),\n      wasReferred: referralId ? true : false,\n      referral: referralId ? referralId : null,\n      isCoupon: taxCouponCode ? true : false,\n      couponId: taxCouponCode,\n      couponDisc: taxCouponCode ? taxCouponDiscount : null,\n      grandTotal: this.getGrandTotal(\n        subTotal,\n        taxPercent,\n        shippingCharge,\n        taxCouponDiscount\n      ),\n      isGuest: user._id ? false : true,\n      userId: user._id ? user._id : null,\n      userMetaId: user.userMetaId ? user.userMetaId : null,\n      totalHeight,\n      totalWidth,\n      totalLength,\n      refPercentage: referralPresent,\n      ...confirmRest\n    };\n    this.removeEmpty(order);\n    return order;\n  }\n  getDiscount(discount, subTotal) {\n    return (discount * subTotal) / 100 || 0;\n  }\n  getGrandTotal(subTotal, taxPresent, shippingCharge, discount) {\n    const amountWithTax = subTotal + taxPresent * subTotal + shippingCharge;\n    const discountAmount = this.getDiscount(discount, subTotal);\n    const total =\n      parseFloat(amountWithTax || 0) - parseFloat(discountAmount || 0);\n    return parseFloat(total.toFixed(2));\n  }\n  getHeightWeight(items) {\n    const height = items.map(el => el.height * parseFloat(el.qty));\n    const width = items.map(el => el.width * parseFloat(el.qty));\n    const length = items.map(el => el.length * parseFloat(el.qty));\n    \n    const shape = {\n      height: height.reduce((a, b) => a + b, 0),\n      width: width.reduce((a, b) => a + b, 0),\n      length: length.reduce((a, b) => a + b, 0)\n    };\n    return shape;\n  }\n  generateOrder(\n    stateObj,\n    paymentResponse = \"\",\n    referrer_url_id,\n    cart,\n    user,\n    confirmShipRes\n  ) {\n    const { service, ...confirmRest } = confirmShipRes;\n    var transactionId = \"000\";\n    const payType = stateObj.paymentMethod;\n    if (stateObj.paymentMethod === \"stripe\" && paymentResponse) {\n      transactionId = paymentResponse;\n    }\n    if (\n      stateObj.paymentMethod === \"paypal\" &&\n      paymentResponse &&\n      paymentResponse.paymentID\n    ) {\n      transactionId = paymentResponse.paymentID;\n    }\n    // return false;\n    const {\n      items,\n      shippingCharge,\n      subTotal,\n      totalWeight,\n      totalVolume,\n      taxValue,\n      taxPercent,\n      taxCouponDiscount,\n      taxCouponCode\n    } = cart;\n    const {\n      billing_first_name,\n      billing_last_name,\n      billing_email_name,\n      billing_phone_name,\n      billing_address_name_01,\n      billing_address_name_02,\n      billing_address_town,\n      shipping_first_name,\n      shipping_last_name,\n\n      shipping_address_name_01,\n      shipping_address_name_02,\n      shipping_address_town,\n      selectedShippingCity,\n      selectedCity,\n      selectedShippingCountry,\n      selectedCountry,\n      shipping_zip_code,\n      billing_zip_code,\n      sameShipping\n    } = stateObj;\n\n    let order = {};\n    let country = \"\";\n    if (selectedShippingCountry) {\n      country = selectedShippingCountry;\n    } else if (selectedCountry) {\n      country = selectedCountry || \"\";\n    }\n    let state = \"\";\n    if (selectedShippingCity) {\n      state = selectedShippingCity;\n    } else if (selectedCity) {\n      state = selectedCity || \"\";\n    }\n    let zipcode = \"\";\n    if (shipping_zip_code) {\n      zipcode = shipping_zip_code;\n    } else if (billing_zip_code) {\n      zipcode = billing_zip_code;\n    }\n    order.orderproduct = items.map(el => {\n      // console.log({el})\n      // this.parseOrderProduct(el);\n      // console.log({\n      //   checkOrder: this.parseOrderProduct(el)\n      // })\n      // return this.parseOrderProduct(el)\n      let returnItem = {\n        productmetaid: el._id,\n        proucttitle: el.combo ? el.title : el.productid.producttitle,\n        quantity: el.qty.value,\n        singleprice: el.saleprice ? el.saleprice : el.regularprice,\n        subtotal: 0,\n        orderdate: Date(),\n        country,\n        isguest: true || false,\n        subscribed: el.subscribed,\n        subscribedDiscountPersent: el.subscribedDiscountPersent\n      };\n\n      let subtotal =\n        parseInt(returnItem.quantity || 1) *\n        parseInt(returnItem.singleprice || 1);\n      let attribute = {};\n      if (el.producttype === \"variable\") {\n        el.attributes.map((item, index) => {\n          attribute = { ...attribute, [item.names]: el[item.names].value };\n          return null;\n        });\n      }\n\n      returnItem = { ...returnItem, subtotal, attribute };\n      return { ...returnItem };\n    });\n\n    let shippingAddress = `${shipping_first_name} ${shipping_last_name}, ${shipping_address_name_01} ${shipping_address_name_02} ${shipping_address_town} `;\n    let billingAddress = `${billing_first_name} ${billing_last_name}, ${billing_address_name_01} ${billing_address_name_02} ${billing_address_town} `;\n\n    const TaxgrandTotalWithTax =\n      subTotal + taxPercent * subTotal + shippingCharge;\n    const discount = (taxCouponDiscount * subTotal) / 100;\n    if (user._id) {\n      const userid = user._id;\n      order.userid = userid;\n    }\n\n    order.grandtotal =\n      parseFloat(TaxgrandTotalWithTax || 0) - parseFloat(discount || 0);\n    order.coupondisc = taxCouponDiscount;\n    order.couponid = taxCouponCode;\n    order.country = country;\n    order.offerprice = 100;\n    order.shippingmethod = service || \"Express shipping\" || \"Normal shipping\";\n    order.wholesubtotal = subTotal;\n    order.shippingcharge = shippingCharge || 0;\n    order.paymentmethod = payType;\n    order.ordernote = \"Make it quick\";\n    order.status = \"in process\";\n    order.paymentstatus = \"Done\";\n    order.transactionid = transactionId;\n    order.country_tax = taxPercent * 100;\n    order.totalweight = totalWeight;\n    order.totalvolume = totalVolume;\n    order.taxamount = taxValue;\n    order.userdetails = {\n      country,\n      firstname: billing_first_name,\n      lastname: billing_last_name,\n      email: billing_email_name,\n      shippingaddress: sameShipping ? billingAddress : shippingAddress,\n      billingaddress: billingAddress,\n      extraaddress: \"jdjdjd\",\n      city: shipping_address_town\n        ? shipping_address_town\n        : billing_address_town,\n      state,\n      zipcode,\n      phonenumber: billing_phone_name\n    };\n    order.orderstatus = \"Not delivered\";\n    if (referrer_url_id) {\n      order.wasreferred = true;\n      order.referral = referrer_url_id;\n    }\n    return { ...order, ...confirmRest };\n  }\n  getUserDetails(stateObj) {\n    const {\n      billing_first_name,\n      billing_last_name,\n      billing_email_name,\n      billing_phone_name,\n      billing_address_name_01,\n      billing_address_name_02,\n      billing_address_town,\n      shipping_first_name,\n      shipping_last_name,\n\n      shipping_address_name_01,\n      shipping_address_name_02,\n      shipping_address_town,\n      selectedShippingCity,\n      selectedCity,\n      selectedShippingCountry,\n      selectedCountry,\n      shipping_zip_code,\n      billing_zip_code,\n      sameShipping\n    } = stateObj;\n\n    const shippingAddress = `${shipping_first_name} ${shipping_last_name}, ${shipping_address_name_01} ${shipping_address_name_02} ${shipping_address_town} `;\n    const billingAddress = `${billing_first_name} ${billing_last_name}, ${billing_address_name_01} ${billing_address_name_02} ${billing_address_town} `;\n\n    const user = {\n      firstname: billing_first_name,\n      lastname: billing_last_name,\n      email: billing_email_name,\n      shippingaddress: sameShipping ? billingAddress : shippingAddress,\n      billingaddress: billingAddress,\n      phonenumber: billing_phone_name,\n      country: this.getOneValid(selectedShippingCountry, selectedCountry),\n      zipcode: this.getOneValid(shipping_zip_code, billing_zip_code),\n      state: this.getOneValid(selectedShippingCity, selectedCity)\n    };\n    return {\n      user,\n      shippingAddress,\n      billingAddress\n    };\n  }\n  getOneValid(a, b) {\n    if (a && a.trim()) return a;\n    if (b && b.trim()) return b;\n\n    return \"\";\n  }\n  calculatePrice = item => {\n    const {\n      saleprice,\n      regularprice,\n      subscribedDiscountPersent,\n      qty: { value },\n      subscribed\n    } = item;\n    if (subscribed) {\n      if (saleprice) {\n        const price =\n          (parseFloat(saleprice) * parseFloat(value)) /\n          parseFloat(subscribedDiscountPersent);\n        return price;\n      } else if (regularprice) {\n        const price =\n          (parseFloat(regularprice) * parseFloat(value)) /\n          parseFloat(subscribedDiscountPersent);\n        return price;\n      }\n      return 0;\n    }\n  };\n  convertCardErrors = error => {\n    switch (error) {\n      case \"Your card number is incorrect.\":\n        return cardNumberInvalid;\n\n      case \"Missing required param: card[exp_year].\":\n        return expireYearInvalid;\n\n      case \"Could not find payment information.\":\n        return cardDetailsNotMAtch;\n\n      case \"Your card's expiration year is invalid.\":\n        return expireYearInvalid;\n\n      case \"Your card's expiration month is invalid.\":\n        return expireMonthInvalid;\n\n      default:\n        return expireMonthInvalid;\n    }\n  };\n  stripeCheckValidation = paymentDetail => {\n    const { cvNumber, expDate, cardNumber } = paymentDetail;\n    if (cvNumber && cvNumber.length <= 2) {\n      return false;\n    }\n    if (expDate && expDate.length <= 4) {\n      return false;\n    }\n    if (cardNumber && cardNumber.length <= 18) {\n      return false;\n    }\n\n    return true;\n  };\n  checkProductInWishList(list = [], product_id) {\n    var flag = false;\n    // console.log(list)\n    // console.log(product_id)\n    if (list.length > 0) {\n      list.forEach((itm, i) => {\n        if (itm.productid === product_id) {\n          flag = i;\n        }\n      });\n    }\n    return flag;\n  }\n\n  getSingleElementByMultipleObject(arrayData, f) {\n    const result = arrayData.reduce(function(r, a) {\n      r[a.carrier] = r[a.carrier] || [];\n      r[a.carrier].push(a);\n      return r;\n    }, {});\n    return result;\n  }\n  shippingStringRate(key) {\n    if (key && key.est_delivery_days) {\n      return \" in \" + key.est_delivery_days + \" Days .\";\n    } else {\n      return \" in - Days .\";\n    }\n  }\n  cartHeightWidhtCalculation(item) {\n    var height = 0;\n    var width = 0;\n    var length = 0;\n    var weight = 0;\n    if (item.length > 0) {\n      item.forEach(itm => {\n        height = height + itm.shipping_height;\n        width = width + itm.shipping_width;\n        length = length + itm.shipping_length;\n        weight = weight + itm.weight;\n      });\n    }\n    return {\n      height,\n      width,\n      length,\n      weight\n    };\n  }\n  cartHeightWidhtCalculation2(itemA) {\n    var height = 0;\n    var width = 0;\n    var length = 0;\n    var weight = 0;\n    function flatten(arr) {\n      return arr.reduce(function(flat, toFlatten) {\n        return flat.concat(\n          Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten\n        );\n      }, []);\n    }\n    const item = flatten(\n      itemA.map(el => {\n        const qty = el.qty ? (el.qty.value ? parseInt(el.qty.value) : 1) : 1;\n        if (qty > 1) return new Array(qty).fill(el);\n\n        return el;\n      })\n    );\n    const getGreater = (a, b) => {\n      if (a > b) return a;\n      return b;\n    };\n    if (item.length > 0) {\n      item.forEach(itm => {\n        // height = getGreater(height, itm.shipping_height);\n        // width = width + itm.shipping_width;\n        // length = getGreater(length, itm.shipping_length);\n        weight = weight + itm.weight;\n      });\n    }\n    const itemsB = itemA.map(el => ({\n      h: el.shipping_height,\n      l: el.shipping_length,\n      w: el.shipping_width,\n      qty: el.qty.value\n    }))\n    const itemsC = [].concat.apply([], itemsB);\n    const itemsD = combineLoop(itemsC)[0]\n    return {\n      height: itemsD.h,\n      width: itemsD.w,\n      length: itemsD.l,\n      weight\n    };\n  }\n  getShippingRates = rateArr => {\n    if (rateArr.length > 0) {\n      const filteredRates =  _.uniqBy(rateArr, function (e) {\n        return e.service;\n      });\n      const smallSorted = filteredRates.sort((a, b) => parseFloat(a.rate || 0) - parseFloat(b.rate || 0))\n      const Smallest = smallSorted[0];\n      const Smallest1 = smallSorted[1];\n      const Smallest2 = smallSorted[2];\n      const PriorityRaw = filteredRates.find(el => el.service === \"Priority\");\n      const ExpressRaw = filteredRates.find(el => el.service === \"Express\");\n\n      // const standard =\n      //   Smallest.service === \"Priority\" || Smallest.service === \"Express\"\n      //     ? null\n      //     : {\n      //         ...Smallest,\n      //         customName: \"Standard\",\n      //         customRate: parseFloat(Smallest.rate) + shippingExtraRate\n      //       };\n      // const Priority = PriorityRaw\n      //   ? {\n      //       ...PriorityRaw,\n      //       customName: \"Priority\",\n      //       customRate: parseFloat(PriorityRaw.rate) + shippingExtraRate\n      //     }\n      //   : null;\n      // const Express = ExpressRaw\n      //   ? {\n      //       ...ExpressRaw,\n      //       customName: \"Express\",\n      //       customRate: parseFloat(ExpressRaw.rate) + shippingExtraRate\n      //     }\n      //   : null;\n      const standard = Smallest && {\n                ...Smallest,\n                customName: \"Standard\",\n                customRate: parseFloat(Smallest.rate) + shippingExtraRate\n              };\n      const Priority = Smallest1 && {\n                ...Smallest1,\n                customName: \"Priority\",\n                customRate: parseFloat(Smallest1.rate) + shippingExtraRate\n              };\n      const Express = Smallest2 && {\n                ...Smallest2,\n                customName: \"Express\",\n                customRate: parseFloat(Smallest2.rate) + shippingExtraRate\n              };\n      return [standard, Priority, Express].filter(el => el);\n    }\n    return rateArr;\n    // return [\n    //   {\n    //     carrier: \"Carrier_Not_Found\",\n    //     created_at: new Date(),\n    //     currency: \"USD\",\n    //     mode: \"test\",\n    //     object: \"Rate\",\n    //     customName: \"Standard\",\n    //     rate: shippingStaticRate,\n    //     customRate: shippingStaticRate,\n    //     retail_currency: \"USD\",\n    //   }\n    // ]\n\n  };\n\n  exportToJson(objectData, fileName = \"export\") {\n    let filename = `${fileName}.json`;\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob(\n        [decodeURIComponent(encodeURI(JSON.stringify(objectData)))],\n        { type: contentType }\n      );\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href =\n        \"data:\" +\n        contentType +\n        \",\" +\n        encodeURIComponent(JSON.stringify(objectData));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  }\n  qtyList(qty = 10) {\n    const quantity = parseFloat(qty) > 10 ? parseFloat(qty) : 10;\n    const temp = new Array(quantity).fill(\"\");\n    const newarray = temp.map((el, index) => ({\n      label: index + 1,\n      value: index + 1\n    }));\n    return newarray;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}