{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport dynamic from 'next/dynamic';\nconst CartItem = dynamic(() => import(\"./CartItem\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"./CartItem\")],\n    modules: [\"./CartItem\"]\n  }\n});\nconst Button = dynamic(() => import(\"./form-components/Button\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"./form-components/Button\")],\n    modules: [\"./form-components/Button\"]\n  }\n});\nimport { connect } from \"react-redux\";\nimport { getProductTitle, getProductShortDesc, getProductImage } from \"../services/helpers/product\";\nimport { getGrandTotal } from \"../services/helpers/cart\";\nimport { numberFormat } from \"../services/helpers/misc\";\nimport { initialCart } from \"../constants/reduxInitialStates\";\nimport { modifyItem, removeFromCart, hideCartBar, setCoupon as setStateCoupon, removeCoupon } from \"../redux/actions\";\nimport Link from \"next/link\";\nconst Heading = dynamic(() => import(\"./Heading\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"./Heading\")],\n    modules: [\"./Heading\"]\n  }\n});\nconst Input = dynamic(() => import(\"./form-components/Input\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"./form-components/Input\")],\n    modules: [\"./form-components/Input\"]\n  }\n});\nimport { useEffect, useState } from \"react\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { getCoupon } from \"../services/apis/checkout\";\n\nconst CartDrawer = ({\n  complete,\n  cart,\n  modifyItem,\n  removeFromCart,\n  hideCartBar,\n  setStateCoupon,\n  removeCoupon\n}) => {\n  const {\n    0: coupon,\n    1: setCoupon\n  } = useState(\"\");\n\n  const handleInput = e => {\n    setCoupon(e.target.value.toUpperCase());\n\n    if (e.target.value === \"\" && cart.taxCouponCode != \"\") {\n      removeCoupon(cart);\n    }\n  };\n\n  useEffect(() => {\n    if (cart.taxCouponDiscount != 0) {\n      setCoupon(cart.taxCouponCode);\n    }\n  }, []);\n\n  const handleDiscount = async () => {\n    // e.preventDefault();\n    const {\n      data\n    } = await getCoupon(coupon);\n\n    if (data.status) {\n      setStateCoupon(data.coupon.data.filter(data => data.id === coupon)[0], cart);\n    }\n  }; //console.log(cart);\n\n\n  const qtyChange = (qty, oldItem) => {\n    modifyItem({\n      oldItem,\n      newItem: _objectSpread(_objectSpread({}, oldItem), {}, {\n        qty\n      })\n    });\n  };\n\n  const grandTotal = getGrandTotal(cart.subTotal, cart.taxPercent, cart.shippingCharge, cart.taxCouponDiscount);\n  console.log(cart);\n  const hasItems = cart.items.length > 0 ? true : false;\n  const taxPrice = cart.taxCouponDiscount ? (cart.taxCouponDiscount / 100 * cart.subTotal).toFixed(2) : 0;\n  const shippingCharge = (cart.shippingCharge || 0).toFixed(2) || 0;\n  console.log(taxPrice, cart.taxPercent);\n  return __jsx(\"div\", {\n    className: \"c-cart-drawer\"\n  }, hasItems && __jsx(React.Fragment, null, cart.items.map((el, i) => {\n    // console.log(el);\n    return __jsx(CartItem, {\n      key: i,\n      title: getProductTitle(el),\n      image: getProductImage(el),\n      subTitle: getProductShortDesc(el),\n      price: `$${numberFormat(parseFloat(el.saleprice) * el.qty)}`,\n      quantity: el.qty,\n      onRemove: () => removeFromCart(el),\n      isDisabled: !cart.isEditable,\n      onQtyChange: e => {\n        if (cart.isEditable) qtyChange(e, el);\n      }\n    });\n  }), __jsx(\"div\", {\n    className: \"mt-auto\"\n  }), complete && __jsx(React.Fragment, null, __jsx(CartItem, {\n    small: true,\n    title: \"Subtotal\",\n    price: `$${numberFormat(parseFloat(cart.subTotal))}`,\n    total: true,\n    versions: [\"small\", \"no-border\"]\n  }), __jsx(CartItem, {\n    small: true,\n    title: \"Shipping\",\n    price: `$${shippingCharge}`,\n    total: true // versions={cart.taxPercent ? [\"small\", \"no-border\"] : [\"small\"]}\n    ,\n    versions: [\"small\", \"no-border\"]\n  }), taxPrice > 0 && __jsx(CartItem, {\n    small: true,\n    title: \"Discount\" // price={`${(cart.taxPercent) ? cart.taxPercent : 0}`}\n    ,\n    price: `-$${taxPrice}`,\n    total: true,\n    versions: [\"small\", \"no-border\"]\n  }), cart.taxPercent > 0 && __jsx(CartItem, {\n    small: true,\n    title: \"Tax\" // price={`${(cart.taxPercent) ? cart.taxPercent : 0}`}\n    ,\n    price: `$${numberFormat(parseFloat(cart.taxPercent * cart.subTotal))}`,\n    total: true,\n    versions: [\"small\", \"no-border\"]\n  }), __jsx(CartItem, {\n    title: \"Total\",\n    price: `$${grandTotal}`,\n    total: true,\n    versions: [\"no-border\"]\n  }), __jsx(\"div\", {\n    className: \"c-cart-drawer__discount-flex\"\n  }, __jsx(Input, {\n    value: coupon,\n    onChange: handleInput,\n    placeholder: \"Discount Code\",\n    versions: [\"discount\"]\n  }), __jsx(Button, {\n    onClick: handleDiscount,\n    type: \"submit\",\n    versions: [\"discount\"],\n    value: \"Apply\"\n  }))), !complete && __jsx(React.Fragment, null, __jsx(CartItem, {\n    title: \"subtotal\",\n    price: `$${numberFormat(parseFloat(cart.subTotal))}`,\n    total: true,\n    versions: [\"no-border\"]\n  }), __jsx(\"div\", {\n    className: \"c-cart-drawer__btn-wrapper row justify-content-center\"\n  }, __jsx(Link, {\n    href: \"/checkout\"\n  }, __jsx(\"a\", {\n    className: \"c-btn c-btn--block c-btn--dark mt-5\",\n    style: {\n      marginBottom: \"4rem\"\n    }\n  }, \"Proceed to checkout\"))))), !hasItems && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"c-cart-drawer__emptyCart\"\n  }, __jsx(LazyLoadImage, {\n    className: \"c-cart-drawer__emptyCart--icon\",\n    src: \"/images/empty-cart.png\",\n    alt: \"Empty Cart..\"\n  })), __jsx(Heading, {\n    parentClass: \"c-cart-item\",\n    versions: [\"dark\"],\n    style: {\n      textAlign: \"center\"\n    }\n  }, \"Your bag is empty\"), __jsx(\"div\", {\n    className: \"c-cart-drawer__btn-wrapper mt-auto mb-4 row justify-content-center\"\n  }, __jsx(Link, {\n    href: \"/shop\"\n  }, __jsx(\"a\", {\n    onClick: hideCartBar,\n    className: \"c-btn c-btn--block c-btn--dark\"\n  }, \"Continue shopping\")))));\n};\n\nCartDrawer.defaultProps = {\n  complete: false,\n  cart: initialCart\n};\n\nconst mapStateToProps = state => ({\n  cart: state.cart\n});\n\nexport default connect(mapStateToProps, {\n  modifyItem,\n  removeFromCart,\n  hideCartBar,\n  setStateCoupon,\n  removeCoupon\n})(CartDrawer);","map":null,"metadata":{},"sourceType":"module"}