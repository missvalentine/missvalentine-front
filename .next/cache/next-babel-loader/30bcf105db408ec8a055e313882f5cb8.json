{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// pages/_app.js\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport App from \"next/app\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { makeStore } from \"../redux/store\";\nimport AppWrapper from \"../components/AppWrapper\";\nimport withRedux from \"next-redux-wrapper\";\nimport Head from \"next/head\";\nimport projectSettings from \"../constants/projectSettings\";\n/**\n* @param {object} initialState\n* @param {boolean} options.isServer indicates whether it is a server side or client side\n* @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n* @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n* @param {boolean} options.debug User-defined debug mode param\n* @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR \n*/\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"script\", {\n      src: `https://maps.googleapis.com/maps/api/js?key=${projectSettings.googleApiKey}&libraries=places&v=3` // async\n      // defer\n\n    })), __jsx(Provider, {\n      store: store\n    }, __jsx(PersistGate, {\n      persistor: store.__persistor // loading={<Component isPersist={false} {...pageProps} />}\n\n    }, __jsx(AppWrapper, {\n      router: this.props.router\n    }, __jsx(Component, _extends({\n      isPersist: true\n    }, pageProps))))));\n  }\n\n}\n\nexport default withRedux(makeStore, {\n  debug: true\n})(MyApp);","map":null,"metadata":{},"sourceType":"module"}