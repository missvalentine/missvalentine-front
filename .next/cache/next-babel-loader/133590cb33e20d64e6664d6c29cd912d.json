{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport dynamic from \"next/dynamic\";\nimport { Form, Icon, Row } from \"antd\";\nvar Heading = dynamic(function () {\n  return import(\"../Heading\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../Heading\")];\n    },\n    modules: [\"../Heading\"]\n  }\n});\nvar Input = dynamic(function () {\n  return import(\"../form-components/Input\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../form-components/Input\")];\n    },\n    modules: [\"../form-components/Input\"]\n  }\n});\nimport { connect } from \"react-redux\";\nvar Button = dynamic(function () {\n  return import(\"../form-components/Button\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../form-components/Button\")];\n    },\n    modules: [\"../form-components/Button\"]\n  }\n});\nimport { loginUser, registerUser } from \"../../services/api\";\nimport msgStrings from \"../../constants/msgStrings\";\nimport { toggleRegBar, drawerToDisplay } from \"../../redux/actions/drawers\";\nimport { setUser } from \"../../redux/actions/user\";\nimport regex from \"../../services/helpers/regex\";\nimport reactComponentDebounce from \"react-component-debounce\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport GoogleLogin from \"react-google-login\";\nimport FacebookLogin from \"react-facebook-login\";\nimport { faFacebookF } from \"@fortawesome/free-brands-svg-icons\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nlibrary.add(faFacebookF);\nvar DebounceInput = reactComponentDebounce({\n  valuePropName: \"value\",\n  triggerMs: 1000\n})(Input);\n\nvar LoginForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(LoginForm, _React$Component);\n\n  var _super = _createSuper(LoginForm);\n\n  function LoginForm() {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          // console.log(\"Received values of form: \", values);\n          var email = values.email,\n              password = values.password;\n\n          _this.setState({\n            isLoading: true,\n            error: null\n          });\n\n          loginUser({\n            email: email,\n            password: password\n          }).then(function (res) {\n            _this.setState({\n              isLoading: false\n            }); //  console.log({ res });\n\n\n            if (res.status === 200) {\n              if (res.data.status) {\n                _this.props.setUser(res.data.user);\n\n                _this.props.toggleRegBar();\n              } else {\n                var _res$data = res.data,\n                    error = _res$data.error,\n                    message = _res$data.message;\n\n                if (message) {\n                  _this.setState({\n                    error: message === \"User not found\" ? msgStrings.LOGIN_ERROR : message\n                  });\n                } else {\n                  _this.setState({\n                    error: error\n                  });\n                }\n              }\n            } else {}\n          })[\"catch\"](function (err) {\n            console.log({\n              err: err\n            });\n\n            _this.setState({\n              isLoading: false\n            });\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"responseGoogle\", function (response) {\n      var socialData;\n\n      var data = _objectSpread({}, response);\n\n      console.log(data);\n\n      if (data.googleId) {\n        var _data$profileObj = data.profileObj,\n            email = _data$profileObj.email,\n            familyName = _data$profileObj.familyName,\n            givenName = _data$profileObj.givenName,\n            googleId = _data$profileObj.googleId;\n        socialData = {\n          google: googleId,\n          email: email,\n          firstname: givenName,\n          lastname: familyName,\n          username: email.split(\"@\")[0]\n        };\n      }\n\n      if (response.graphDomain == \"facebook\") {\n        var _email = response.email,\n            id = response.id,\n            name = response.name;\n        name = name.split(\" \");\n        socialData = {\n          facebook: id,\n          email: _email,\n          username: _email.split(\"@\")[0]\n        };\n      } // console.log(socialData);\n\n\n      loginUser(_objectSpread({}, socialData)).then(function (res) {\n        //   console.log(res);\n        //    console.log({ res });\n        if (res.status === 200) {\n          if (res.data.status) {\n            _this.props.setUser(res.data.user);\n\n            _this.props.toggleRegBar(); // this.props.closeDrawer();\n\n\n            _this.setState({\n              isLoading: false\n            });\n          } else {\n            var _res$data2 = res.data,\n                error = _res$data2.error,\n                message = _res$data2.message;\n\n            if (message === \"User not found\") {\n              registerUser(_objectSpread({}, socialData)).then(function (res) {\n                //   console.log(res);\n                _this.setState({\n                  isLoading: false\n                }); //  console.log({ res });\n\n\n                if (res.status === 200) {\n                  if (res.data.status) {\n                    _this.props.setUser(res.data.user);\n\n                    _this.props.toggleRegBar();\n                  } else {\n                    var _error = res.data.error;\n\n                    if (_error.endsWith(\"is already taken\")) {\n                      _this.setState({\n                        isAlreadyUser: true\n                      });\n                    } else {\n                      _this.setState({\n                        error: res.data.error\n                      });\n                    }\n                  }\n                } else {\n                  _this.setState({\n                    error: \"something wrong\"\n                  });\n                }\n              })[\"catch\"](function (err) {\n                console.log({\n                  err: err\n                });\n\n                _this.setState({\n                  isLoading: false,\n                  error: \"something wrong\"\n                });\n              });\n            } else {\n              _this.setState({\n                error: error\n              });\n            }\n          }\n        } else {}\n      })[\"catch\"](function (err) {\n        console.log({\n          err: err\n        });\n\n        _this.setState({\n          isLoading: false\n        });\n      });\n    });\n\n    _this.state = {\n      isLoading: false,\n      error: null,\n      isAlreadyUser: false,\n      isSignedIn: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log(this.props);\n      var _this$props = this.props,\n          drawerToDisplay = _this$props.drawerToDisplay,\n          getFieldDecorator = _this$props.form.getFieldDecorator;\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          error = _this$state.error,\n          isAlreadyUser = _this$state.isAlreadyUser,\n          isSignedIn = _this$state.isSignedIn;\n      var finalClass = \"c-login\";\n\n      if (this.props.consult) {\n        finalClass += \" c-userDetails\";\n      }\n\n      return __jsx(\"div\", {\n        className: finalClass\n      }, __jsx(Heading, {\n        parentClass: \"c-login\",\n        className: \"heading\",\n        versions: [\"dark\"]\n      }, isAlreadyUser ? __jsx(\"span\", null, \"Looks like you already\", __jsx(\"br\", null), \"have an account\") : \"welcome back!\"), !isAlreadyUser && __jsx(\"p\", {\n        className: \"c-login__info\"\n      }, \"Please login to your account\"), !isAlreadyUser && __jsx(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"c-ant-from c-login__form\"\n      }, __jsx(Form.Item, null, getFieldDecorator(\"email\", {\n        rules: [{\n          required: true,\n          message: \"Please input your e-mail!\"\n        }, {\n          max: 40,\n          message: \"You can't use more than 40 characters.\"\n        }, {\n          pattern: regex.email,\n          message: \"Please enter a valid E-mail!\"\n        }]\n      })(__jsx(DebounceInput, {\n        style: {\n          padding: \"0px\",\n          fontSize: \"16px\",\n          fontFamily: \"futuraBT-book\",\n          marginBottom: \"20px\"\n        },\n        versions: [\"light\"],\n        parentClass: \"c-login\",\n        label: \"E-mail\",\n        className: \"input\"\n      }))), __jsx(Form.Item, null, getFieldDecorator(\"password\", {\n        rules: [{\n          required: true,\n          message: \"Please input your password!\"\n        }, {\n          max: 20,\n          message: \"You can't use more than 20 characters.\"\n        }]\n      })(__jsx(DebounceInput, {\n        style: {\n          padding: \"0px\",\n          fontSize: \"16px\",\n          fontFamily: \"futuraBT-book\",\n          width: \"80%\"\n        },\n        type: \"password\",\n        parentClass: \"c-login\",\n        versions: [\"light\"],\n        label: \"Password\",\n        className: \"input\"\n      }))), __jsx(\"div\", {\n        className: \"c-login__forget\"\n      }, __jsx(\"span\", {\n        onClick: function onClick() {\n          drawerToDisplay(\"forget\");\n        },\n        className: \"c-login__link\"\n      }, \"forgot Password?\")), __jsx(\"div\", {\n        className: \"c-login__error-block\"\n      }, isLoading && __jsx(Icon, {\n        type: \"loading\",\n        className: \"c-login__spinner c-spinner\",\n        style: {\n          fontSize: 24\n        },\n        spin: true\n      }), error && __jsx(\"p\", {\n        className: \"c-login__error\"\n      }, \"Invalid username or password\")), __jsx(\"div\", null, __jsx(\"p\", {\n        className: \"c-login__inst\"\n      }, \"Don't have an account yet,\", \" \", __jsx(\"span\", {\n        onClick: function onClick() {\n          drawerToDisplay(\"register\");\n        },\n        className: \"c-login__link\",\n        style: {\n          fontFamily: \"futuraBT-medium\",\n          letterSpacing: \"0.5px\"\n        }\n      }, \"REGISTER\"))), __jsx(\"div\", {\n        className: \"row\",\n        style: {\n          justifyContent: \"space-around\",\n          marginTop: \"25px\"\n        }\n      }, __jsx(Button, {\n        theme: \"dark\",\n        disabled: isLoading\n      }, \"Login\"))), __jsx(\"br\", null), __jsx(Row, {\n        justify: \"center\"\n      }, __jsx(\"p\", {\n        className: \"c-login__inst\"\n      }, \"Login with\", __jsx(\"span\", {\n        // onClick={()=> {\n        //     drawerToDisplay(\"register\")\n        // }}\n        style: {\n          marginLeft: \"8px\",\n          marginRight: \"8px\"\n        },\n        className: \"c-login__link\"\n      }, __jsx(GoogleLogin, {\n        clientId: \"523594328071-mcppgl821vmufbh7ts570533mq7bjc4o.apps.googleusercontent.com\",\n        buttonText: \"\",\n        onSuccess: this.responseGoogle,\n        onFailure: this.responseGoogle,\n        cookiePolicy: \"single_host_origin\",\n        isSignedIn: isSignedIn,\n        render: function render(renderProps) {\n          return __jsx(\"button\", {\n            onClick: function onClick() {\n              _this2.setState({\n                isSignedIn: true\n              });\n\n              renderProps.onClick();\n            },\n            className: \"social-button\"\n          }, __jsx(LazyLoadImage, {\n            src: \"/images/google.svg\",\n            style: {\n              width: \"30px\"\n            }\n          }));\n        },\n        theme: \"dark\"\n      })), \"or\", __jsx(FacebookLogin, {\n        appId: \"379779383176561\" //autoLoad={true}\n        ,\n        textButton: \"\",\n        fields: \"name,email,picture\",\n        callback: this.responseGoogle,\n        cssClass: \"social-button\",\n        icon: __jsx(\"span\", {\n          style: {\n            marginLeft: \"9px\",\n            marginRight: \"8px\"\n          },\n          className: \"c-login__link\"\n        }, __jsx(LazyLoadImage, {\n          src: \"/images/facebook.svg\",\n          style: {\n            width: \"30px\"\n          }\n        }))\n      }))), isAlreadyUser && __jsx(\"div\", {\n        className: \"c-login__no-form-wrapper\"\n      }, __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"p\", {\n        className: \"c-login__inst\"\n      }, \"You can login from\", \" \", __jsx(\"span\", {\n        onClick: function onClick() {\n          drawerToDisplay(\"login\");\n        },\n        className: \"c-login__link\"\n      }, \"HERE\"))));\n    }\n  }]);\n\n  return LoginForm;\n}(React.Component);\n\nvar Login = Form.create({\n  name: \"login\"\n})(LoginForm);\nvar mapActionToProps = {\n  setUser: setUser,\n  toggleRegBar: toggleRegBar,\n  drawerToDisplay: drawerToDisplay\n};\nexport default connect(function (state) {\n  return state;\n}, mapActionToProps)(Login);","map":null,"metadata":{},"sourceType":"module"}