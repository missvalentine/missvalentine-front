{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport dynamic from 'next/dynamic';\nimport classNames from \"classnames\";\nconst Button = dynamic(() => import(\"./form-components/Button\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"./form-components/Button\")],\n    modules: [\"./form-components/Button\"]\n  }\n});\nimport { connect } from \"react-redux\";\nimport { addToCart } from \"../redux/actions/cart\";\nimport { directAddToCart, getProductTitle } from \"../services/helpers/product\";\nimport Link from \"next/link\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { showCartBar } from \"../redux/actions/drawers\";\n\nconst ProductCard = ({\n  versions,\n  parentClass,\n  image,\n  title,\n  addToCart,\n  product,\n  showCartBar,\n  mg\n}) => {\n  const componentClass = `c-product-card`;\n  const versionClass = versions.map(el => `${componentClass}--${el}`).join(\" \");\n  const parent = `${parentClass}__${componentClass.replace(\"c-\", \"\")}`;\n  const className = classNames(componentClass, {\n    [versionClass]: versions,\n    [parent]: parentClass\n  });\n\n  const addToCartFn = product => {\n    if (product) {\n      addToCart(directAddToCart(product));\n      showCartBar();\n    }\n  };\n\n  const CardUpper = () => __jsx(\"div\", null, __jsx(\"div\", {\n    className: `${componentClass}__img-wrapper`\n  }, __jsx(LazyLoadImage, {\n    className: `${componentClass}__img img-fluid`,\n    src: image,\n    alt: title\n  })), __jsx(\"div\", {\n    className: `${componentClass}__info`\n  }, __jsx(\"p\", {\n    className: `${componentClass}__title`\n  }, title.split(/(\\d+)/)[0]), mg && __jsx(\"p\", {\n    className: `${componentClass}__sub-title`\n  }, mg, \" mg\")));\n\n  return __jsx(\"div\", {\n    className: className\n  }, product && product._id ? __jsx(Link, {\n    href: `/shop/${getProductTitle(product).replace(/ /g, \"-\")}`\n  }, __jsx(\"a\", {\n    className: `${componentClass}__overlay-link`\n  }, __jsx(CardUpper, null))) : __jsx(CardUpper, null), __jsx(\"div\", {\n    className: `${componentClass}__btn-wrapper`\n  }, versions && !versions.some(x => x == 'bundle') && __jsx(Button, {\n    onClick: () => addToCartFn(product),\n    parentClass: componentClass,\n    theme: \"dark\"\n  }, \"Add to Cart\")));\n};\n\nProductCard.defaultProps = {\n  versions: []\n};\nexport default connect(null, {\n  addToCart,\n  showCartBar\n})(ProductCard);","map":null,"metadata":{},"sourceType":"module"}