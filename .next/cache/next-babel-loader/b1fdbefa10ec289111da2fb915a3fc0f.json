{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport dynamic from 'next/dynamic';\nimport { Drawer as AntDrawer, Icon } from \"antd\";\nvar Heading = dynamic(function () {\n  return import(\"./Heading\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"./Heading\")];\n    },\n    modules: [\"./Heading\"]\n  }\n});\nimport classNames from \"classnames\";\n\nvar Drawer = /*#__PURE__*/function (_React$Component) {\n  _inherits(Drawer, _React$Component);\n\n  var _super = _createSuper(Drawer);\n\n  function Drawer(_ref) {\n    var _this;\n\n    var props = _ref.props;\n\n    _classCallCheck(this, Drawer);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      width: 550\n    };\n    return _this;\n  }\n\n  _createClass(Drawer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        width: window.innerWidth > 550 ? 550 : \"100%\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var width = this.state.width;\n      var _this$props = this.props,\n          onClose = _this$props.onClose,\n          visible = _this$props.visible,\n          title = _this$props.title,\n          children = _this$props.children,\n          versions = _this$props.versions,\n          parentClass = _this$props.parentClass;\n      var componentClass = \"c-drawer\";\n      var versionClass = versions.map(function (el) {\n        return \"\".concat(componentClass, \"--\").concat(el);\n      }).join(\" \");\n      var parent = \"\".concat(parentClass, \"__\").concat(componentClass.replace(\"c-\", \"\"));\n      var className = classNames(componentClass, (_classNames = {}, _defineProperty(_classNames, versionClass, versions), _defineProperty(_classNames, parent, parentClass), _classNames));\n      return __jsx(AntDrawer, {\n        className: className,\n        placement: this.props.placement,\n        closable: false,\n        onClose: onClose,\n        visible: visible,\n        width: width,\n        title: __jsx(DrawerTitle, {\n          onClose: onClose,\n          title: title\n        })\n      }, children);\n    }\n  }]);\n\n  return Drawer;\n}(React.Component);\n\nvar DrawerTitle = function DrawerTitle(_ref2) {\n  var onClose = _ref2.onClose,\n      title = _ref2.title;\n  return __jsx(\"div\", {\n    className: \"c-drawer-title c-drawer__title\"\n  }, __jsx(\"div\", {\n    className: \"c-drawer-title__go-back-wrapper\"\n  }), __jsx(\"div\", {\n    className: \"c-drawer-title__header\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(Icon, {\n    className: \"c-drawer-title__back\",\n    type: \"close-circle\",\n    theme: \"filled\",\n    onClick: onClose\n  }), __jsx(\"div\", {\n    className: \"col\"\n  }, __jsx(Heading, {\n    parentClass: \"c-cart-title\",\n    className: \"c-cart-title__heading\",\n    versions: [\"default\", \"dark\", \"upper\"]\n  }, title)))));\n};\n\nDrawer.defaultProps = {\n  versions: [],\n  placement: \"right\"\n};\nexport default Drawer;","map":null,"metadata":{},"sourceType":"module"}