{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport dynamic from 'next/dynamic';\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport moment from \"moment\";\nimport { getOrders } from \"../../services/api\";\nimport { makeCancelable } from \"../../services/makeCancelable\";\nimport ChatMsgList from \"./ChatMsgList\";\nvar chatMsgList = new ChatMsgList();\n\nvar ChatOrderList = /*#__PURE__*/function (_Component) {\n  _inherits(ChatOrderList, _Component);\n\n  var _super = _createSuper(ChatOrderList);\n\n  function ChatOrderList() {\n    var _this;\n\n    _classCallCheck(this, ChatOrderList);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"getOrderList\", function () {\n      _this.cancelableOrders = makeCancelable(getOrders(_this.props.user.userMetaId), function (res) {\n        var resJson = res.data;\n\n        if (resJson.status) {\n          var orderList = resJson.orders.sort(function (a, b) {\n            return new Date(b.createdOn) - new Date(a.createdOn);\n          });\n\n          if (!orderList || orderList && orderList.length < 1) {\n            _this.props.triggerNextStep({\n              trigger: \"repeat\"\n            });\n          }\n\n          _this.setState({\n            orderList: orderList,\n            isLoading: false\n          });\n        }\n      }, function (err) {\n        console.log({\n          err: err\n        });\n      });\n    });\n\n    _this.state = {\n      orderList: [],\n      isLoading: true,\n      selected: null\n    };\n    return _this;\n  }\n\n  _createClass(ChatOrderList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getOrderList();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.cancelableOrders) this.cancelableOrders();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          orderList = _this$state.orderList,\n          isLoading = _this$state.isLoading,\n          selected = _this$state.selected;\n      return __jsx(\"div\", null, isLoading && __jsx(\"div\", null, \"...\"), isLoading && (!orderList || orderList && orderList.length < 1) && __jsx(\"div\", null, chatMsgList.noOrdersMsg()), !isLoading && orderList && orderList.length > 0 && orderList.map(function (el, index) {\n        var product = el.products && el.products[0].title;\n        return __jsx(\"p\", {\n          className: classNames(\"chat-custom-option\", {\n            selected: selected === el._id\n          }),\n          onClick: function onClick() {\n            if (!selected) {\n              _this2.setState({\n                orderList: orderList.filter(function (elx) {\n                  return elx._id === el._id;\n                }),\n                selected: el._id\n              }, function () {\n                _this2.props.triggerNextStep({\n                  value: el\n                });\n              });\n            }\n          },\n          key: index\n        }, el.createdOn ? moment(el.createdOn).format(\"MMM DD, YYYY\") + \" (\".concat(product, \")\") : product);\n      }));\n    }\n  }]);\n\n  return ChatOrderList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(ChatOrderList);","map":null,"metadata":{},"sourceType":"module"}