{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport dynamic from 'next/dynamic';\nimport { Form, Spin, Icon } from \"antd\";\n;\nvar Heading = dynamic(function () {\n  return import(\"../Heading\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../Heading\")];\n    },\n    modules: [\"../Heading\"]\n  }\n});\n;\nvar Input = dynamic(function () {\n  return import(\"../form-components/Input\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../form-components/Input\")];\n    },\n    modules: [\"../form-components/Input\"]\n  }\n});\nimport { connect } from \"react-redux\";\n;\nvar Button = dynamic(function () {\n  return import(\"../form-components/Button\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../form-components/Button\")];\n    },\n    modules: [\"../form-components/Button\"]\n  }\n});\nimport { forgotPassword } from \"../../services/api\";\nimport { drawerToDisplay, toggleRegBar } from \"../../redux/actions/drawers\";\nimport { setUser } from \"../../redux/actions/user\";\nimport regex from \"../../services/helpers/regex\";\nimport { sendEmailMsg } from \"../../constants/constantMessage\";\nimport reactComponentDebounce from \"react-component-debounce\";\nvar DebounceInput = reactComponentDebounce({\n  valuePropName: \"value\",\n  triggerMs: 1000\n})(Input);\n\nvar ForgetForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(ForgetForm, _React$Component);\n\n  var _super = _createSuper(ForgetForm);\n\n  function ForgetForm() {\n    var _this;\n\n    _classCallCheck(this, ForgetForm);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log(\"Received values of form: \", values);\n          var email = values.email,\n              password = values.password;\n\n          _this.setState({\n            isLoading: true,\n            error: null\n          });\n\n          forgotPassword({\n            email: email,\n            firststep: 1\n          }).then(function (res) {\n            _this.setState({\n              isLoading: false\n            });\n\n            if (res.status === 200) {\n              if (res.data.status || res.data.success) {\n                _this.setState({\n                  mailSent: true\n                });\n              } else {\n                _this.setState({\n                  error: res.data.message || \"User not found\"\n                });\n              }\n            } else {\n              _this.setState({\n                error: \"User not found\"\n              });\n            }\n          })[\"catch\"](function (err) {\n            console.log({\n              err: err\n            });\n\n            _this.setState({\n              isLoading: false,\n              error: \"User not found\"\n            });\n          });\n        }\n      });\n    });\n\n    _this.state = {\n      isLoading: false,\n      error: null,\n      isAlreadyUser: false,\n      mailSent: false\n    };\n    return _this;\n  }\n\n  _createClass(ForgetForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          drawerToDisplay = _this$props.drawerToDisplay,\n          getFieldDecorator = _this$props.form.getFieldDecorator;\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          error = _this$state.error,\n          isAlreadyUser = _this$state.isAlreadyUser,\n          mailSent = _this$state.mailSent;\n      return __jsx(\"div\", {\n        className: \"c-registration\"\n      }, __jsx(Heading, {\n        parentClass: \"c-registration\"\n      }, mailSent ? __jsx(React.Fragment, null, \" \", sendEmailMsg, \"  \", __jsx(\"div\", null, __jsx(\"p\", {\n        style: {\n          fontSize: \"16px\",\n          fontFamily: \"futuraBT-light\",\n          marginTop: \"20px\"\n        },\n        className: \"c-registration__inst\"\n      }, \"Back to\", __jsx(\"span\", {\n        style: {\n          marginLeft: \"5px\"\n        },\n        onClick: function onClick() {\n          drawerToDisplay(\"login\");\n        },\n        className: \"c-registration__link\"\n      }, \"LOGIN\"))), \" \") : \"Forgot Your Password?\"), !mailSent && __jsx(Heading, {\n        className: \"c-registration__sub-heading\",\n        subHeading: true,\n        versions: [\"dark\"],\n        parentClass: \"c-registration\"\n      }, \"Enter your email to reset your password\"), !mailSent && __jsx(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"c-ant-from c-registration__form\"\n      }, __jsx(Form.Item, null, getFieldDecorator(\"email\", {\n        rules: [{\n          max: 40,\n          message: \"You can't use more than 40 characters.\"\n        }, {\n          required: true,\n          message: \"Please input your e-mail!\"\n        }, {\n          pattern: regex.email,\n          message: \"Please enter a valid E-mail.\"\n        }]\n      })(__jsx(DebounceInput, {\n        style: {\n          padding: \"0px\",\n          fontSize: \"16px\",\n          fontFamily: \"futuraBT-book\",\n          marginBottom: \"15px\"\n        },\n        versions: [\"dark\"],\n        parentClass: \"c-registration\",\n        label: \"E-mail\"\n      }))), __jsx(\"div\", null, __jsx(\"p\", {\n        style: {\n          fontSize: \"16px\",\n          fontFamily: \"futuraBT-light\"\n        },\n        className: \"c-registration__inst\"\n      }, \"Back to\", __jsx(\"span\", {\n        style: {\n          marginLeft: \"5px\"\n        },\n        onClick: function onClick() {\n          drawerToDisplay(\"login\");\n        },\n        className: \"c-registration__link\"\n      }, \"LOGIN\"))), __jsx(\"div\", {\n        className: \"c-registration__error-block\"\n      }, isLoading && __jsx(Icon, {\n        type: \"loading\",\n        className: \"c-registration__spinner c-spinner\",\n        style: {\n          fontSize: 24\n        },\n        spin: true\n      }), error && __jsx(\"p\", {\n        className: \"c-registration__error\"\n      }, error)), __jsx(\"div\", {\n        className: \"row\",\n        style: {\n          justifyContent: \"space-around\"\n        }\n      }, __jsx(Button, {\n        theme: \"dark\",\n        disabled: isLoading\n      }, \"Reset Password\"))));\n    }\n  }]);\n\n  return ForgetForm;\n}(React.Component);\n\nvar ForgetPassword = Form.create({\n  name: \"registration\"\n})(ForgetForm);\nvar mapActionToProps = {\n  drawerToDisplay: drawerToDisplay,\n  setUser: setUser,\n  toggleRegBar: toggleRegBar\n};\nexport default connect(function (state) {\n  return state;\n}, mapActionToProps)(ForgetPassword);","map":null,"metadata":{},"sourceType":"module"}