{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/components/chatBot/ChatProductList.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { getProductsByCategory } from \"../../services/extra/productHelpers\";\nimport { getVisibleProducts } from \"../../services/helpers/product\";\nimport { getAllProducts } from '../../services/api';\n\nvar ChatProductList = /*#__PURE__*/function (_Component) {\n  _inherits(ChatProductList, _Component);\n\n  var _super = _createSuper(ChatProductList);\n\n  function ChatProductList(props) {\n    var _this;\n\n    _classCallCheck(this, ChatProductList);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerNext\", function (e) {\n      _this.setState({\n        trigger: true\n      }, function () {\n        _this.props.triggerNextStep(e);\n      });\n    });\n\n    _this.state = {\n      products: getProductsByCategory(props.products, props.steps.categoryList.value),\n      isLoading: true,\n      selected: null\n    };\n    return _this;\n  }\n\n  _createClass(ChatProductList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getAllProducts().then(function (res) {\n        var products = getProductsByCategory(res.data.products || [], _this2.props.steps.categoryList.value);\n\n        _this2.setState({\n          products: getVisibleProducts(products),\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          selected = _this$state.selected,\n          isLoading = _this$state.isLoading,\n          products = _this$state.products;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, isLoading && \"...\", !isLoading && products.map(function (el, index) {\n        var productTitle = el.title ? el.title : el.productid && el.productid.producttitle;\n        return __jsx(\"p\", {\n          onClick: function onClick() {\n            if (!selected) {\n              _this3.setState({\n                selected: productTitle,\n                products: [el]\n              }, function () {\n                _this3.triggerNext({\n                  value: _objectSpread(_objectSpread({}, el), {}, {\n                    productTitle: productTitle\n                  })\n                });\n              });\n            }\n          },\n          className: classNames(\"chat-custom-option w-100\", {\n            selected: selected === productTitle\n          }),\n          key: index,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }\n        }, productTitle);\n      }));\n    }\n  }]);\n\n  return ChatProductList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    products: state.products.products\n  };\n};\n\nexport default connect(mapStateToProps)(ChatProductList);","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/components/chatBot/ChatProductList.js"],"names":["React","Component","classNames","connect","getProductsByCategory","getVisibleProducts","getAllProducts","ChatProductList","props","e","setState","trigger","triggerNextStep","state","products","steps","categoryList","value","isLoading","selected","then","res","data","map","el","index","productTitle","title","productid","producttitle","triggerNext","mapStateToProps"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,qCAAtC;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,SAAQC,cAAR,QAA6B,oBAA7B;;IAEMC,e;;;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,kEAqBL,UAAAC,CAAC,EAAI;AACjB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd,EAAiC,YAAM;AACrC,cAAKH,KAAL,CAAWI,eAAX,CAA2BH,CAA3B;AACD,OAFD;AAGD,KAzBkB;;AAEjB,UAAKI,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEV,qBAAqB,CAC7BI,KAAK,CAACM,QADuB,EAE7BN,KAAK,CAACO,KAAN,CAAYC,YAAZ,CAAyBC,KAFI,CADpB;AAKXC,MAAAA,SAAS,EAAE,IALA;AAMXC,MAAAA,QAAQ,EAAE;AANC,KAAb;AAFiB;AAUlB;;;;WAED,6BAAoB;AAAA;;AAClBb,MAAAA,cAAc,GAAGc,IAAjB,CAAsB,UAAAC,GAAG,EAAI;AAC3B,YAAMP,QAAQ,GAAGV,qBAAqB,CAAEiB,GAAG,CAACC,IAAJ,CAASR,QAAT,IAAqB,EAAvB,EAA4B,MAAI,CAACN,KAAL,CAAWO,KAAX,CAAiBC,YAAjB,CAA8BC,KAA1D,CAAtC;;AACA,QAAA,MAAI,CAACP,QAAL,CAAc;AACZI,UAAAA,QAAQ,EAAET,kBAAkB,CAACS,QAAD,CADhB;AAEZI,UAAAA,SAAS,EAAE;AAFC,SAAd;AAID,OAND;AAOD;;;WAMD,kBAAS;AAAA;;AAAA,wBACmC,KAAKL,KADxC;AAAA,UACCM,QADD,eACCA,QADD;AAAA,UACWD,SADX,eACWA,SADX;AAAA,UACsBJ,QADtB,eACsBA,QADtB;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGI,SAAS,IAAI,KADhB,EAEG,CAACA,SAAD,IACCJ,QAAQ,CAACS,GAAT,CAAa,UAACC,EAAD,EAAKC,KAAL,EAAe;AAC1B,YAAMC,YAAY,GAAGF,EAAE,CAACG,KAAH,GACjBH,EAAE,CAACG,KADc,GAEjBH,EAAE,CAACI,SAAH,IAAgBJ,EAAE,CAACI,SAAH,CAAaC,YAFjC;AAGA,eACE;AACE,UAAA,OAAO,EAAE,mBAAM;AACb,gBAAI,CAACV,QAAL,EAAe;AACb,cAAA,MAAI,CAACT,QAAL,CACE;AACES,gBAAAA,QAAQ,EAAEO,YADZ;AAEEZ,gBAAAA,QAAQ,EAAE,CAACU,EAAD;AAFZ,eADF,EAKE,YAAM;AACJ,gBAAA,MAAI,CAACM,WAAL,CAAiB;AACfb,kBAAAA,KAAK,kCACAO,EADA;AAEHE,oBAAAA,YAAY,EAAZA;AAFG;AADU,iBAAjB;AAMD,eAZH;AAcD;AACF,WAlBH;AAmBE,UAAA,SAAS,EAAExB,UAAU,CAAC,0BAAD,EAA6B;AAChDiB,YAAAA,QAAQ,EAAEA,QAAQ,KAAKO;AADyB,WAA7B,CAnBvB;AAsBE,UAAA,GAAG,EAAED,KAtBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAwBGC,YAxBH,CADF;AA4BD,OAhCD,CAHJ,CADF;AAuCD;;;;EApE2BzB,S;;AAuE9B,IAAM8B,eAAe,GAAG,SAAlBA,eAAkB,CAAAlB,KAAK;AAAA,SAAK;AAChCC,IAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,CAAeA;AADO,GAAL;AAAA,CAA7B;;AAIA,eAAeX,OAAO,CAAC4B,eAAD,CAAP,CAAyBxB,eAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { getProductsByCategory } from \"../../services/extra/productHelpers\";\nimport { getVisibleProducts } from \"../../services/helpers/product\";\nimport {getAllProducts} from '../../services/api'\n\nclass ChatProductList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: getProductsByCategory(\n        props.products,\n        props.steps.categoryList.value\n      ),\n      isLoading: true,\n      selected: null\n    };\n  }\n\n  componentDidMount() {\n    getAllProducts().then(res => {\n      const products = getProductsByCategory((res.data.products || []), this.props.steps.categoryList.value)\n      this.setState({\n        products: getVisibleProducts(products),\n        isLoading: false\n      })\n    })\n  }\n  triggerNext = e => {\n    this.setState({ trigger: true }, () => {\n      this.props.triggerNextStep(e);\n    });\n  };\n  render() {\n    const { selected, isLoading, products } = this.state;\n    return (\n      <div>\n        {isLoading && \"...\"}\n        {!isLoading &&\n          products.map((el, index) => {\n            const productTitle = el.title\n              ? el.title\n              : el.productid && el.productid.producttitle;\n            return (\n              <p\n                onClick={() => {\n                  if (!selected) {\n                    this.setState(\n                      {\n                        selected: productTitle,\n                        products: [el]\n                      },\n                      () => {\n                        this.triggerNext({\n                          value: {\n                            ...el,\n                            productTitle\n                          }\n                        });\n                      }\n                    );\n                  }\n                }}\n                className={classNames(\"chat-custom-option w-100\", {\n                  selected: selected === productTitle\n                })}\n                key={index}\n              >\n                {productTitle}\n              </p>\n            );\n          })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  products: state.products.products\n});\n\nexport default connect(mapStateToProps)(ChatProductList);\n"]},"metadata":{},"sourceType":"module"}