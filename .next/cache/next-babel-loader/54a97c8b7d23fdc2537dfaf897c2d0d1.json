{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport dynamic from \"next/dynamic\";\nconst Layout = dynamic(() => import(\"../../components/Layouts/Layout\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../../components/Layouts/Layout\")],\n    modules: [\"../../components/Layouts/Layout\"]\n  }\n});\nconst ProductInfo = dynamic(() => import(\"../../components/ProductInfo\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../../components/ProductInfo\")],\n    modules: [\"../../components/ProductInfo\"]\n  }\n});\nconst HImgSection = dynamic(() => import(\"../../components/HImgSection\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../../components/HImgSection\")],\n    modules: [\"../../components/HImgSection\"]\n  }\n});\nimport { useEffect, useState } from \"react\";\nimport { getProductImage, getProductAttributes, getVisibleProducts, getProductDescription } from \"../../services/helpers/product\";\nconst Heading = dynamic(() => import(\"../../components/Heading\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../../components/Heading\")],\n    modules: [\"../../components/Heading\"]\n  }\n});\nconst TitleList = dynamic(() => import(\"../../components/TItleList\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../../components/TItleList\")],\n    modules: [\"../../components/TItleList\"]\n  }\n});\nconst ProductDetailsTab = dynamic(() => import(\"../../components/ProductDetailsTab\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../../components/ProductDetailsTab\")],\n    modules: [\"../../components/ProductDetailsTab\"]\n  }\n});\nconst ProductSlider = dynamic(() => import(\"../../components/ProductSlider\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../../components/ProductSlider\")],\n    modules: [\"../../components/ProductSlider\"]\n  }\n});\nimport { useRouter } from \"next/router\";\nimport { connect } from \"react-redux\";\nimport fetch from \"isomorphic-unfetch\";\nimport projectSettings from \"../../constants/projectSettings\";\nimport apiList from \"../../services/apis/apiList\";\nimport Error from \"next/error\";\nconst product = {\n  title: \"CBD Isolate 500 mg\"\n};\n\nconst Product = (_ref) => {\n  let {\n    product,\n    allProducts\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"product\", \"allProducts\"]);\n\n  const {\n    0: isScrolled,\n    1: setIsScrolled\n  } = useState(false);\n  useEffect(() => {\n    setIsScrolled(true);\n    document.body.scrollTop = document.documentElement.scrollTop = 0;\n  }, isScrolled);\n  const router = useRouter();\n  const {\n    pid\n  } = router.query;\n  const state = {\n    productDetails: null,\n    productList: [{\n      title: \"title\",\n      subTitle: \"sub title\",\n      image: \"/images/oil.png\"\n    }, {\n      title: \"lorem\",\n      subTitle: \"sub title\",\n      image: \"/images/capsule-img.png\"\n    }, {\n      title: \"ipsum\",\n      subTitle: \"sub title\",\n      image: \"/images/cbd-oil.png\"\n    }]\n  };\n  const {\n    productList\n  } = state;\n  const productAttr = getProductAttributes(product, allProducts);\n  const image = getProductImage(product, \"sectionB\"); //|| \"/images/cbd-oil.png\"\n\n  const productImage = getProductImage(product) ? projectSettings.serverUrl + getProductImage(product) : \"/images/cbd-oil.png\";\n\n  if (props.err) {\n    return __jsx(Error, props.err);\n  }\n\n  return __jsx(Layout, {\n    headerTheme: \"black\",\n    fixed: true\n  }, __jsx(ProductInfo, {\n    product: product,\n    reviews: props.reviews,\n    productAttr: productAttr.filter((el, i) => product.combo ? i < 2 : i < 1),\n    image: productImage\n  }), __jsx(HImgSection, {\n    parentClass: \"c-product-single\",\n    version: [\"full\"],\n    image: projectSettings.filePath + image\n  }, __jsx(\"div\", null, __jsx(Heading, {\n    style: {\n      fontSize: \"30px\",\n      fontFamily: \"futuraBT-book\"\n    }\n  }, getProductDescription(product))), __jsx(\"div\", {\n    className: \"c-product-single__list\"\n  }, productAttr.map((el, i) => {\n    if (product.combo ? i < 2 : i < 1) return null;\n    return __jsx(TitleList, {\n      parentClass: \"c-product-single\",\n      key: i,\n      title: el.title,\n      versions: [\"responsive\"]\n    }, el.description);\n  }))), __jsx(\"div\", {\n    className: \"c-product-single__details-wrapper\"\n  }, __jsx(ProductDetailsTab, {\n    product: product,\n    reviews: props.reviews,\n    allProducts: allProducts,\n    parentClass: \"c-product-single\"\n  })), __jsx(\"div\", {\n    className: \"c-product-single__related-section\"\n  }, __jsx(\"div\", {\n    className: \"row justify-content-center\",\n    style: {\n      maxWidth: '100%'\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6\"\n  }, __jsx(Heading, {\n    style: {\n      textAlign: \"center\"\n    },\n    versions: [\"default\", \"upper\", \"weight-500\"]\n  }, \"Accompany with\")), __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(ProductSlider, {\n    parentClass: \"c-product-single\",\n    products: allProducts\n  })))));\n};\n\nProduct.getInitialProps = async ({\n  query,\n  res: resMain\n}) => {\n  // const {\n  //     baseUrl\n  // } = projectSettings\n  let product = null;\n  const res = await fetch(apiList.getProductByName + query.pid); // const res           = await fetch(apiList.getProductById+query.pid)\n\n  const productObj = await res.json();\n\n  if (!productObj.product_details) {\n    const res = await fetch(apiList.getProductById + query.pid);\n    const productObj = await res.json();\n    product = getVisibleProducts([productObj.product_details]);\n  } else {\n    product = getVisibleProducts([productObj.product_details]);\n  }\n\n  const reviewRes = await fetch(apiList.getReviews + productObj.product_details._id);\n  const reviews = await reviewRes.json();\n  const allRes = await fetch(apiList.getAllProducts);\n  const allProductObj = await allRes.json();\n  const allProducts = getVisibleProducts(allProductObj.products).filter(el => el._id !== query.pid);\n\n  if (product.length && product[0] && productObj.status) {\n    return {\n      res,\n      product: product.length && product[0],\n      productObj,\n      allProducts,\n      allProductObj,\n      reviews: reviews.reviews\n    };\n  }\n\n  resMain.statusCode = 404;\n  return {\n    err: {\n      statusCode: 404\n    }\n  };\n};\n\nexport default connect(state => ({\n  cart: state.cart,\n  user: state.user\n}))(Product);","map":null,"metadata":{},"sourceType":"module"}