{"ast":null,"code":"var _jsxFileName = \"/Users/akshataggarwal/Documents/Coding Files/webd projects/missnew front/components/chatBot/ChatBot.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport dynamic from \"next/dynamic\";\nimport ChatBot from \"react-simple-chatbot\";\nimport Router from \"next/router\";\nimport { ThemeProvider } from \"styled-components\";\nimport { connect } from \"react-redux\";\nconst ChatProductList = dynamic(() => import(\"./ChatProductList\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"./ChatProductList\")],\n    modules: [\"./ChatProductList\"]\n  }\n});\nconst ChatCategoryList = dynamic(() => import(\"./ChatCategoryList\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"./ChatCategoryList\")],\n    modules: [\"./ChatCategoryList\"]\n  }\n});\nconst ChatProductCard = dynamic(() => import(\"./ChatProductCard\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"./ChatProductCard\")],\n    modules: [\"./ChatProductCard\"]\n  }\n});\nconst ChatUserOneRet = dynamic(() => import(\"./ChatUserOneRet\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"./ChatUserOneRet\")],\n    modules: [\"./ChatUserOneRet\"]\n  }\n});\nimport ChatMsgList from \"./ChatMsgList\";\nconst ChatOrderList = dynamic(() => import(\"./ChatOrderList\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"./ChatOrderList\")],\n    modules: [\"./ChatOrderList\"]\n  }\n});\nconst LearnResponse = dynamic(() => import(\"./LearnResponse\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"./LearnResponse\")],\n    modules: [\"./LearnResponse\"]\n  }\n});\nimport { isEmpty, isEmail } from \"validator\";\nimport { chatTheme, imageUrl } from \"../../constants/projectSettings\";\nconst chatMsgList = new ChatMsgList();\nconst {\n  getInitialMsg,\n  getInitialMsg2,\n  shopNowMsg,\n  redirectForTracking,\n  emptyTrackingIdErr,\n  getProductChooseMsg,\n  getMsgAfterCategory,\n  contactFirst,\n  contactSecond,\n  contactThird,\n  contactFourth,\n  repeatMsg,\n  afterProduct,\n  contactErrMsgOne,\n  contactErrMsgTwo,\n  checkoutRedirectMsg,\n  checkoutNoItemMsg,\n  getProductListMsg,\n  pickProductMsg,\n  afterProductFinish,\n  checkoutFinish,\n  learnMoreUserPre,\n  learnMoreQuit,\n  learnMoreNext\n} = chatMsgList;\n\nclass ChatBotElement extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"toggleFloating\", () => {\n      this.setState(prevState => ({\n        opened: !prevState.opened\n      }));\n    });\n\n    _defineProperty(this, \"clearChat\", () => {\n      this.setState({\n        clear: true\n      }, () => {\n        this.setState({\n          clear: false\n        });\n      });\n    });\n\n    _defineProperty(this, \"ifLogin\", (login, notLogin = null) => {\n      if (this.props) if (this.props.user) {\n        if (this.props.user._id && this.props.user.username) return login;\n      }\n      return notLogin;\n    });\n\n    this.state = {\n      userName: props.user.email,\n      opened: false,\n      clear: false\n    };\n  }\n\n  componentDidMount() {\n    this.ifLogin();\n  }\n\n  render() {\n    chatTheme;\n\n    const theme = _objectSpread({}, chatTheme);\n\n    const {\n      isOpen,\n      items\n    } = this.props;\n    const {\n      opened,\n      clear\n    } = this.state;\n    const chat = [this.ifLogin({\n      id: \"initialOne\",\n      message: () => {\n        const userName = this.props.user && this.props.user.username.split(\" \")[0];\n        return getInitialMsg(userName);\n      },\n      trigger: \"initialTwo\"\n    }), {\n      id: \"initialTwo\",\n      message: getInitialMsg2(),\n      trigger: \"firstOptionsFresh\"\n    }, {\n      id: \"firstOptionsFresh\",\n      options: [{\n        value: \"initialOne\",\n        label: \"Shop Now\",\n        trigger: \"shopSelected\"\n      }, {\n        value: \"checkout\",\n        label: \"Checkout\",\n        trigger: \"checkout\"\n      }, {\n        value: \"contact\",\n        label: \"Contact us\",\n        trigger: \"contact\"\n      }, {\n        value: \"learnMore\",\n        label: \"Learn more\",\n        trigger: \"learnMoreUserPre\"\n      }]\n    }, {\n      id: \"firstOptions\",\n      options: [{\n        value: \"initialOne\",\n        label: \"Shop Now\",\n        trigger: \"shopSelected\"\n      }, {\n        value: \"checkout\",\n        label: \"Checkout\",\n        trigger: \"checkout\"\n      }, {\n        value: \"contact\",\n        label: \"Contact us\",\n        trigger: \"contact\"\n      }, {\n        value: \"learnMore\",\n        label: \"Learn more\",\n        trigger: \"learnMoreUserPre\"\n      }]\n    }, {\n      id: \"learnMoreUserPre\",\n      message: learnMoreUserPre(),\n      trigger: \"learnMoreUser\"\n    }, {\n      id: \"learnMoreUser\",\n      user: true,\n      trigger: \"learnMoreResponce\"\n    }, {\n      id: \"learnMoreResponce\",\n      component: __jsx(LearnResponse, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 20\n        }\n      }),\n      waitAction: true,\n      asMessage: true\n    }, {\n      id: \"learnMoreQuit\",\n      message: learnMoreQuit(),\n      trigger: \"learnMoreQuitAfter\"\n    }, {\n      id: \"learnMoreQuitAfter\",\n      user: true,\n      trigger: ({\n        value\n      }) => {\n        if (value.toLowerCase().trim() === \"yes\") return \"firstOptions\";\n        return \"learnMoreNext\";\n      } // trigger: \"learnMoreResponce\"\n\n    }, {\n      id: \"learnMoreNext\",\n      message: learnMoreNext(),\n      trigger: \"learnMoreUser\"\n    }, {\n      id: \"shopSelected\",\n      message: shopNowMsg(),\n      trigger: \"userOne\"\n    }, {\n      id: \"userOne\",\n      user: true,\n      // waitAction: true,\n      trigger: \"5\"\n    }, {\n      id: 5,\n      component: __jsx(ChatUserOneRet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 20\n        }\n      }),\n      waitAction: true,\n      asMessage: true\n    }, // {\n    //   id: \"trackNow\",\n    //   message: msgTrackNow(),\n    //   trigger: \"getTrackingId\"\n    // },\n    {\n      id: \"trackNowLogin\",\n      // message: msgTrackNow(),\n      component: __jsx(ChatOrderList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 20\n        }\n      }),\n      trigger: \"trackNowLoginNext\",\n      waitAction: true\n    }, {\n      id: \"trackNowLoginNext\",\n      message: pp => {\n        setTimeout(() => {\n          window.open(\"https://www.google.com\");\n        }, 2000);\n        return redirectForTracking();\n      },\n      trigger: \"repeat\"\n    }, {\n      id: \"trackNow\",\n      user: true,\n      validator: value => {\n        if (isEmpty(value)) {\n          return emptyTrackingIdErr();\n        }\n\n        return true;\n      },\n      trigger: props => {\n        return \"repeat\";\n      }\n    }, {\n      id: \"categoryList\",\n      component: __jsx(ChatCategoryList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 20\n        }\n      }),\n      waitAction: true,\n      // asMessage: true,\n      trigger: \"postCategory\"\n    }, {\n      id: \"postCategory\",\n      message: ({\n        previousValue\n      }) => {\n        return getMsgAfterCategory(previousValue);\n      },\n      trigger: \"preProduct\"\n    }, {\n      id: \"preProduct\",\n      message: getProductListMsg(),\n      trigger: \"preProduct2\"\n    }, {\n      id: \"preProduct2\",\n      message: pickProductMsg(),\n      trigger: \"products\"\n    }, {\n      id: \"products\",\n      component: __jsx(ChatProductList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 20\n        }\n      }),\n      waitAction: true,\n      trigger: \"productSelected1\" // end: true\n\n    }, {\n      id: \"productSelected1\",\n      message: \"Awesome! 😍\",\n      trigger: props => {\n        return \"productSelected2\";\n      }\n    }, {\n      id: \"productSelected2\",\n      message: ({\n        steps\n      }) => {\n        return getProductChooseMsg(steps.products.value.productTitle); // return `${steps.products.value.productTitle} is my favourite`\n      },\n      // end: true\n      trigger: \"afterProduct\"\n    }, {\n      id: \"afterProduct\",\n      message: afterProduct(),\n      trigger: \"singleProduct\"\n    }, {\n      id: \"singleProduct\",\n      component: __jsx(ChatProductCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 20\n        }\n      }),\n      trigger: \"productNext\"\n    }, {\n      id: \"productNext\",\n      message: afterProductFinish(),\n      trigger: \"firstOptions\"\n    }, {\n      id: \"checkout\",\n      message: () => {\n        if (items && items.length > 0) {\n          return checkoutRedirectMsg();\n        }\n\n        return checkoutNoItemMsg();\n      },\n      trigger: () => {\n        if (items && items.length > 0) {\n          return \"checkout1\";\n        }\n\n        return \"repeat\";\n      }\n    }, {\n      id: \"checkout1\",\n      message: checkoutFinish(),\n      trigger: \"checkout2\"\n    }, {\n      id: \"checkout2\",\n      message: () => {\n        // const { history, countryCode } = this.props;\n        setTimeout(() => {\n          Router.push(`/checkout`);\n          this.toggleFloating();\n          this.clearChat();\n        }, 400);\n        return \"\";\n      },\n      end: true\n    }, {\n      id: \"contact\",\n      message: contactFirst(),\n      trigger: \"contactUserFirst\"\n    }, {\n      id: \"contactUserFirst\",\n      user: true,\n      // waitAction: true,\n      trigger: ({\n        value\n      }) => {\n        if (isEmail(value)) return \"contactTwo\";else {\n          return \"contactUserErr\";\n        }\n      }\n    }, {\n      id: \"contactUserErr\",\n      message: contactErrMsgOne(),\n      trigger: \"contactUserErr2\"\n    }, {\n      id: \"contactUserErr2\",\n      message: contactErrMsgTwo(),\n      trigger: \"contactUserFirst\"\n    }, {\n      id: \"contactTwo\",\n      message: contactSecond(),\n      trigger: \"contactUserSecond\"\n    }, {\n      id: \"contactUserSecond\",\n      user: true,\n      // waitAction: true,\n      trigger: \"contactThree\"\n    }, {\n      id: \"contactThree\",\n      message: contactThird(),\n      trigger: \"contactFourth\"\n    }, {\n      id: \"contactFourth\",\n      message: contactFourth(),\n      trigger: \"repeat\"\n    }, {\n      id: \"repeat\",\n      message: repeatMsg(),\n      trigger: \"firstOptions\"\n    }].filter(el => el);\n    if (clear) return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 23\n      }\n    });\n    return __jsx(\"div\", {\n      className: \"react-chat-bot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"chat-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }\n    }, __jsx(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }\n    }, __jsx(ChatBot, {\n      opened: opened,\n      toggleFloating: this.toggleFloating,\n      floatingStyle: {\n        bottom: \"42px\"\n      },\n      enableMobileAutoFocus: true,\n      floating: true,\n      botAvatar: `${imageUrl}/Logo-chat.png`,\n      bubbleStyle: {\n        marginBottom: 0,\n        // marginTop: \"10px\",\n        maxWidth: \"70%\",\n        fontSize: \"16px\",\n        boxShadow: \"none\"\n      },\n      inputAttributes: {\n        placeHolder: \"Type the \"\n      },\n      bubbleOptionStyle: {\n        marginBottom: 0,\n        marginTop: \"10px\",\n        fontSize: \"16px\",\n        boxShadow: \"none\",\n        borderBottom: \"1px solid currentColor\",\n        paddingRight: \"30px\",\n        fontWeight: \"600\",\n        paddingLeft: \"0\",\n        paddingBottom: \"0\",\n        marginRight: \"10px\",\n        minWidth: \"40%\"\n      },\n      style: {\n        width: \"450px\",\n        maxWidth: \"100%\",\n        bottom: 0,\n        right: isOpen ? \"380px\" : \"32px\",\n        transition: \"all 0.4s ease 0s\"\n      },\n      customStyle: {\n        boxShadow: \"none\",\n        justifyContent: \"left\",\n        marginLeft: \"46px\"\n      },\n      steps: chat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  isOpen: state.drawers.isCartOpen,\n  countryCode: state.location.countryCode,\n  items: state.cart.items\n});\n\nexport default connect(mapStateToProps)(ChatBotElement);","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missnew front/components/chatBot/ChatBot.js"],"names":["React","Component","dynamic","ChatBot","Router","ThemeProvider","connect","ChatProductList","ChatCategoryList","ChatProductCard","ChatUserOneRet","ChatMsgList","ChatOrderList","LearnResponse","isEmpty","isEmail","chatTheme","imageUrl","chatMsgList","getInitialMsg","getInitialMsg2","shopNowMsg","redirectForTracking","emptyTrackingIdErr","getProductChooseMsg","getMsgAfterCategory","contactFirst","contactSecond","contactThird","contactFourth","repeatMsg","afterProduct","contactErrMsgOne","contactErrMsgTwo","checkoutRedirectMsg","checkoutNoItemMsg","getProductListMsg","pickProductMsg","afterProductFinish","checkoutFinish","learnMoreUserPre","learnMoreQuit","learnMoreNext","ChatBotElement","constructor","props","setState","prevState","opened","clear","login","notLogin","user","_id","username","state","userName","email","componentDidMount","ifLogin","render","theme","isOpen","items","chat","id","message","split","trigger","options","value","label","component","waitAction","asMessage","toLowerCase","trim","pp","setTimeout","window","open","validator","previousValue","steps","products","productTitle","length","push","toggleFloating","clearChat","end","filter","el","bottom","marginBottom","maxWidth","fontSize","boxShadow","placeHolder","marginTop","borderBottom","paddingRight","fontWeight","paddingLeft","paddingBottom","marginRight","minWidth","width","right","transition","justifyContent","marginLeft","mapStateToProps","drawers","isCartOpen","countryCode","location","cart"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport dynamic from \"next/dynamic\";\nimport ChatBot from \"react-simple-chatbot\";\nimport Router from \"next/router\";\nimport { ThemeProvider } from \"styled-components\";\nimport { connect } from \"react-redux\";\nconst ChatProductList = dynamic(() => import(\"./ChatProductList\"));\nconst ChatCategoryList = dynamic(() => import(\"./ChatCategoryList\"));\nconst ChatProductCard = dynamic(() => import(\"./ChatProductCard\"));\nconst ChatUserOneRet = dynamic(() => import(\"./ChatUserOneRet\"));\nimport ChatMsgList from \"./ChatMsgList\";\nconst ChatOrderList = dynamic(() => import(\"./ChatOrderList\"));\nconst LearnResponse = dynamic(() => import(\"./LearnResponse\"));\nimport { isEmpty, isEmail } from \"validator\";\nimport { chatTheme, imageUrl } from \"../../constants/projectSettings\";\n\nconst chatMsgList = new ChatMsgList();\nconst {\n  getInitialMsg,\n  getInitialMsg2,\n  shopNowMsg,\n  redirectForTracking,\n  emptyTrackingIdErr,\n  getProductChooseMsg,\n  getMsgAfterCategory,\n  contactFirst,\n  contactSecond,\n  contactThird,\n  contactFourth,\n  repeatMsg,\n  afterProduct,\n  contactErrMsgOne,\n  contactErrMsgTwo,\n  checkoutRedirectMsg,\n  checkoutNoItemMsg,\n  getProductListMsg,\n  pickProductMsg,\n  afterProductFinish,\n  checkoutFinish,\n  learnMoreUserPre,\n  learnMoreQuit,\n  learnMoreNext,\n} = chatMsgList;\n\nclass ChatBotElement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: props.user.email,\n      opened: false,\n      clear: false,\n    };\n  }\n  componentDidMount() {\n    this.ifLogin();\n  }\n  toggleFloating = () => {\n    this.setState((prevState) => ({\n      opened: !prevState.opened,\n    }));\n  };\n  clearChat = () => {\n    this.setState(\n      {\n        clear: true,\n      },\n      () => {\n        this.setState({\n          clear: false,\n        });\n      }\n    );\n  };\n  ifLogin = (login, notLogin = null) => {\n    if (this.props)\n      if (this.props.user) {\n        if (this.props.user._id && this.props.user.username) return login;\n      }\n    return notLogin;\n  };\n  render() {\n    chatTheme;\n    const theme = {\n      ...chatTheme,\n    };\n    const { isOpen, items } = this.props;\n    const { opened, clear } = this.state;\n    const chat = [\n      this.ifLogin({\n        id: \"initialOne\",\n        message: () => {\n          const userName =\n            this.props.user && this.props.user.username.split(\" \")[0];\n          return getInitialMsg(userName);\n        },\n        trigger: \"initialTwo\",\n      }),\n      {\n        id: \"initialTwo\",\n        message: getInitialMsg2(),\n        trigger: \"firstOptionsFresh\",\n      },\n      {\n        id: \"firstOptionsFresh\",\n        options: [\n          { value: \"initialOne\", label: \"Shop Now\", trigger: \"shopSelected\" },\n          { value: \"checkout\", label: \"Checkout\", trigger: \"checkout\" },\n          { value: \"contact\", label: \"Contact us\", trigger: \"contact\" },\n          {\n            value: \"learnMore\",\n            label: \"Learn more\",\n            trigger: \"learnMoreUserPre\",\n          },\n        ],\n      },\n      {\n        id: \"firstOptions\",\n        options: [\n          { value: \"initialOne\", label: \"Shop Now\", trigger: \"shopSelected\" },\n          { value: \"checkout\", label: \"Checkout\", trigger: \"checkout\" },\n          { value: \"contact\", label: \"Contact us\", trigger: \"contact\" },\n          {\n            value: \"learnMore\",\n            label: \"Learn more\",\n            trigger: \"learnMoreUserPre\",\n          },\n        ],\n      },\n      {\n        id: \"learnMoreUserPre\",\n        message: learnMoreUserPre(),\n        trigger: \"learnMoreUser\",\n      },\n      {\n        id: \"learnMoreUser\",\n        user: true,\n        trigger: \"learnMoreResponce\",\n      },\n      {\n        id: \"learnMoreResponce\",\n        component: <LearnResponse />,\n        waitAction: true,\n        asMessage: true,\n      },\n      {\n        id: \"learnMoreQuit\",\n        message: learnMoreQuit(),\n        trigger: \"learnMoreQuitAfter\",\n      },\n      {\n        id: \"learnMoreQuitAfter\",\n        user: true,\n        trigger: ({ value }) => {\n          if (value.toLowerCase().trim() === \"yes\") return \"firstOptions\";\n\n          return \"learnMoreNext\";\n        },\n        // trigger: \"learnMoreResponce\"\n      },\n      {\n        id: \"learnMoreNext\",\n        message: learnMoreNext(),\n        trigger: \"learnMoreUser\",\n      },\n      {\n        id: \"shopSelected\",\n        message: shopNowMsg(),\n        trigger: \"userOne\",\n      },\n      {\n        id: \"userOne\",\n        user: true,\n        // waitAction: true,\n        trigger: \"5\",\n      },\n      {\n        id: 5,\n        component: <ChatUserOneRet />,\n        waitAction: true,\n        asMessage: true,\n      },\n      // {\n      //   id: \"trackNow\",\n      //   message: msgTrackNow(),\n      //   trigger: \"getTrackingId\"\n      // },\n      {\n        id: \"trackNowLogin\",\n        // message: msgTrackNow(),\n        component: <ChatOrderList />,\n        trigger: \"trackNowLoginNext\",\n        waitAction: true,\n      },\n      {\n        id: \"trackNowLoginNext\",\n        message: (pp) => {\n          setTimeout(() => {\n            window.open(\"https://www.google.com\");\n          }, 2000);\n          return redirectForTracking();\n        },\n        trigger: \"repeat\",\n      },\n      {\n        id: \"trackNow\",\n        user: true,\n        validator: (value) => {\n          if (isEmpty(value)) {\n            return emptyTrackingIdErr();\n          }\n          return true;\n        },\n        trigger: (props) => {\n          return \"repeat\";\n        },\n      },\n      {\n        id: \"categoryList\",\n        component: <ChatCategoryList />,\n        waitAction: true,\n        // asMessage: true,\n        trigger: \"postCategory\",\n      },\n      {\n        id: \"postCategory\",\n        message: ({ previousValue }) => {\n          return getMsgAfterCategory(previousValue);\n        },\n        trigger: \"preProduct\",\n      },\n      {\n        id: \"preProduct\",\n        message: getProductListMsg(),\n        trigger: \"preProduct2\",\n      },\n      {\n        id: \"preProduct2\",\n        message: pickProductMsg(),\n        trigger: \"products\",\n      },\n      {\n        id: \"products\",\n        component: <ChatProductList />,\n        waitAction: true,\n        trigger: \"productSelected1\",\n        // end: true\n      },\n      {\n        id: \"productSelected1\",\n        message: \"Awesome! 😍\",\n        trigger: (props) => {\n          return \"productSelected2\";\n        },\n      },\n      {\n        id: \"productSelected2\",\n        message: ({ steps }) => {\n          return getProductChooseMsg(steps.products.value.productTitle);\n          // return `${steps.products.value.productTitle} is my favourite`\n        },\n        // end: true\n        trigger: \"afterProduct\",\n      },\n      {\n        id: \"afterProduct\",\n        message: afterProduct(),\n        trigger: \"singleProduct\",\n      },\n      {\n        id: \"singleProduct\",\n        component: <ChatProductCard />,\n        trigger: \"productNext\",\n      },\n      {\n        id: \"productNext\",\n        message: afterProductFinish(),\n        trigger: \"firstOptions\",\n      },\n      {\n        id: \"checkout\",\n        message: () => {\n          if (items && items.length > 0) {\n            return checkoutRedirectMsg();\n          }\n          return checkoutNoItemMsg();\n        },\n        trigger: () => {\n          if (items && items.length > 0) {\n            return \"checkout1\";\n          }\n          return \"repeat\";\n        },\n      },\n      {\n        id: \"checkout1\",\n        message: checkoutFinish(),\n        trigger: \"checkout2\",\n      },\n      {\n        id: \"checkout2\",\n        message: () => {\n          // const { history, countryCode } = this.props;\n          setTimeout(() => {\n            Router.push(`/checkout`);\n            this.toggleFloating();\n            this.clearChat();\n          }, 400);\n          return \"\";\n        },\n        end: true,\n      },\n      {\n        id: \"contact\",\n        message: contactFirst(),\n        trigger: \"contactUserFirst\",\n      },\n      {\n        id: \"contactUserFirst\",\n        user: true,\n        // waitAction: true,\n        trigger: ({ value }) => {\n          if (isEmail(value)) return \"contactTwo\";\n          else {\n            return \"contactUserErr\";\n          }\n        },\n      },\n      {\n        id: \"contactUserErr\",\n        message: contactErrMsgOne(),\n        trigger: \"contactUserErr2\",\n      },\n      {\n        id: \"contactUserErr2\",\n        message: contactErrMsgTwo(),\n        trigger: \"contactUserFirst\",\n      },\n      {\n        id: \"contactTwo\",\n        message: contactSecond(),\n        trigger: \"contactUserSecond\",\n      },\n      {\n        id: \"contactUserSecond\",\n        user: true,\n        // waitAction: true,\n        trigger: \"contactThree\",\n      },\n      {\n        id: \"contactThree\",\n        message: contactThird(),\n        trigger: \"contactFourth\",\n      },\n      {\n        id: \"contactFourth\",\n        message: contactFourth(),\n        trigger: \"repeat\",\n      },\n      {\n        id: \"repeat\",\n        message: repeatMsg(),\n        trigger: \"firstOptions\",\n      },\n    ].filter((el) => el);\n\n    if (clear) return <div />;\n\n    return (\n      <div className=\"react-chat-bot\">\n        <div className=\"chat-inner\">\n          <ThemeProvider theme={theme}>\n            <ChatBot\n              opened={opened}\n              toggleFloating={this.toggleFloating}\n              floatingStyle={{\n                bottom: \"42px\",\n              }}\n              enableMobileAutoFocus={true}\n              floating={true}\n              botAvatar={`${imageUrl}/Logo-chat.png`}\n              bubbleStyle={{\n                marginBottom: 0,\n                // marginTop: \"10px\",\n                maxWidth: \"70%\",\n\n                fontSize: \"16px\",\n                boxShadow: \"none\",\n              }}\n              inputAttributes={{\n                placeHolder: \"Type the \",\n              }}\n              bubbleOptionStyle={{\n                marginBottom: 0,\n                marginTop: \"10px\",\n\n                fontSize: \"16px\",\n                boxShadow: \"none\",\n                borderBottom: \"1px solid currentColor\",\n                paddingRight: \"30px\",\n                fontWeight: \"600\",\n                paddingLeft: \"0\",\n                paddingBottom: \"0\",\n                marginRight: \"10px\",\n                minWidth: \"40%\",\n              }}\n              style={{\n                width: \"450px\",\n                maxWidth: \"100%\",\n\n                bottom: 0,\n                right: isOpen ? \"380px\" : \"32px\",\n                transition: \"all 0.4s ease 0s\",\n              }}\n              customStyle={{\n                boxShadow: \"none\",\n                justifyContent: \"left\",\n                marginLeft: \"46px\",\n              }}\n              steps={chat}\n            />\n          </ThemeProvider>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isOpen: state.drawers.isCartOpen,\n  countryCode: state.location.countryCode,\n  items: state.cart.items,\n});\nexport default connect(mapStateToProps)(ChatBotElement);\n"]},"metadata":{},"sourceType":"module"}