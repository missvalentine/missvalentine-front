{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport Router from \"next/router\";\nimport moment from \"moment\";\nimport { projectName } from \"../../constants/projectSettings\";\n\nclass Success extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"saveAndContinue\", e => {\n      e.preventDefault();\n      this.setState({\n        isConfirmed: true\n      }); // this.props.nextStep()\n      //@shubham Do the api call here\n    });\n\n    _defineProperty(this, \"back\", e => {\n      e.preventDefault();\n      if (typeof this.props.prevStep === \"function\") this.props.prevStep();\n    });\n\n    _defineProperty(this, \"goToShop\", () => {\n      Router.push(\"/shop\");\n    });\n\n    this.state = {\n      isConfirmed: false\n    };\n  }\n\n  render() {\n    const {\n      isConfirmed\n    } = this.state;\n    const {\n      values: {\n        firstName,\n        lastName,\n        phoneNumber,\n        zipCode,\n        state,\n        weight,\n        age,\n        notes\n      }\n    } = this.props;\n    const time = moment(this.props.currentAppointment.bookedFor).format(\"MMM DD, hh:mm:a\");\n    return __jsx(\"div\", {\n      className: \"c-confirmation\"\n    }, __jsx(\"div\", {\n      className: \"container-fluid\"\n    }, __jsx(\"div\", {\n      className: \"consult-success-wrapper\"\n    }, __jsx(\"h1\", {\n      className: \"c-confirmation__center c-confirmation__center--heading\"\n    }, !isConfirmed ? \"Confirm your Appointment\" : \"Your Appointment has been confirmed!\"), !isConfirmed && __jsx(\"p\", {\n      className: \"c-confirmation__center\"\n    }, \"Your Appointment with\", \" \", __jsx(\"b\", null, this.props.currentAppointment.doctorName), \", scheduled for\", \" \", __jsx(\"b\", null, time), \" is waiting for a confirmation.\"), !isConfirmed && __jsx(\"p\", {\n      className: \"c-confirmation__center\"\n    }, \"Thank you for choosing \", projectName), !isConfirmed && __jsx(React.Fragment, null, firstName, lastName, phoneNumber, zipCode, __jsx(\"div\", {\n      className: \"c-personalDetails__btn-wrap\"\n    }, __jsx(Button, {\n      className: \"c-btn c-btn--dark\",\n      onClick: this.back\n    }, \"Back\"), __jsx(Button, {\n      className: \"c-btn c-btn--dark\",\n      onClick: this.saveAndContinue\n    }, \"Confirm Appointment\"))), isConfirmed && __jsx(\"div\", {\n      className: \"c-personalDetails__btn-wrap justify-content-around\"\n    }, __jsx(Button, {\n      className: \"c-btn c-btn--dark\",\n      onClick: this.goToShop\n    }, \"Continue Shopping\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentAppointment: state.appointment.currentAppointment\n});\n\nexport default connect(mapStateToProps)(Success);","map":null,"metadata":{},"sourceType":"module"}