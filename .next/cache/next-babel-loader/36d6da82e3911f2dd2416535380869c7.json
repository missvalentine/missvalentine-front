{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport BlankStar from \"./BlankStar\";\nexport default class RenderStars extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"reviewStars\", () => {\n      var rating = this.props.rating;\n      let blankStars = 5 - rating;\n      let arrayOfStars = []; // ! render filled stars\n\n      for (let i = 0; i < rating; i++) {\n        arrayOfStars.push(this.renderFilled());\n      } // ! render blank stars\n\n\n      for (let i = 0; i < blankStars; i++) {\n        arrayOfStars.push(this.renderBlank());\n      }\n\n      return arrayOfStars;\n    });\n\n    _defineProperty(this, \"renderFilled\", () => {\n      return __jsx(BlankStar, null);\n    });\n\n    _defineProperty(this, \"renderBlank\", () => {\n      return __jsx(BlankStar, {\n        fill: \"white\"\n      });\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, this.reviewStars());\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}