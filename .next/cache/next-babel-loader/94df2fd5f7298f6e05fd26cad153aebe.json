{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { connect } from 'react-redux';\nimport { setReferrer } from '../redux/actions';\nimport { makeCancelable } from \"../services/makeCancelable\";\nimport BasicFunction from \"../services/extra/basicFunction\";\nimport { addAmbassador } from \"../services/api\";\nconst basicFunction = new BasicFunction();\n\nclass AppWrapper extends React.Component {\n  componentDidMount() {\n    this.referrerSetting();\n\n    if (typeof this.props.router !== \"undefined\") {\n      const {\n        query,\n        asPath\n      } = this.props.router;\n\n      if (query.ref) {}\n    }\n  }\n\n  referrerSetting() {\n    if (false) {\n      const {\n        href,\n        pathname\n      } = window.location;\n      const {\n        setReferrer,\n        referrer\n      } = this.props;\n      var url = new URL(window.location.href);\n      const ambassador_id = url.searchParams.get(\"ref\");\n      var referralUrl = referrer.referralUrl ? referrer.referralUrl : document.referrer;\n      const cUrl = href;\n      const originalUrl = basicFunction.removeParams(cUrl, \"ref\");\n\n      if (referralUrl) {\n        if (referralUrl.includes(window.origin)) {\n          referralUrl = \"\";\n        }\n      }\n\n      if (ambassador_id) {\n        setReferrer({\n          ambassadorId: ambassador_id,\n          ambassadorUrl: referralUrl,\n          referralUrl: referralUrl\n        });\n        this.cancelableRef = makeCancelable(addAmbassador({\n          ambass_id: ambassador_id,\n          url: originalUrl,\n          refer_url: referralUrl\n        }), res => {\n          const resJson = res.data;\n\n          if (resJson.status) {\n            setReferrer({\n              referralUrl: null\n            });\n\n            if (resJson.referral) {\n              setReferrer({\n                referralUrlId: resJson.referral._id\n              });\n            }\n          } else {\n            this.setState({\n              modal: true,\n              affMsg: \"Invalid Referral Url .\"\n            }); //   setTimeout(() => {\n            //     this.props.history.push(url)                      this.props.history.push(url);\n            //   }, 2000);\n          }\n        }, err => {\n          this.setState({\n            modal: true,\n            affMsg: \"Invalid Referral Url .\"\n          });\n          setTimeout(() => {\n            this.props.history.push(url);\n          }, 2000);\n        });\n      }\n    }\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, this.props.children);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  referrer: state.referrer\n});\n\nexport default connect(mapStateToProps, {\n  setReferrer\n})(AppWrapper);","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/components/AppWrapper.js"],"names":["connect","setReferrer","makeCancelable","BasicFunction","addAmbassador","basicFunction","AppWrapper","React","Component","componentDidMount","referrerSetting","props","router","query","asPath","ref","href","pathname","window","location","referrer","url","URL","ambassador_id","searchParams","get","referralUrl","document","cUrl","originalUrl","removeParams","includes","origin","ambassadorId","ambassadorUrl","cancelableRef","ambass_id","refer_url","res","resJson","data","status","referral","referralUrlId","_id","setState","modal","affMsg","err","setTimeout","history","push","render","children","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport {\n    setReferrer\n} from '../redux/actions'\nimport { makeCancelable } from \"../services/makeCancelable\";\nimport BasicFunction from \"../services/extra/basicFunction\";\nimport { addAmbassador } from \"../services/api\"\nconst basicFunction = new BasicFunction();\nclass AppWrapper extends React.Component {\n    componentDidMount(){\n        this.referrerSetting()\n        if(typeof this.props.router !== \"undefined\"){\n            const {\n                query, asPath\n            } = this.props.router\n            if(query.ref){\n            }\n        }\n    }\n    referrerSetting() {\n      if(typeof window !== \"undefined\"){\n        const { href, pathname } = window.location;\n        const { setReferrer, referrer } = this.props;\n        var url = new URL(window.location.href);\n        const ambassador_id = url.searchParams.get(\"ref\");\n        var referralUrl = referrer.referralUrl\n          ? referrer.referralUrl\n          : document.referrer;\n        const cUrl = href;\n        const originalUrl = basicFunction.removeParams(cUrl, \"ref\");\n        if (referralUrl) {\n          if (referralUrl.includes(window.origin)) {\n            referralUrl = \"\";\n          }\n        }\n        if (ambassador_id) {\n              setReferrer({\n              ambassadorId: ambassador_id,\n              ambassadorUrl: referralUrl,\n              referralUrl: referralUrl\n              });\n              this.cancelableRef = makeCancelable(\n              addAmbassador({\n                  ambass_id: ambassador_id,\n                  url: originalUrl,\n                  refer_url: referralUrl\n              }),\n              res => {\n                  const resJson = res.data\n                  if (resJson.status) {\n                  setReferrer({\n                      referralUrl: null\n                  });\n                  if (resJson.referral) {\n                      setReferrer({\n                      referralUrlId: resJson.referral._id\n                      });\n                  }\n                  } else {\n                  this.setState({\n                      modal: true,\n                      affMsg: \"Invalid Referral Url .\"\n                  });\n                //   setTimeout(() => {\n                //     this.props.history.push(url)                      this.props.history.push(url);\n                //   }, 2000);\n                  }\n              },\n              err => {\n                  this.setState({\n                  modal: true,\n                  affMsg: \"Invalid Referral Url .\"\n                  });\n                  setTimeout(() => {\n                  this.props.history.push(url);\n                  }, 2000);\n              }\n              );\n          }\n        }\n    }\n    render(){\n        return (\n            <>\n                {this.props.children}\n            </>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    referrer: state.referrer\n})\nexport default connect(mapStateToProps, {setReferrer} )(AppWrapper)"]},"metadata":{},"sourceType":"module"}