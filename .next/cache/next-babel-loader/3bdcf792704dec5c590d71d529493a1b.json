{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/components/form-components/Checkbox.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport classNames from \"classnames\";\n\nvar Checkbox = /*#__PURE__*/function (_React$Component) {\n  _inherits(Checkbox, _React$Component);\n\n  var _super = _createSuper(Checkbox);\n\n  function Checkbox() {\n    _classCallCheck(this, Checkbox);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$props = this.props,\n          checked = _this$props.checked,\n          onChange = _this$props.onChange,\n          parentClass = _this$props.parentClass,\n          versions = _this$props.versions,\n          children = _this$props.children,\n          inputId = _this$props.inputId,\n          label = _this$props.label;\n      var componentClass = \"c-checkbox\";\n      var versionClass = versions.map(function (el) {\n        return \"\".concat(componentClass, \"--\").concat(el);\n      }).join(\" \");\n      var parent = \"\".concat(parentClass, \"__\").concat(componentClass.replace(\"c-\", \"\"));\n      var className = classNames(componentClass, (_classNames = {}, _defineProperty(_classNames, versionClass, versions), _defineProperty(_classNames, parent, parentClass), _classNames));\n      return __jsx(\"div\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, __jsx(\"label\", {\n        className: \"c-checkbox__label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, __jsx(\"input\", {\n        onChange: onChange,\n        checked: checked,\n        type: \"checkbox\",\n        className: \"c-checkbox__input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }), versions == \"dark\" && __jsx(\"span\", {\n        className: \"ant-checkbox-inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 34\n        }\n      }), versions == \"light\" && __jsx(\"span\", {\n        style: {\n          borderRadius: 0\n        },\n        className: \"ant-checkbox-inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }), __jsx(\"span\", {\n        className: \"c-checkbox__label-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, label, children)));\n    }\n  }]);\n\n  return Checkbox;\n}(React.Component);\n\nCheckbox.defaultProps = {\n  // inputId: `${parseInt(Math.random() * new Date().getTime())}`,\n  versions: []\n};\nexport default Checkbox;","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/components/form-components/Checkbox.js"],"names":["classNames","Checkbox","props","checked","onChange","parentClass","versions","children","inputId","label","componentClass","versionClass","map","el","join","parent","replace","className","borderRadius","React","Component","defaultProps"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;;IACMC,Q;;;;;;;;;;;;;WACJ,kBAAS;AAAA;;AAAA,wBASH,KAAKC,KATF;AAAA,UAELC,OAFK,eAELA,OAFK;AAAA,UAGLC,QAHK,eAGLA,QAHK;AAAA,UAILC,WAJK,eAILA,WAJK;AAAA,UAKLC,QALK,eAKLA,QALK;AAAA,UAMLC,QANK,eAMLA,QANK;AAAA,UAOLC,OAPK,eAOLA,OAPK;AAAA,UAQLC,KARK,eAQLA,KARK;AAUP,UAAMC,cAAc,GAAG,YAAvB;AACA,UAAMC,YAAY,GAAGL,QAAQ,CAC1BM,GADkB,CACd,UAACC,EAAD;AAAA,yBAAWH,cAAX,eAA8BG,EAA9B;AAAA,OADc,EAElBC,IAFkB,CAEb,GAFa,CAArB;AAGA,UAAMC,MAAM,aAAMV,WAAN,eAAsBK,cAAc,CAACM,OAAf,CAAuB,IAAvB,EAA6B,EAA7B,CAAtB,CAAZ;AACA,UAAMC,SAAS,GAAGjB,UAAU,CAACU,cAAD,kDACzBC,YADyB,EACVL,QADU,gCAEzBS,MAFyB,EAEhBV,WAFgB,gBAA5B;AAIA,aACE;AAAK,QAAA,SAAS,EAAEY,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,QAAQ,EAAEb,QADZ;AAEE,QAAA,OAAO,EAAED,OAFX;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,SAAS,EAAC,mBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAUGG,QAAQ,IAAI,MAAZ,IAAsB;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVzB,EAWGA,QAAQ,IAAI,OAAZ,IACC;AAAM,QAAA,KAAK,EAAE;AAAEY,UAAAA,YAAY,EAAE;AAAhB,SAAb;AAAkC,QAAA,SAAS,EAAC,oBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,EAcE;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGT,KADH,EAEGF,QAFH,CAdF,CADF,CADF;AAuBD;;;;EA3CoBY,KAAK,CAACC,S;;AA6C7BnB,QAAQ,CAACoB,YAAT,GAAwB;AACtB;AACAf,EAAAA,QAAQ,EAAE;AAFY,CAAxB;AAIA,eAAeL,QAAf","sourcesContent":["import classNames from \"classnames\";\nclass Checkbox extends React.Component {\n  render() {\n    const {\n      checked,\n      onChange,\n      parentClass,\n      versions,\n      children,\n      inputId,\n      label,\n    } = this.props;\n    const componentClass = \"c-checkbox\";\n    const versionClass = versions\n      .map((el) => `${componentClass}--${el}`)\n      .join(\" \");\n    const parent = `${parentClass}__${componentClass.replace(\"c-\", \"\")}`;\n    const className = classNames(componentClass, {\n      [versionClass]: versions,\n      [parent]: parentClass,\n    });\n    return (\n      <div className={className}>\n        <label className=\"c-checkbox__label\">\n          <input\n            onChange={onChange}\n            checked={checked}\n            type=\"checkbox\"\n            className=\"c-checkbox__input\"\n          />\n          {/* <span className=\"c-checkbox__icon\">\n                        <ReactSvg src=\"/images/checkbox-icon.svg\" />\n                    </span> */}\n          {versions == \"dark\" && <span className=\"ant-checkbox-inner\"></span>}\n          {versions == \"light\" && (\n            <span style={{ borderRadius: 0 }} className=\"ant-checkbox-inner\"></span>\n          )}\n          <span className=\"c-checkbox__label-text\">\n            {label}\n            {children}\n          </span>\n        </label>\n      </div>\n    );\n  }\n}\nCheckbox.defaultProps = {\n  // inputId: `${parseInt(Math.random() * new Date().getTime())}`,\n  versions: [],\n};\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}