{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { ic_clear } from \"react-icons-kit/md/\";\nimport Icon from \"react-icons-kit\";\nimport classNames from \"classnames\";\nimport { Modal as ReactModal, ModalHeader } from \"reactstrap\";\n\nvar Modal = /*#__PURE__*/function (_Component) {\n  _inherits(Modal, _Component);\n\n  var _super = _createSuper(Modal);\n\n  function Modal(props) {\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"toggle\",\n    value: function toggle() {\n      var toggle = this.props.toggle;\n      if (typeof toggle === \"function\") toggle();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isOpen = _this$props.isOpen,\n          children = _this$props.children,\n          noCross = _this$props.noCross,\n          large = _this$props.large,\n          heading = _this$props.heading;\n      return __jsx(\"div\", null, __jsx(ReactModal, {\n        isOpen: isOpen,\n        toggle: this.toggle,\n        className: classNames(\"full-modal\", {\n          large: large\n        })\n      }, heading && __jsx(ModalHeader, {\n        toggle: this.toggle\n      }, heading), __jsx(\"div\", {\n        className: \"Modal-body center-modal\"\n      }, !noCross && !heading && __jsx(\"div\", {\n        className: \"modal-dismiss\",\n        onClick: this.toggle\n      }, __jsx(Icon, {\n        icon: ic_clear,\n        size: 64\n      })), __jsx(\"div\", {\n        className: \"modal-inner\"\n      }, __jsx(\"div\", {\n        className: \"modal-content\"\n      }, children)))));\n    }\n  }]);\n\n  return Modal;\n}(Component);\n\nexport { Modal as default };","map":null,"metadata":{},"sourceType":"module"}