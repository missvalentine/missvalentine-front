{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SET_PRODUCTS, SET_PRODUCT, CLEAR_PRODUCT, SET_CATEGORIES } from '../actions/type';\nimport { getVisibleProducts, getFeaturedProduct, getCategoriesProducts } from '../../services/helpers/product';\nconst initialState = {\n  products: [],\n  product: null,\n  featured: [],\n  categories: []\n};\nexport default ((state = initialState, action) => {\n  const {\n    payload,\n    type\n  } = action;\n\n  switch (type) {\n    case SET_PRODUCTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        products: payload // products: payload,\n\n      });\n\n    case SET_CATEGORIES:\n      console.log('aaap', payload);\n      const c = payload.map(p => {\n        return {\n          title: p.name\n        };\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        categories: c // products: payload,\n\n      });\n\n    case SET_PRODUCT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        product: payload\n      });\n\n    case CLEAR_PRODUCT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        product: null\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/redux/reducers/products.js"],"names":["SET_PRODUCTS","SET_PRODUCT","CLEAR_PRODUCT","SET_CATEGORIES","getVisibleProducts","getFeaturedProduct","getCategoriesProducts","initialState","products","product","featured","categories","state","action","payload","type","console","log","c","map","p","title","name"],"mappings":";;;;;;AAAA,SACEA,YADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,cAJF,QAKO,iBALP;AAOA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,qBAHF,QAIO,gCAJP;AAKA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,QAAQ,EAAE,EAHS;AAInBC,EAAAA,UAAU,EAAE;AAJO,CAArB;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBF,MAA1B;;AACA,UAAQE,IAAR;AACE,SAAKf,YAAL;AACE,6CACKY,KADL;AAEEJ,QAAAA,QAAQ,EAAEM,OAFZ,CAGE;;AAHF;;AAKF,SAAKX,cAAL;AACEa,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,OAApB;AACA,YAAMI,CAAC,GAAGJ,OAAO,CAACK,GAAR,CAAaC,CAAD,IAAO;AAC3B,eAAO;AACLC,UAAAA,KAAK,EAAED,CAAC,CAACE;AADJ,SAAP;AAGD,OAJS,CAAV;AAMA,6CACKV,KADL;AAEED,QAAAA,UAAU,EAAEO,CAFd,CAGE;;AAHF;;AAMF,SAAKjB,WAAL;AACE,6CACKW,KADL;AAEEH,QAAAA,OAAO,EAAEK;AAFX;;AAKF,SAAKZ,aAAL;AACE,6CACKU,KADL;AAEEH,QAAAA,OAAO,EAAE;AAFX;;AAKF;AACE,aAAOG,KAAP;AAlCJ;AAoCD,CAtCD","sourcesContent":["import {\n  SET_PRODUCTS,\n  SET_PRODUCT,\n  CLEAR_PRODUCT,\n  SET_CATEGORIES,\n} from '../actions/type';\n\nimport {\n  getVisibleProducts,\n  getFeaturedProduct,\n  getCategoriesProducts,\n} from '../../services/helpers/product';\nconst initialState = {\n  products: [],\n  product: null,\n  featured: [],\n  categories: [],\n};\n\nexport default (state = initialState, action) => {\n  const { payload, type } = action;\n  switch (type) {\n    case SET_PRODUCTS:\n      return {\n        ...state,\n        products: payload,\n        // products: payload,\n      };\n    case SET_CATEGORIES:\n      console.log('aaap', payload);\n      const c = payload.map((p) => {\n        return {\n          title: p.name,\n        };\n      });\n\n      return {\n        ...state,\n        categories: c,\n        // products: payload,\n      };\n\n    case SET_PRODUCT:\n      return {\n        ...state,\n        product: payload,\n      };\n\n    case CLEAR_PRODUCT:\n      return {\n        ...state,\n        product: null,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}