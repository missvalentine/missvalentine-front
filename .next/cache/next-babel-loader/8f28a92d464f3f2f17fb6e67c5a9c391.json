{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar checkAddressDuplicate = function checkAddressDuplicate(address, allAddresses) {\n  console.log(\"In address function\");\n  console.log(address);\n  console.log(allAddresses);\n  var checkAdd = allAddresses.some(function (el) {\n    var id = el.id,\n        isDefault = el.isDefault,\n        addressType = el.addressType,\n        rest = _objectWithoutProperties(el, [\"id\", \"isDefault\", \"addressType\"]);\n\n    console.log(_objectSpread({}, rest));\n    return Object.keys(_objectSpread({}, rest)).every(function (elx) {\n      return el[elx].toLowerCase().trim() === address[elx].toLowerCase().trim();\n    });\n  });\n  console.log(checkAdd);\n  return checkAdd;\n};\n\nexport default checkAddressDuplicate;","map":null,"metadata":{},"sourceType":"module"}