{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport classNames from 'classnames';\nimport Flickity from 'react-flickity-component';\nimport dynamic from 'next/dynamic';\nconst Product = dynamic(() => import('./Product'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./Product')],\n    modules: ['./Product']\n  }\n});\nimport { getProductTitle, getProductImage, getProductShortDesc } from '../services/helpers/product';\nimport projectSettings from '../constants/projectSettings';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst ProductSlider = ({\n  parentClass,\n  versions,\n  products\n}) => {\n  const componentClass = `c-product-slider`;\n  const versionClass = versions.map(el => `${componentClass}--${el}`).join(' ');\n  const parent = `${parentClass}__${componentClass.replace('c-', '')}`;\n  const className = classNames(componentClass, {\n    [versionClass]: versions,\n    [parent]: parentClass\n  }); // const products = useSelector((state) => state.products);\n\n  let flkty = undefined;\n  return __jsx(\"div\", {\n    className: className\n  }, __jsx(\"div\", {\n    className: `${componentClass}__row row`\n  }, __jsx(Flickity, {\n    options: {\n      initialIndex: 0,\n      pageDots: false,\n      cellAlign: 'left',\n      // groupCells:3,\n      contain: true\n    },\n    flickityRef: c => flkty = c,\n    disableImagesLoaded: false,\n    reloadOnUpdate: true,\n    className: \"c-category-products__slider\"\n  }, products.filter(product => product.hidden !== true).map((el, i) => {\n    const title = getProductTitle(el);\n    const image = getProductImage(el);\n    const subTitle = getProductShortDesc(el);\n    return __jsx(\"div\", {\n      key: i,\n      className: \" col-lg-4 c-category-products__product\"\n    }, __jsx(Product, {\n      data: el\n    }));\n  }))));\n};\n\nProductSlider.defaultProps = {\n  products: [],\n  versions: []\n};\nexport default ProductSlider;","map":null,"metadata":{},"sourceType":"module"}