{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  products: [],\n  product: null,\n  featured: [],\n  categories: [],\n  category: null,\n  subcategories: [],\n  recentlyViewed: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var payload = action.payload,\n      type = action.type;\n\n  switch (type) {\n    case 'SET_PRODUCTS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        products: payload\n      });\n\n    case 'SET_CATEGORIES':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        categories: payload\n      });\n\n    case 'SET_SUBCATEGORIES':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        subcategories: payload\n      });\n\n    case 'SET_PRODUCT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        product: payload\n      });\n\n    case 'CLEAR_PRODUCT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        product: null\n      });\n\n    case 'SET_CATEGORY':\n      console.log('payload', payload);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        category: payload\n      });\n\n    case 'CLEAR_CATEGORY':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        category: null\n      });\n\n    case 'SET_RECENTLY_VIEWD':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        recentlyViewed: payload\n      });\n\n    case 'ADD_TO_RECENTLY_VIEWD':\n      var tempRecentlyViewed = state.recentlyViewed;\n      if (tempRecentlyViewed.findIndex(function (x) {\n        return x._id === payload._id;\n      }) === -1) tempRecentlyViewed.push(payload);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        recentlyViewed: tempRecentlyViewed\n      });\n\n    case 'CLEAR_RECENTLY_VIEWD':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        recentlyViewed: null\n      });\n\n    default:\n      return state;\n  }\n});","map":null,"metadata":{},"sourceType":"module"}