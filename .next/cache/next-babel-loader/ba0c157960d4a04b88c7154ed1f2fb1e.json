{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/components/modal/FullModal.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Modal as ReactModal } from \"reactstrap\";\n\nvar FullModal = /*#__PURE__*/function (_Component) {\n  _inherits(FullModal, _Component);\n\n  var _super = _createSuper(FullModal);\n\n  function FullModal(props) {\n    var _this;\n\n    _classCallCheck(this, FullModal);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FullModal, [{\n    key: \"toggle\",\n    value: function toggle() {\n      var toggle = this.props.toggle;\n      if (typeof toggle === \"function\") toggle();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isOpen = _this$props.isOpen,\n          children = _this$props.children;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, __jsx(ReactModal, {\n        isOpen: isOpen,\n        toggle: this.toggle,\n        className: \"full-screen-modal modal__full-width\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"Modal-body full-screen-modal-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"modal-inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"modal-content\",\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }, children)))));\n    }\n  }]);\n\n  return FullModal;\n}(Component);\n\nexport { FullModal as default };","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/components/modal/FullModal.js"],"names":["React","Component","Modal","ReactModal","FullModal","props","state","toggle","bind","isOpen","children","style"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,KAAK,IAAIC,UAAlB,QAAoC,YAApC;;IAEqBC,S;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,+BAAd;AAHiB;AAIlB;;;;6BACQ;AAAA,UACCD,MADD,GACY,KAAKF,KADjB,CACCE,MADD;AAEP,UAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkCA,MAAM;AACzC;;;6BAEQ;AAAA,wBACsB,KAAKF,KAD3B;AAAA,UACCI,MADD,eACCA,MADD;AAAA,UACSC,QADT,eACSA,QADT;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD;AACE,QAAA,MAAM,EAAED,MADV;AAEE,QAAA,MAAM,EAAE,KAAKF,MAFf;AAGE,QAAA,SAAS,EAAE,qCAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWM,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyDD,QAAzD,CADF,CAFF,CALF,CADF,CADF;AAgBD;;;;EA7BoCT,S;;SAAlBG,S","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Modal as ReactModal } from \"reactstrap\";\n\nexport default class FullModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.toggle = this.toggle.bind(this);\n  }\n  toggle() {\n    const { toggle } = this.props;\n    if (typeof toggle === \"function\") toggle();\n  }\n\n  render() {\n    const { isOpen, children } = this.props;\n    return (\n      <div>\n        <ReactModal\n          isOpen={isOpen}\n          toggle={this.toggle}\n          className={\"full-screen-modal modal__full-width\"}\n        >\n          <div className=\"Modal-body full-screen-modal-body\">\n            \n            <div className=\"modal-inner\">\n              <div className=\"modal-content\" style={this.props.style}>{children}</div>\n            </div>\n          </div>\n        </ReactModal>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}