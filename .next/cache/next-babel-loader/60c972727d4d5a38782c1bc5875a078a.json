{"ast":null,"code":"var _jsxFileName = \"/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/components/popups/Registration.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport dynamic from 'next/dynamic';\nimport { Form, Icon } from 'antd';\nconst Heading = dynamic(() => import('../Heading'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../Heading')],\n    modules: ['../Heading']\n  }\n});\nconst Input = dynamic(() => import('../form-components/Input'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../form-components/Input')],\n    modules: ['../form-components/Input']\n  }\n});\nconst Checkbox = dynamic(() => import('../form-components/Checkbox'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../form-components/Checkbox')],\n    modules: ['../form-components/Checkbox']\n  }\n});\nimport { connect } from 'react-redux';\nimport Button from '../form-components/Button';\nimport { registerUser } from '../../services/api';\nimport { drawerToDisplay, toggleRegBar } from '../../redux/actions/drawers';\nimport { setUser } from '../../redux/actions/user';\nimport regex from '../../services/helpers/regex';\nimport reactComponentDebounce from 'react-component-debounce';\nimport { projectName } from '../../constants/projectSettings';\nconst DebounceInput = reactComponentDebounce({\n  valuePropName: 'value',\n  triggerMs: 1000\n})(Input);\n\nclass RegistrationForm extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          //     console.log(\"Received values of form: \", values);\n          const {\n            email,\n            password\n          } = values;\n          this.setState({\n            isLoading: true,\n            error: null\n          });\n          registerUser({\n            email,\n            password,\n            password2: password,\n            firstname: 'null',\n            lastname: 'null',\n            phonenumber: 'null'\n          }).then(res => {\n            this.setState({\n              isLoading: false\n            });\n            console.log({\n              res\n            });\n\n            if (res.status === 200) {\n              if (res.data.status) {\n                this.props.setUser(res.data.user);\n                this.props.toggleRegBar();\n              } else {\n                const {\n                  error\n                } = res.data;\n\n                if (error.endsWith('is already taken')) {\n                  this.setState({\n                    isAlreadyUser: true\n                  });\n                } else {\n                  this.setState({\n                    error: res.data.error\n                  });\n                }\n              }\n            } else {\n              this.setState({\n                error: 'something wrong'\n              });\n            }\n          }).catch(err => {\n            console.log({\n              err\n            });\n            this.setState({\n              isLoading: false,\n              error: 'something wrong'\n            });\n          });\n        }\n      });\n    });\n\n    this.state = {\n      isLoading: false,\n      error: null,\n      isAlreadyUser: false\n    };\n  }\n\n  render() {\n    const {\n      drawerToDisplay,\n      form: {\n        getFieldDecorator\n      }\n    } = this.props;\n    const {\n      isLoading,\n      error,\n      isAlreadyUser\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"c-registration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, __jsx(Heading, {\n      parentClass: \"c-registration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, isAlreadyUser ? __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"Looks like you already\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }), \"have an account\") : `Welcome to ${projectName}!`), !isAlreadyUser && __jsx(\"p\", {\n      className: \"c-registration__info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Fill in your details to create an account\"), !isAlreadyUser && __jsx(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"c-ant-from c-registration__form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, getFieldDecorator('email', {\n      rules: [{\n        max: 40,\n        message: \"You can't use more than 40 characters.\"\n      }, {\n        required: true,\n        message: 'Please input your e-mail!'\n      }, {\n        pattern: regex.email,\n        message: 'Please enter a valid E-mail.'\n      }]\n    })(__jsx(DebounceInput, {\n      style: {\n        padding: '0px',\n        fontSize: '16px',\n        fontFamily: 'futuraBT-book',\n        marginBottom: '20px'\n      },\n      versions: ['dark'],\n      parentClass: \"c-registration\",\n      label: \"E-mail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }))), __jsx(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }, {\n        max: 20,\n        message: \"You can't use more than 20 characters.\"\n      }, {\n        min: 6,\n        message: 'Minimum 6 characters is require.'\n      }]\n    })(__jsx(DebounceInput, {\n      style: {\n        padding: '0px',\n        fontSize: '16px',\n        fontFamily: 'futuraBT-book',\n        width: '80%'\n      },\n      type: \"password\",\n      parentClass: \"c-registration\",\n      versions: ['dark'],\n      label: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }))), __jsx(\"div\", {\n      className: \"c-registration__terms\",\n      style: {\n        paddingTop: '30px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }, getFieldDecorator('agree', {\n      valuePropName: 'checked',\n      initialValue: true,\n      rules: [{\n        required: true,\n        message: 'Please agree the terms and conditions.',\n        transform: value => value || undefined,\n        type: 'boolean'\n      }]\n    })(__jsx(Checkbox, {\n      style: {\n        marginBottom: 0\n      },\n      versions: ['dark'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }\n    }, \"I agree to\", __jsx(\"strong\", {\n      style: {\n        marginLeft: '4px',\n        marginRight: '4px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }, __jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 23\n      }\n    }, \"Terms and Conditions\")), \"and\", __jsx(\"strong\", {\n      style: {\n        marginLeft: '4px',\n        marginRight: '4px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, __jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 23\n      }\n    }, \"Privacy Policy\")))), __jsx(\"p\", {\n      style: {\n        marginTop: 0\n      },\n      className: \"c-registration__inst\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, \"Already have an account?\", ' ', __jsx(\"span\", {\n      onClick: () => {\n        drawerToDisplay('login');\n      },\n      className: \"c-registration__link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 19\n      }\n    }, \"SIGN IN\")))), __jsx(\"div\", {\n      className: \"c-registration__error-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, isLoading && __jsx(Icon, {\n      type: \"loading\",\n      className: \"c-registration__spinner c-spinner\",\n      style: {\n        fontSize: 24\n      },\n      spin: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }), error && __jsx(\"p\", {\n      className: \"c-registration__error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    }, error)), __jsx(\"div\", {\n      className: \"row mb-4\",\n      style: {\n        justifyContent: 'space-around'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      theme: \"dark\",\n      disabled: isLoading //versions={[\"block\"]}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 15\n      }\n    }, \"Register\"))), isAlreadyUser && __jsx(\"div\", {\n      className: \"c-registration__no-form-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }\n    }, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      className: \"c-registration__inst\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, \"You can login from\", ' ', __jsx(\"span\", {\n      onClick: () => {\n        drawerToDisplay('login');\n      },\n      className: \"c-registration__link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 15\n      }\n    }, \"HERE\"))));\n  }\n\n}\n\nconst Registration = Form.create({\n  name: 'registration'\n})(RegistrationForm);\nconst mapActionToProps = {\n  drawerToDisplay,\n  setUser,\n  toggleRegBar\n};\nexport default connect(state => state, mapActionToProps)(Registration);","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/components/popups/Registration.js"],"names":["dynamic","Form","Icon","Heading","Input","Checkbox","connect","Button","registerUser","drawerToDisplay","toggleRegBar","setUser","regex","reactComponentDebounce","projectName","DebounceInput","valuePropName","triggerMs","RegistrationForm","React","Component","constructor","e","preventDefault","props","form","validateFields","err","values","email","password","setState","isLoading","error","password2","firstname","lastname","phonenumber","then","res","console","log","status","data","user","endsWith","isAlreadyUser","catch","state","render","getFieldDecorator","handleSubmit","rules","max","message","required","pattern","padding","fontSize","fontFamily","marginBottom","min","width","paddingTop","initialValue","transform","value","undefined","type","marginLeft","marginRight","marginTop","justifyContent","Registration","create","name","mapActionToProps"],"mappings":"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","sourcesContent":["import dynamic from 'next/dynamic';\nimport { Form, Icon } from 'antd';\nconst Heading = dynamic(() => import('../Heading'));\nconst Input = dynamic(() => import('../form-components/Input'));\nconst Checkbox = dynamic(() => import('../form-components/Checkbox'));\nimport { connect } from 'react-redux';\nimport Button from '../form-components/Button';\nimport { registerUser } from '../../services/api';\nimport { drawerToDisplay, toggleRegBar } from '../../redux/actions/drawers';\nimport { setUser } from '../../redux/actions/user';\nimport regex from '../../services/helpers/regex';\nimport reactComponentDebounce from 'react-component-debounce';\nimport { projectName } from '../../constants/projectSettings';\n\nconst DebounceInput = reactComponentDebounce({\n  valuePropName: 'value',\n  triggerMs: 1000,\n})(Input);\n\nclass RegistrationForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false,\n      error: null,\n      isAlreadyUser: false,\n    };\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        //     console.log(\"Received values of form: \", values);\n        const { email, password } = values;\n        this.setState({\n          isLoading: true,\n          error: null,\n        });\n        registerUser({\n          email,\n          password,\n          password2: password,\n          firstname: 'null',\n          lastname: 'null',\n          phonenumber: 'null',\n        })\n          .then((res) => {\n            this.setState({\n              isLoading: false,\n            });\n            console.log({ res });\n            if (res.status === 200) {\n              if (res.data.status) {\n                this.props.setUser(res.data.user);\n                this.props.toggleRegBar();\n              } else {\n                const { error } = res.data;\n                if (error.endsWith('is already taken')) {\n                  this.setState({\n                    isAlreadyUser: true,\n                  });\n                } else {\n                  this.setState({\n                    error: res.data.error,\n                  });\n                }\n              }\n            } else {\n              this.setState({\n                error: 'something wrong',\n              });\n            }\n          })\n          .catch((err) => {\n            console.log({ err });\n            this.setState({\n              isLoading: false,\n              error: 'something wrong',\n            });\n          });\n      }\n    });\n  };\n  render() {\n    const {\n      drawerToDisplay,\n      form: { getFieldDecorator },\n    } = this.props;\n    const { isLoading, error, isAlreadyUser } = this.state;\n    return (\n      <div className=\"c-registration\">\n        <Heading parentClass=\"c-registration\">\n          {isAlreadyUser ? (\n            <span>\n              Looks like you already\n              <br />\n              have an account\n            </span>\n          ) : (\n            `Welcome to ${projectName}!`\n          )}\n        </Heading>\n        {!isAlreadyUser && (\n          <p className=\"c-registration__info\">\n            Fill in your details to create an account\n          </p>\n        )}\n\n        {!isAlreadyUser && (\n          <Form\n            onSubmit={this.handleSubmit}\n            className=\"c-ant-from c-registration__form\"\n          >\n            <Form.Item>\n              {getFieldDecorator('email', {\n                rules: [\n                  {\n                    max: 40,\n                    message: \"You can't use more than 40 characters.\",\n                  },\n                  { required: true, message: 'Please input your e-mail!' },\n\n                  {\n                    pattern: regex.email,\n                    message: 'Please enter a valid E-mail.',\n                  },\n                ],\n              })(\n                <DebounceInput\n                  style={{\n                    padding: '0px',\n                    fontSize: '16px',\n                    fontFamily: 'futuraBT-book',\n                    marginBottom: '20px',\n                  }}\n                  versions={['dark']}\n                  parentClass=\"c-registration\"\n                  label=\"E-mail\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator('password', {\n                rules: [\n                  { required: true, message: 'Please input your password!' },\n                  {\n                    max: 20,\n                    message: \"You can't use more than 20 characters.\",\n                  },\n                  {\n                    min: 6,\n                    message: 'Minimum 6 characters is require.',\n                  },\n                ],\n              })(\n                <DebounceInput\n                  style={{\n                    padding: '0px',\n                    fontSize: '16px',\n                    fontFamily: 'futuraBT-book',\n                    width: '80%',\n                  }}\n                  type=\"password\"\n                  parentClass=\"c-registration\"\n                  versions={['dark']}\n                  label=\"Password\"\n                />\n              )}\n            </Form.Item>\n\n            <div\n              className=\"c-registration__terms\"\n              style={{ paddingTop: '30px' }}\n            >\n              <Form.Item>\n                {getFieldDecorator('agree', {\n                  valuePropName: 'checked',\n                  initialValue: true,\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please agree the terms and conditions.',\n                      transform: (value) => value || undefined,\n                      type: 'boolean',\n                    },\n                  ],\n                })(\n                  <Checkbox style={{ marginBottom: 0 }} versions={['dark']}>\n                    I agree to\n                    <strong style={{ marginLeft: '4px', marginRight: '4px' }}>\n                      <i>Terms and Conditions</i>\n                    </strong>\n                    and\n                    <strong style={{ marginLeft: '4px', marginRight: '4px' }}>\n                      <i>Privacy Policy</i>\n                    </strong>\n                  </Checkbox>\n                )}\n                <p style={{ marginTop: 0 }} className=\"c-registration__inst\">\n                  Already have an account?{' '}\n                  <span\n                    onClick={() => {\n                      drawerToDisplay('login');\n                    }}\n                    className=\"c-registration__link\"\n                  >\n                    SIGN IN\n                  </span>\n                </p>\n              </Form.Item>\n            </div>\n            <div className=\"c-registration__error-block\">\n              {isLoading && (\n                <Icon\n                  type=\"loading\"\n                  className=\"c-registration__spinner c-spinner\"\n                  style={{ fontSize: 24 }}\n                  spin\n                />\n              )}\n              {error && <p className=\"c-registration__error\">{error}</p>}\n            </div>\n            <div\n              className=\"row mb-4\"\n              style={{ justifyContent: 'space-around' }}\n            >\n              <Button\n                theme=\"dark\"\n                disabled={isLoading}\n                //versions={[\"block\"]}\n              >\n                Register\n              </Button>\n            </div>\n          </Form>\n        )}\n        {isAlreadyUser && (\n          <div className=\"c-registration__no-form-wrapper\">\n            <br />\n            <br />\n            <br />\n            <br />\n            <p className=\"c-registration__inst\">\n              You can login from{' '}\n              <span\n                onClick={() => {\n                  drawerToDisplay('login');\n                }}\n                className=\"c-registration__link\"\n              >\n                HERE\n              </span>\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst Registration = Form.create({ name: 'registration' })(RegistrationForm);\nconst mapActionToProps = {\n  drawerToDisplay,\n  setUser,\n  toggleRegBar,\n};\nexport default connect((state) => state, mapActionToProps)(Registration);\n"]},"metadata":{},"sourceType":"module"}