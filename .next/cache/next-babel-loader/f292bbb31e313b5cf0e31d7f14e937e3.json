{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport ReactPhoneInput from \"react-phone-input-2\";\nimport classNames from \"classnames\";\n\nvar PhoneInput = /*#__PURE__*/function (_Component) {\n  _inherits(PhoneInput, _Component);\n\n  var _super = _createSuper(PhoneInput);\n\n  function PhoneInput(props) {\n    var _this;\n\n    _classCallCheck(this, PhoneInput);\n\n    _this = _super.call(this, props);\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isFocus: false\n    };\n    return _this;\n  }\n\n  _createClass(PhoneInput, [{\n    key: \"onFocus\",\n    value: function onFocus() {\n      this.setState({\n        isFocus: true\n      });\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this.setState({\n        isFocus: false\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      var onChange = this.props.onChange;\n      if (typeof onChange === \"function\") onChange(e);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          errorMsg = _this$props.errorMsg,\n          isError = _this$props.isError,\n          name = _this$props.name,\n          value = _this$props.value,\n          dataValidate = _this$props.dataValidate,\n          label = _this$props.label;\n      var isFocus = this.state.isFocus;\n      return __jsx(\"div\", {\n        className: classNames(\"col-12 pl-0 pr-0 has-input\", {\n          \"has-error\": isError && !isFocus\n        })\n      }, __jsx(\"label\", null, label), __jsx(ReactPhoneInput, {\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        id: name,\n        inputExtraProps: {\n          autocomplete: \"tel\"\n        },\n        name: \"phone\",\n        containerClass: \"react-tel-input react-phone \",\n        onChange: this.onChange,\n        value: value,\n        \"data-validate\": dataValidate,\n        \"pattern-type\": \"phone\",\n        inputClass: this.props.classToBe\n      }), isError && !isFocus && __jsx(\"p\", {\n        className: \"error\"\n      }, errorMsg));\n    }\n  }]);\n\n  return PhoneInput;\n}(Component);\n\nexport default PhoneInput;","map":null,"metadata":{},"sourceType":"module"}