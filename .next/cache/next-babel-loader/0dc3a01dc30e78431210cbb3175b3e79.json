{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport apiList from \"./apiList\";\nimport axios from \"axios\";\nexport const registerUser = body => axios.post(apiList.userRegistration, _objectSpread(_objectSpread({}, body), {}, {\n  email: body.email.toLowerCase(),\n  role: \"customer\"\n}));\nexport const loginUser = body => axios.post(apiList.userLogin, _objectSpread(_objectSpread({}, body), {}, {\n  email: body.email.toLowerCase()\n}));\nexport const getUserDetails = userId => axios.get(apiList.getUserDetails + userId);\nexport const updateUserDetails = body => axios.post(apiList.updateUserDetails, _objectSpread({}, body));\nexport const updateUserPassword = body => axios.post(apiList.updateUserPassword, _objectSpread({}, body));\nexport const getOrders = userId => axios.get(apiList.orderList + userId);\nexport const forgotPassword = body => axios.post(apiList.forgotPassword, _objectSpread(_objectSpread({}, body), {}, {\n  firststep: \"aa\"\n}));\nexport const setForgotPassword = body => axios.post(apiList.forgotPassword, _objectSpread({}, body));\nexport const addSubscriber = email => axios.post(apiList.addSubscriber, {\n  email\n});\nexport const getSubscribers = () => axios.get(apiList.getSubscribers);","map":null,"metadata":{},"sourceType":"module"}