{"ast":null,"code":"var _jsxFileName = \"/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/pages/admin/product/create.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport '../../../components/styles/app.scss';\nimport AdminLayout from '../../../components/admin/AdminLayout';\nimport { Input, Button, Checkbox, Tag, Select, Upload } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { createProduct, getAllCategories } from '../../../services/apis/admin.js';\nconst {\n  Option\n} = Select; //constants\n\nconst allSizes = ['32', '34', '36'];\nconst allColors = ['red', 'green', 'blue', 'gold', 'lime', 'cyan'];\nexport default function create(props) {\n  const {\n    editData\n  } = props;\n  const {\n    0: inputData,\n    1: setInputData\n  } = useState({\n    name: '',\n    shortDesc: '',\n    description: '',\n    category: '',\n    subCategories: [],\n    price: '',\n    sizes: [],\n    colors: [],\n    hidden: false,\n    images: [],\n    errors: ''\n  });\n  const {\n    0: categories,\n    1: setCategories\n  } = useState([]);\n  const {\n    0: subCategories,\n    1: setSubCategories\n  } = useState([]);\n  useEffect(() => {\n    if (editData) {\n      let newInputData = _objectSpread({}, inputData);\n\n      newInputData.sizes = editData.sizes;\n      setInputData(newInputData);\n    }\n  }, []);\n  useEffect(() => {\n    getAllCategories().then(res => res && res.data && setCategories(res.data.data));\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(inputData, 'input');\n    let formData = new FormData();\n    formData.append('name', inputData.name);\n    formData.append('shortDesc', inputData.shortDesc);\n    formData.append('description', inputData.description);\n    formData.append('category', inputData.category);\n    formData.append('price', inputData.price);\n    formData.append('hidden', inputData.hidden);\n    formData.append('sizes', JSON.stringify(inputData.sizes));\n    formData.append('colors', JSON.stringify(inputData.colors));\n    formData.append('subCategories', JSON.stringify(inputData.subCategories)); //for Images\n\n    const fileListAsArray = Array.from(inputData.images);\n\n    for (var i in fileListAsArray) {\n      console.log(fileListAsArray[i]);\n      formData.append('images', fileListAsArray[i]);\n    }\n\n    createProduct(formData).then(res => {\n      if (res.data && res.data.success) {\n        setInputData(_objectSpread(_objectSpread({}, inputData), {}, {\n          name: '',\n          // shortDesc: '',\n          // description: '',\n          // category: '',\n          // subCategories: [],\n          // price: '',\n          // sizes: [],\n          // colors: [],\n          // hidden: false,\n          images: [],\n          errors: ''\n        }));\n      }\n    });\n  };\n\n  const handleInputChange = selector => event => {\n    if (selector === 'hidden') {\n      setInputData(_objectSpread(_objectSpread({}, inputData), {}, {\n        hidden: event.target.checked\n      }));\n    } else if (selector === 'sizes' || selector === 'colors' || selector === 'subCategories') {\n      setInputData(_objectSpread(_objectSpread({}, inputData), {}, {\n        [selector]: event\n      }));\n    } else {\n      setInputData(_objectSpread(_objectSpread({}, inputData), {}, {\n        [selector]: event.target.value\n      }));\n    }\n  };\n\n  const handleCategoryChange = cate => {\n    setInputData(_objectSpread(_objectSpread({}, inputData), {}, {\n      category: cate._id,\n      subCategories: []\n    }));\n    setSubCategories(cate.subcategories);\n  };\n\n  const handleImagesChange = (file, fileList) => {\n    setInputData(_objectSpread(_objectSpread({}, inputData), {}, {\n      images: fileList\n    }));\n  };\n\n  const handleImagesRemove = file => {\n    const index = inputData.images.indexOf(file);\n    const newFileList = inputData.images.slice();\n    newFileList.splice(index, 1);\n    setInputData(_objectSpread(_objectSpread({}, inputData), {}, {\n      images: newFileList\n    }));\n  };\n\n  function tagRender(props) {\n    const {\n      label,\n      value,\n      closable,\n      onClose\n    } = props;\n    return __jsx(Tag, {\n      color: value,\n      closable: closable,\n      onClose: onClose,\n      style: {\n        marginRight: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, label);\n  }\n\n  return __jsx(AdminLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, categories && categories.length > 0 ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \" \", editData ? ' Edit ' : 'Enter ', \" Product Details\"), __jsx(\"div\", {\n    className: \"c-admin-create-product__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, __jsx(Select, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"Please select category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, categories.map((cate, index) => __jsx(Option, {\n    key: index,\n    value: cate._id,\n    name: cate.name,\n    onClick: () => handleCategoryChange(cate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, cate.name)))), __jsx(\"div\", {\n    className: \"c-admin-create-product__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, __jsx(Select // value={inputData.subCategories || []}\n  , {\n    onChange: handleInputChange('subCategories'),\n    mode: \"multiple\",\n    placeholder: \"Select subcategories\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, subCategories.map((subcategory, index) => __jsx(Option, {\n    key: index,\n    value: subcategory._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, subcategory.name)))), __jsx(\"div\", {\n    className: \"c-admin-create-product__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    id: \"name\",\n    placeholder: \"Enter Product Name\",\n    label: \"Product Name\",\n    name: \"name\",\n    required: true,\n    onChange: handleInputChange('name'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"c-admin-create-product__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, __jsx(Input.TextArea, {\n    id: \"short-desc-input\",\n    label: \"Short Description\",\n    name: \"shortDesc\",\n    required: true,\n    rows: 2,\n    onChange: handleInputChange('shortDesc'),\n    placeholder: \"write a short description about the product.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"c-admin-create-product__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, __jsx(Input.TextArea, {\n    label: \"Description\",\n    name: \"description\",\n    rows: 4,\n    onChange: handleInputChange('description'),\n    placeholder: \"write a full description about the product.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"c-admin-create-product__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    label: \"Price ( \\u20B9 )\",\n    name: \"price\",\n    placeholder: \"Please enter price\",\n    onChange: handleInputChange('price'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"c-admin-create-product__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, __jsx(Select, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"Please select Sizes\",\n    onChange: handleInputChange('sizes'),\n    mode: \"multiple\",\n    name: \"sizes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, allSizes.map((size, index) => __jsx(Option, {\n    key: index,\n    value: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, size)))), __jsx(\"div\", {\n    className: \"c-admin-create-product__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, __jsx(Select, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"Please select Colors\",\n    onChange: handleInputChange('colors'),\n    showArrow: true,\n    mode: \"multiple\",\n    name: \"colors\",\n    tagRender: tagRender,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, allColors.map((color, index) => __jsx(Option, {\n    key: index,\n    value: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, color)))), __jsx(\"div\", {\n    className: \"c-admin-create-product__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }, __jsx(Checkbox, {\n    checked: inputData.hidden,\n    onChange: handleInputChange('hidden'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, \"Is Hidden?\")), __jsx(Upload, {\n    name: \"images\",\n    accept: \".jpg, .jpeg, .png\",\n    multiple: true,\n    listType: \"picture\",\n    beforeUpload: handleImagesChange,\n    onRemove: handleImagesRemove,\n    fileList: inputData.images,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    icon: __jsx(UploadOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 27\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, \"Upload Images\")), __jsx(\"div\", {\n    className: \"c-admin-create-product__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, \"Create\"))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, \"Create a Category first\"));\n}","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/pages/admin/product/create.js"],"names":["React","useState","useEffect","AdminLayout","Input","Button","Checkbox","Tag","Select","Upload","UploadOutlined","createProduct","getAllCategories","Option","allSizes","allColors","create","props","editData","inputData","setInputData","name","shortDesc","description","category","subCategories","price","sizes","colors","hidden","images","errors","categories","setCategories","setSubCategories","newInputData","then","res","data","handleSubmit","e","preventDefault","console","log","formData","FormData","append","JSON","stringify","fileListAsArray","Array","from","i","success","handleInputChange","selector","event","target","checked","value","handleCategoryChange","cate","_id","subcategories","handleImagesChange","file","fileList","handleImagesRemove","index","indexOf","newFileList","slice","splice","tagRender","label","closable","onClose","marginRight","length","width","map","subcategory","size","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../../../components/styles/app.scss';\nimport AdminLayout from '../../../components/admin/AdminLayout';\n\nimport { Input, Button, Checkbox, Tag, Select, Upload } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\n\nimport {\n  createProduct,\n  getAllCategories,\n} from '../../../services/apis/admin.js';\n\nconst { Option } = Select;\n\n//constants\nconst allSizes = ['32', '34', '36'];\nconst allColors = ['red', 'green', 'blue', 'gold', 'lime', 'cyan'];\n\nexport default function create(props) {\n  const { editData } = props;\n\n  const [inputData, setInputData] = useState({\n    name: '',\n    shortDesc: '',\n    description: '',\n    category: '',\n    subCategories: [],\n    price: '',\n    sizes: [],\n    colors: [],\n    hidden: false,\n    images: [],\n    errors: '',\n  });\n  const [categories, setCategories] = useState([]);\n  const [subCategories, setSubCategories] = useState([]);\n\n  useEffect(() => {\n    if (editData) {\n      let newInputData = { ...inputData };\n      newInputData.sizes = editData.sizes;\n      setInputData(newInputData);\n    }\n  }, []);\n\n  useEffect(() => {\n    getAllCategories().then(\n      (res) => res && res.data && setCategories(res.data.data)\n    );\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(inputData, 'input');\n    let formData = new FormData();\n    formData.append('name', inputData.name);\n    formData.append('shortDesc', inputData.shortDesc);\n    formData.append('description', inputData.description);\n    formData.append('category', inputData.category);\n    formData.append('price', inputData.price);\n    formData.append('hidden', inputData.hidden);\n    formData.append('sizes', JSON.stringify(inputData.sizes));\n    formData.append('colors', JSON.stringify(inputData.colors));\n    formData.append('subCategories', JSON.stringify(inputData.subCategories));\n\n    //for Images\n    const fileListAsArray = Array.from(inputData.images);\n    for (var i in fileListAsArray) {\n      console.log(fileListAsArray[i]);\n      formData.append('images', fileListAsArray[i]);\n    }\n    createProduct(formData).then((res) => {\n      if (res.data && res.data.success) {\n        setInputData({\n          ...inputData,\n          name: '',\n          // shortDesc: '',\n          // description: '',\n          // category: '',\n          // subCategories: [],\n          // price: '',\n          // sizes: [],\n          // colors: [],\n          // hidden: false,\n          images: [],\n          errors: '',\n        });\n      }\n    });\n  };\n\n  const handleInputChange = (selector) => (event) => {\n    if (selector === 'hidden') {\n      setInputData({ ...inputData, hidden: event.target.checked });\n    } else if (\n      selector === 'sizes' ||\n      selector === 'colors' ||\n      selector === 'subCategories'\n    ) {\n      setInputData({ ...inputData, [selector]: event });\n    } else {\n      setInputData({ ...inputData, [selector]: event.target.value });\n    }\n  };\n\n  const handleCategoryChange = (cate) => {\n    setInputData({ ...inputData, category: cate._id, subCategories: [] });\n    setSubCategories(cate.subcategories);\n  };\n\n  const handleImagesChange = (file, fileList) => {\n    setInputData({\n      ...inputData,\n      images: fileList,\n    });\n  };\n  const handleImagesRemove = (file) => {\n    const index = inputData.images.indexOf(file);\n    const newFileList = inputData.images.slice();\n    newFileList.splice(index, 1);\n    setInputData({\n      ...inputData,\n      images: newFileList,\n    });\n  };\n\n  function tagRender(props) {\n    const { label, value, closable, onClose } = props;\n\n    return (\n      <Tag\n        color={value}\n        closable={closable}\n        onClose={onClose}\n        style={{ marginRight: 3 }}\n      >\n        {label}\n      </Tag>\n    );\n  }\n\n  return (\n    <AdminLayout>\n      {categories && categories.length > 0 ? (\n        <div>\n          <h3> {editData ? ' Edit ' : 'Enter '} Product Details</h3>\n          <div className=\"c-admin-create-product__item\">\n            <Select\n              style={{ width: '100%' }}\n              placeholder=\"Please select category\"\n            >\n              {categories.map((cate, index) => (\n                <Option\n                  key={index}\n                  value={cate._id}\n                  name={cate.name}\n                  onClick={() => handleCategoryChange(cate)}\n                >\n                  {cate.name}\n                </Option>\n              ))}\n            </Select>\n          </div>\n\n          <div className=\"c-admin-create-product__item\">\n            <Select\n              // value={inputData.subCategories || []}\n              onChange={handleInputChange('subCategories')}\n              mode=\"multiple\"\n              placeholder=\"Select subcategories\"\n              style={{ width: '100%' }}\n            >\n              {subCategories.map((subcategory, index) => (\n                <Option key={index} value={subcategory._id}>\n                  {subcategory.name}\n                </Option>\n              ))}\n            </Select>\n          </div>\n\n          <div className=\"c-admin-create-product__item\">\n            <Input\n              id=\"name\"\n              placeholder=\"Enter Product Name\"\n              label=\"Product Name\"\n              name=\"name\"\n              required\n              onChange={handleInputChange('name')}\n            />\n          </div>\n\n          <div className=\"c-admin-create-product__item\">\n            <Input.TextArea\n              id=\"short-desc-input\"\n              label=\"Short Description\"\n              name=\"shortDesc\"\n              required\n              rows={2}\n              onChange={handleInputChange('shortDesc')}\n              placeholder=\"write a short description about the product.\"\n            />\n          </div>\n\n          <div className=\"c-admin-create-product__item\">\n            <Input.TextArea\n              label=\"Description\"\n              name=\"description\"\n              rows={4}\n              onChange={handleInputChange('description')}\n              placeholder=\"write a full description about the product.\"\n            />\n          </div>\n\n          <div className=\"c-admin-create-product__item\">\n            <Input\n              label=\"Price ( ₹ )\"\n              name=\"price\"\n              placeholder=\"Please enter price\"\n              onChange={handleInputChange('price')}\n            />\n          </div>\n\n          <div className=\"c-admin-create-product__item\">\n            <Select\n              style={{ width: '100%' }}\n              placeholder=\"Please select Sizes\"\n              onChange={handleInputChange('sizes')}\n              mode=\"multiple\"\n              name=\"sizes\"\n            >\n              {allSizes.map((size, index) => (\n                <Option key={index} value={size}>\n                  {size}\n                </Option>\n              ))}\n            </Select>\n          </div>\n\n          {/* //colors */}\n          <div className=\"c-admin-create-product__item\">\n            <Select\n              style={{ width: '100%' }}\n              placeholder=\"Please select Colors\"\n              onChange={handleInputChange('colors')}\n              showArrow\n              mode=\"multiple\"\n              name=\"colors\"\n              tagRender={tagRender}\n            >\n              {allColors.map((color, index) => (\n                <Option key={index} value={color}>\n                  {color}\n                </Option>\n              ))}\n            </Select>\n          </div>\n          <div className=\"c-admin-create-product__item\">\n            <Checkbox\n              checked={inputData.hidden}\n              onChange={handleInputChange('hidden')}\n            >\n              Is Hidden?\n            </Checkbox>\n          </div>\n\n          <Upload\n            name=\"images\"\n            accept=\".jpg, .jpeg, .png\"\n            multiple\n            listType=\"picture\"\n            beforeUpload={handleImagesChange}\n            onRemove={handleImagesRemove}\n            fileList={inputData.images}\n          >\n            <Button icon={<UploadOutlined />}>Upload Images</Button>\n          </Upload>\n\n          <div className=\"c-admin-create-product__btn\">\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n              Create\n            </Button>\n          </div>\n        </div>\n      ) : (\n        <div>Create a Category first</div>\n      )}\n    </AdminLayout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}