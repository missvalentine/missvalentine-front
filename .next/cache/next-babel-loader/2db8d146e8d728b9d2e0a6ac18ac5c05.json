{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ChatMsgList from \"./ChatMsgList\";\nimport { getOrders } from \"../../services/api\";\nconst chatMsgList = new ChatMsgList();\nconst {\n  getWrongTextMsg,\n  msgAfterShopSelect,\n  msgAfterTrackSelect,\n  msgAfterTrackSelectNoOrder,\n  msgTrackNow\n} = chatMsgList;\n\nclass ChatUserOneRet extends Component {\n  constructor() {\n    super();\n    this.state = {\n      msg: \"...\"\n    };\n  }\n\n  componentDidMount() {\n    const {\n      steps,\n      triggerNextStep\n    } = this.props;\n    const msg = steps.userOne.message.toLocaleLowerCase();\n\n    if (msg.includes(\"place\")) {\n      this.setState({\n        msg: msgAfterShopSelect()\n      }, () => {\n        triggerNextStep({\n          value: \"\",\n          trigger: \"categoryList\"\n        });\n      });\n    } else if (msg.includes(\"track\")) {\n      const {\n        user\n      } = this.props;\n\n      if (user._id) {\n        if (user.userMetaId) {\n          getOrders(user.userMetaId).then(res => {\n            const resJson = res.data;\n\n            if (resJson.status) {\n              const orderList = resJson.orders.sort(function (a, b) {\n                return new Date(b.createdOn) - new Date(a.createdOn);\n              });\n\n              if (orderList.length > 0) {\n                this.setState({\n                  msg: msgAfterTrackSelect()\n                }, () => {\n                  triggerNextStep({\n                    value: \"\",\n                    trigger: \"trackNowLogin\"\n                  });\n                });\n              } else {\n                this.setState({\n                  msg: msgAfterTrackSelectNoOrder()\n                }, () => {\n                  triggerNextStep({\n                    value: \"\",\n                    trigger: \"firstOptions\"\n                  });\n                });\n              }\n            }\n          }).catch(err => {\n            this.setState({\n              msg: msgAfterTrackSelect()\n            }, () => {\n              triggerNextStep({\n                value: \"\",\n                trigger: \"trackNowLogin\"\n              });\n            });\n            console.log({\n              err\n            });\n          });\n        }\n      } else {\n        this.setState({\n          msg: msgTrackNow()\n        }, () => {\n          triggerNextStep({\n            value: \"\",\n            trigger: \"trackNow\"\n          });\n        });\n      }\n    } else {\n      this.setState({\n        msg: getWrongTextMsg()\n      }, () => {\n        triggerNextStep({\n          value: \"\",\n          trigger: \"shopSelected\"\n        });\n      });\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", null, this.state.msg);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(ChatUserOneRet);","map":null,"metadata":{},"sourceType":"module"}