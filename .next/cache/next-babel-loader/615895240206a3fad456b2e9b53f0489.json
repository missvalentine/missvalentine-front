{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { updateUserDetails, getUserDetails } from \"../../services/apis/user\";\nimport { SET_ADDRESS } from \"./type\";\nexport const setAddress = payload => ({\n  type: SET_ADDRESS,\n  payload\n});\nexport const getAddress = id => async dispatch => {\n  getUserDetails(id).then(res => {\n    console.log(res);\n\n    if (res.data.user) {\n      if (res.data.user.shippingdetails) {\n        dispatch(setAddress(res.data.user.shippingdetails));\n      } else {\n        dispatch(setAddress({}));\n      }\n    } else {\n      dispatch(setAddress({}));\n    }\n  }).catch(console.log);\n};\n\nconst returnAddress = res => {\n  if (res.user) {\n    if (res.user.shippingdetails) {\n      return res.user.shippingdetails;\n    }\n  }\n\n  return {};\n};\n\nexport const addAddress = (userid, address, oldDetail = {}, oldAddress = []) => dispatch => {\n  if (address.constructor === Array) {\n    const addressArr = address.filter(el => el);\n    const addresses1 = [...oldAddress, ...addressArr].map(elx => elx);\n    const hasDefault = addresses1.find(el => el.isDefault === true);\n    const addresses2 = addresses1.map((el, index) => {\n      if (index === 0 && !hasDefault) {\n        return _objectSpread(_objectSpread({}, el), {}, {\n          isDefault: true\n        });\n      }\n\n      return el;\n    });\n    updateUserDetails({\n      userid,\n      shippingdetails: _objectSpread(_objectSpread({}, oldDetail), {}, {\n        address: addresses2\n      })\n    }).then(res => {\n      console.log({\n        res\n      });\n      const address = returnAddress(res.data);\n      dispatch(setAddress(address));\n    }).catch(err => {\n      console.log({\n        err\n      });\n    });\n  } else {\n    const addresses1 = [...oldAddress, address].map(elx => {\n      return elx;\n    });\n    const hasDefault = addresses1.find(el => el.isDefault === true);\n    const addresses2 = addresses1.map((el, index) => {\n      if (index === 0 && !hasDefault) {\n        return _objectSpread(_objectSpread({}, el), {}, {\n          isDefault: true\n        });\n      }\n\n      return el;\n    });\n    updateUserDetails({\n      userid,\n      shippingdetails: _objectSpread(_objectSpread({}, oldDetail), {}, {\n        address: addresses2\n      })\n    }).then(res => {\n      console.log({\n        res\n      });\n      const address = returnAddress(res.data);\n      dispatch(setAddress(address));\n    }).catch(err => {\n      console.log({\n        err\n      });\n    });\n  }\n};\nexport const deleteAddress = (userid, id, oldDetail = {}, oldAddress = []) => dispatch => {\n  const newAddress1 = oldAddress.filter(el => el.id !== id);\n  const defaultAddress = newAddress1.find(el => el.isDefault === true);\n  const newAddress = newAddress1.map((el, index) => {\n    if (index === 0 && !defaultAddress) {\n      return _objectSpread(_objectSpread({}, el), {}, {\n        isDefault: true\n      });\n    }\n\n    return el;\n  });\n  updateUserDetails({\n    userid,\n    shippingdetails: _objectSpread(_objectSpread({}, oldDetail), {}, {\n      address: newAddress\n    })\n  }).then(res => {\n    console.log({\n      res\n    });\n    const address = returnAddress(res.data);\n    dispatch(setAddress(address));\n  }).catch(err => {\n    console.log({\n      err\n    });\n  });\n};\nexport const setDefaultAddress = (userid, id, oldDetail = {}, oldAddress = []) => dispatch => {\n  const newAddress = oldAddress.map(el => {\n    return _objectSpread(_objectSpread({}, el), {}, {\n      isDefault: el.id === id\n    });\n  });\n  updateUserDetails({\n    userid,\n    shippingdetails: _objectSpread(_objectSpread({}, oldDetail), {}, {\n      address: newAddress\n    })\n  }).then(res => {\n    console.log({\n      res\n    });\n    const address = returnAddress(res.data);\n    dispatch(setAddress(address));\n  }).catch(err => {\n    console.log({\n      err\n    });\n  });\n};\nexport const editAddress = (userid, address, oldDetail = {}, oldAddress = []) => dispatch => {\n  const newAddress = oldAddress.map(el => {\n    if (el.id === address.id) return address;\n    return el;\n  });\n  updateUserDetails({\n    userid,\n    shippingdetails: _objectSpread(_objectSpread({}, oldDetail), {}, {\n      address: newAddress\n    })\n  }).then(res => {\n    console.log({\n      res\n    });\n    const address = returnAddress(res.data);\n    dispatch(setAddress(address));\n  }).catch(err => {\n    console.log({\n      err\n    });\n  });\n};","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missnew front/redux/actions/address.js"],"names":["updateUserDetails","getUserDetails","SET_ADDRESS","setAddress","payload","type","getAddress","id","dispatch","then","res","console","log","data","user","shippingdetails","catch","returnAddress","addAddress","userid","address","oldDetail","oldAddress","constructor","Array","addressArr","filter","el","addresses1","map","elx","hasDefault","find","isDefault","addresses2","index","err","deleteAddress","newAddress1","defaultAddress","newAddress","setDefaultAddress","editAddress"],"mappings":"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","sourcesContent":["import { updateUserDetails, getUserDetails } from \"../../services/apis/user\";\n\nimport { SET_ADDRESS } from \"./type\";\n\nexport const setAddress = (payload) => ({\n  type: SET_ADDRESS,\n  payload,\n});\n\nexport const getAddress = (id) => async (dispatch) => {\n  getUserDetails(id)\n    .then((res) => {\n      console.log(res);\n      if (res.data.user) {\n        if (res.data.user.shippingdetails) {\n          dispatch(setAddress(res.data.user.shippingdetails));\n        } else {\n          dispatch(setAddress({}));\n        }\n      } else {\n        dispatch(setAddress({}));\n      }\n    })\n    .catch(console.log);\n};\nconst returnAddress = (res) => {\n  if (res.user) {\n    if (res.user.shippingdetails) {\n      return res.user.shippingdetails;\n    }\n  }\n  return {};\n};\nexport const addAddress = (\n  userid,\n  address,\n  oldDetail = {},\n  oldAddress = []\n) => (dispatch) => {\n  if (address.constructor === Array) {\n    const addressArr = address.filter((el) => el);\n    const addresses1 = [...oldAddress, ...addressArr].map((elx) => elx);\n    const hasDefault = addresses1.find((el) => el.isDefault === true);\n    const addresses2 = addresses1.map((el, index) => {\n      if (index === 0 && !hasDefault) {\n        return {\n          ...el,\n          isDefault: true,\n        };\n      }\n      return el;\n    });\n    updateUserDetails({\n      userid,\n      shippingdetails: {\n        ...oldDetail,\n        address: addresses2,\n      },\n    })\n      .then((res) => {\n        console.log({ res });\n        const address = returnAddress(res.data);\n        dispatch(setAddress(address));\n      })\n      .catch((err) => {\n        console.log({ err });\n      });\n  } else {\n    const addresses1 = [...oldAddress, address].map((elx) => {\n      return elx;\n    });\n    const hasDefault = addresses1.find((el) => el.isDefault === true);\n    const addresses2 = addresses1.map((el, index) => {\n      if (index === 0 && !hasDefault) {\n        return {\n          ...el,\n          isDefault: true,\n        };\n      }\n      return el;\n    });\n    updateUserDetails({\n      userid,\n      shippingdetails: {\n        ...oldDetail,\n        address: addresses2,\n      },\n    })\n      .then((res) => {\n        console.log({ res });\n        const address = returnAddress(res.data);\n        dispatch(setAddress(address));\n      })\n      .catch((err) => {\n        console.log({ err });\n      });\n  }\n};\nexport const deleteAddress = (userid, id, oldDetail = {}, oldAddress = []) => (\n  dispatch\n) => {\n  const newAddress1 = oldAddress.filter((el) => el.id !== id);\n  const defaultAddress = newAddress1.find((el) => el.isDefault === true);\n  const newAddress = newAddress1.map((el, index) => {\n    if (index === 0 && !defaultAddress) {\n      return {\n        ...el,\n        isDefault: true,\n      };\n    }\n    return el;\n  });\n  updateUserDetails({\n    userid,\n    shippingdetails: {\n      ...oldDetail,\n      address: newAddress,\n    },\n  })\n    .then((res) => {\n      console.log({ res });\n      const address = returnAddress(res.data);\n      dispatch(setAddress(address));\n    })\n    .catch((err) => {\n      console.log({ err });\n    });\n};\nexport const setDefaultAddress = (\n  userid,\n  id,\n  oldDetail = {},\n  oldAddress = []\n) => (dispatch) => {\n  const newAddress = oldAddress.map((el) => {\n    return {\n      ...el,\n      isDefault: el.id === id,\n    };\n  });\n\n  updateUserDetails({\n    userid,\n    shippingdetails: {\n      ...oldDetail,\n      address: newAddress,\n    },\n  })\n    .then((res) => {\n      console.log({ res });\n      const address = returnAddress(res.data);\n      dispatch(setAddress(address));\n    })\n    .catch((err) => {\n      console.log({ err });\n    });\n};\nexport const editAddress = (\n  userid,\n  address,\n  oldDetail = {},\n  oldAddress = []\n) => (dispatch) => {\n  const newAddress = oldAddress.map((el) => {\n    if (el.id === address.id) return address;\n\n    return el;\n  });\n  updateUserDetails({\n    userid,\n    shippingdetails: {\n      ...oldDetail,\n      address: newAddress,\n    },\n  })\n    .then((res) => {\n      console.log({ res });\n      const address = returnAddress(res.data);\n      dispatch(setAddress(address));\n    })\n    .catch((err) => {\n      console.log({ err });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}