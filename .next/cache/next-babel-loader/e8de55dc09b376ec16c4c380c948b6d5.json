{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SET_WISHLIST, UNSET_WISHLIST } from \"./type\";\n\nconst wishListParser = wishList => wishList.map(el => {\n  if (el.productDetails) {\n    const {\n      productDetails\n    } = el;\n\n    if (productDetails.combo) {\n      const {\n        comboid\n      } = productDetails; // const productSlug = encodeUrlFn(comboid.title);\n\n      return _objectSpread(_objectSpread({}, el), {}, {\n        productDetails: _objectSpread(_objectSpread({}, productDetails), {}, {\n          comboid: _objectSpread({}, comboid)\n        })\n      });\n    } else if (productDetails.productid) {\n      const {\n        productid\n      } = productDetails; // const productSlug = encodeUrlFn(productid.producttitle);\n\n      return _objectSpread(_objectSpread({}, el), {}, {\n        productDetails: _objectSpread(_objectSpread({}, productDetails), {}, {\n          productid: _objectSpread({}, productid)\n        })\n      });\n    } else {\n      return el;\n    }\n  }\n\n  return el;\n});\n\nexport const setWishList = wishList => dispatch => {\n  const newWishList = wishListParser(wishList);\n  dispatch({\n    type: SET_WISHLIST,\n    payload: newWishList\n  });\n};\nexport const unsetWishList = () => ({\n  type: UNSET_WISHLIST,\n  payload: {}\n});","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missnew front/redux/actions/wishList.js"],"names":["SET_WISHLIST","UNSET_WISHLIST","wishListParser","wishList","map","el","productDetails","combo","comboid","productid","setWishList","dispatch","newWishList","type","payload","unsetWishList"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,cAAvB,QAA6C,QAA7C;;AAEA,MAAMC,cAAc,GAAGC,QAAQ,IAC7BA,QAAQ,CAACC,GAAT,CAAaC,EAAE,IAAI;AACjB,MAAIA,EAAE,CAACC,cAAP,EAAuB;AACrB,UAAM;AAAEA,MAAAA;AAAF,QAAqBD,EAA3B;;AACA,QAAIC,cAAc,CAACC,KAAnB,EAA0B;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAcF,cAApB,CADwB,CAExB;;AACA,6CACKD,EADL;AAEEC,QAAAA,cAAc,kCACTA,cADS;AAEZE,UAAAA,OAAO,oBACFA,OADE;AAFK;AAFhB;AAUD,KAbD,MAaO,IAAIF,cAAc,CAACG,SAAnB,EAA8B;AACnC,YAAM;AAAEA,QAAAA;AAAF,UAAgBH,cAAtB,CADmC,CAEnC;;AACA,6CACKD,EADL;AAEEC,QAAAA,cAAc,kCACTA,cADS;AAEZG,UAAAA,SAAS,oBACJA,SADI;AAFG;AAFhB;AAUD,KAbM,MAaA;AACL,aAAOJ,EAAP;AACD;AACF;;AACD,SAAOA,EAAP;AACD,CAlCD,CADF;;AAqCA,OAAO,MAAMK,WAAW,GAAGP,QAAQ,IAAIQ,QAAQ,IAAI;AACjD,QAAMC,WAAW,GAAGV,cAAc,CAACC,QAAD,CAAlC;AACAQ,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAEb,YADC;AAEPc,IAAAA,OAAO,EAAEF;AAFF,GAAD,CAAR;AAID,CANM;AAOP,OAAO,MAAMG,aAAa,GAAG,OAAO;AAClCF,EAAAA,IAAI,EAAEZ,cAD4B;AAElCa,EAAAA,OAAO,EAAE;AAFyB,CAAP,CAAtB","sourcesContent":["import { SET_WISHLIST, UNSET_WISHLIST } from \"./type\";\n\nconst wishListParser = wishList =>\n  wishList.map(el => {\n    if (el.productDetails) {\n      const { productDetails } = el;\n      if (productDetails.combo) {\n        const { comboid } = productDetails;\n        // const productSlug = encodeUrlFn(comboid.title);\n        return {\n          ...el,\n          productDetails: {\n            ...productDetails,\n            comboid: {\n              ...comboid,\n            //   productSlug\n            }\n          }\n        };\n      } else if (productDetails.productid) {\n        const { productid } = productDetails;\n        // const productSlug = encodeUrlFn(productid.producttitle);\n        return {\n          ...el,\n          productDetails: {\n            ...productDetails,\n            productid: {\n              ...productid,\n            //   productSlug\n            }\n          }\n        };\n      } else {\n        return el;\n      }\n    }\n    return el;\n  });\n\nexport const setWishList = wishList => dispatch => {\n  const newWishList = wishListParser(wishList);\n  dispatch({\n    type: SET_WISHLIST,\n    payload: newWishList\n  });\n};\nexport const unsetWishList = () => ({\n  type: UNSET_WISHLIST,\n  payload: {}\n});\n"]},"metadata":{},"sourceType":"module"}