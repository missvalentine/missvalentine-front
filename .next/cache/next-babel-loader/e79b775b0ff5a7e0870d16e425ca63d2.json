{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_CONTINENT, SET_COUNTRY, SET_LOCATION } from \"../actions/type\";\nvar initialState = {\n  country: null,\n  countryCode: null,\n  continent: null\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var payload = action.payload,\n      type = action.type;\n\n  switch (type) {\n    case SET_CONTINENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        continent: payload\n      });\n\n    case SET_COUNTRY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        country: payload\n      });\n\n    case SET_LOCATION:\n      return _objectSpread(_objectSpread({}, state), payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/redux/reducers/location.js"],"names":["SET_CONTINENT","SET_COUNTRY","SET_LOCATION","initialState","country","countryCode","continent","state","action","payload","type"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,YAArC,QAAyD,iBAAzD;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,WAAW,EAAE,IAFM;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;AAMA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;AAAA,MACvCC,OADuC,GACrBD,MADqB,CACvCC,OADuC;AAAA,MAC9BC,IAD8B,GACrBF,MADqB,CAC9BE,IAD8B;;AAG/C,UAAQA,IAAR;AACE,SAAKV,aAAL;AACE,6CACKO,KADL;AAEED,QAAAA,SAAS,EAAEG;AAFb;;AAKF,SAAKR,WAAL;AACE,6CACKM,KADL;AAEEH,QAAAA,OAAO,EAAEK;AAFX;;AAKF,SAAKP,YAAL;AACE,6CACKK,KADL,GAEKE,OAFL;;AAKF;AACE,aAAOF,KAAP;AApBJ;AAsBD,CAzBD","sourcesContent":["import { SET_CONTINENT, SET_COUNTRY, SET_LOCATION } from \"../actions/type\";\n\nconst initialState = {\n  country: null,\n  countryCode: null,\n  continent: null\n};\n\nexport default (state = initialState, action) => {\n  const { payload, type } = action;\n\n  switch (type) {\n    case SET_CONTINENT:\n      return {\n        ...state,\n        continent: payload\n      };\n\n    case SET_COUNTRY:\n      return {\n        ...state,\n        country: payload\n      };\n\n    case SET_LOCATION:\n      return {\n        ...state,\n        ...payload\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}