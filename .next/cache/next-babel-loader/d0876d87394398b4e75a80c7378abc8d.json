{"ast":null,"code":"var _jsxFileName = \"/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/components/chatBot/ChatProductList.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { getProductsByCategory } from \"../../services/extra/productHelpers\";\nimport { getVisibleProducts } from \"../../services/helpers/product\";\nimport { getAllProducts } from '../../services/api';\n\nclass ChatProductList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"triggerNext\", e => {\n      this.setState({\n        trigger: true\n      }, () => {\n        this.props.triggerNextStep(e);\n      });\n    });\n\n    this.state = {\n      products: getProductsByCategory(props.products, props.steps.categoryList.value),\n      isLoading: true,\n      selected: null\n    };\n  }\n\n  componentDidMount() {\n    getAllProducts().then(res => {\n      const products = getProductsByCategory(res.data.products || [], this.props.steps.categoryList.value);\n      this.setState({\n        products: getVisibleProducts(products),\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      selected,\n      isLoading,\n      products\n    } = this.state;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, isLoading && \"...\", !isLoading && products.map((el, index) => {\n      const productTitle = el.title ? el.title : el.productid && el.productid.producttitle;\n      return __jsx(\"p\", {\n        onClick: () => {\n          if (!selected) {\n            this.setState({\n              selected: productTitle,\n              products: [el]\n            }, () => {\n              this.triggerNext({\n                value: _objectSpread(_objectSpread({}, el), {}, {\n                  productTitle\n                })\n              });\n            });\n          }\n        },\n        className: classNames(\"chat-custom-option w-100\", {\n          selected: selected === productTitle\n        }),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }, productTitle);\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  products: state.products.products\n});\n\nexport default connect(mapStateToProps)(ChatProductList);","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/components/chatBot/ChatProductList.js"],"names":["React","Component","classNames","connect","getProductsByCategory","getVisibleProducts","getAllProducts","ChatProductList","constructor","props","e","setState","trigger","triggerNextStep","state","products","steps","categoryList","value","isLoading","selected","componentDidMount","then","res","data","render","map","el","index","productTitle","title","productid","producttitle","triggerNext","mapStateToProps"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,qCAAtC;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,SAAQC,cAAR,QAA6B,oBAA7B;;AAEA,MAAMC,eAAN,SAA8BN,SAA9B,CAAwC;AACtCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,yCAqBLC,CAAC,IAAI;AACjB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd,EAAiC,MAAM;AACrC,aAAKH,KAAL,CAAWI,eAAX,CAA2BH,CAA3B;AACD,OAFD;AAGD,KAzBkB;;AAEjB,SAAKI,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEX,qBAAqB,CAC7BK,KAAK,CAACM,QADuB,EAE7BN,KAAK,CAACO,KAAN,CAAYC,YAAZ,CAAyBC,KAFI,CADpB;AAKXC,MAAAA,SAAS,EAAE,IALA;AAMXC,MAAAA,QAAQ,EAAE;AANC,KAAb;AAQD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBf,IAAAA,cAAc,GAAGgB,IAAjB,CAAsBC,GAAG,IAAI;AAC3B,YAAMR,QAAQ,GAAGX,qBAAqB,CAAEmB,GAAG,CAACC,IAAJ,CAAST,QAAT,IAAqB,EAAvB,EAA4B,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,YAAjB,CAA8BC,KAA1D,CAAtC;AACA,WAAKP,QAAL,CAAc;AACZI,QAAAA,QAAQ,EAAEV,kBAAkB,CAACU,QAAD,CADhB;AAEZI,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KAND;AAOD;;AAMDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA,QAAF;AAAYD,MAAAA,SAAZ;AAAuBJ,MAAAA;AAAvB,QAAoC,KAAKD,KAA/C;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,SAAS,IAAI,KADhB,EAEG,CAACA,SAAD,IACCJ,QAAQ,CAACW,GAAT,CAAa,CAACC,EAAD,EAAKC,KAAL,KAAe;AAC1B,YAAMC,YAAY,GAAGF,EAAE,CAACG,KAAH,GACjBH,EAAE,CAACG,KADc,GAEjBH,EAAE,CAACI,SAAH,IAAgBJ,EAAE,CAACI,SAAH,CAAaC,YAFjC;AAGA,aACE;AACE,QAAA,OAAO,EAAE,MAAM;AACb,cAAI,CAACZ,QAAL,EAAe;AACb,iBAAKT,QAAL,CACE;AACES,cAAAA,QAAQ,EAAES,YADZ;AAEEd,cAAAA,QAAQ,EAAE,CAACY,EAAD;AAFZ,aADF,EAKE,MAAM;AACJ,mBAAKM,WAAL,CAAiB;AACff,gBAAAA,KAAK,kCACAS,EADA;AAEHE,kBAAAA;AAFG;AADU,eAAjB;AAMD,aAZH;AAcD;AACF,SAlBH;AAmBE,QAAA,SAAS,EAAE3B,UAAU,CAAC,0BAAD,EAA6B;AAChDkB,UAAAA,QAAQ,EAAEA,QAAQ,KAAKS;AADyB,SAA7B,CAnBvB;AAsBE,QAAA,GAAG,EAAED,KAtBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAwBGC,YAxBH,CADF;AA4BD,KAhCD,CAHJ,CADF;AAuCD;;AApEqC;;AAuExC,MAAMK,eAAe,GAAGpB,KAAK,KAAK;AAChCC,EAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,CAAeA;AADO,CAAL,CAA7B;;AAIA,eAAeZ,OAAO,CAAC+B,eAAD,CAAP,CAAyB3B,eAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { getProductsByCategory } from \"../../services/extra/productHelpers\";\nimport { getVisibleProducts } from \"../../services/helpers/product\";\nimport {getAllProducts} from '../../services/api'\n\nclass ChatProductList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: getProductsByCategory(\n        props.products,\n        props.steps.categoryList.value\n      ),\n      isLoading: true,\n      selected: null\n    };\n  }\n\n  componentDidMount() {\n    getAllProducts().then(res => {\n      const products = getProductsByCategory((res.data.products || []), this.props.steps.categoryList.value)\n      this.setState({\n        products: getVisibleProducts(products),\n        isLoading: false\n      })\n    })\n  }\n  triggerNext = e => {\n    this.setState({ trigger: true }, () => {\n      this.props.triggerNextStep(e);\n    });\n  };\n  render() {\n    const { selected, isLoading, products } = this.state;\n    return (\n      <div>\n        {isLoading && \"...\"}\n        {!isLoading &&\n          products.map((el, index) => {\n            const productTitle = el.title\n              ? el.title\n              : el.productid && el.productid.producttitle;\n            return (\n              <p\n                onClick={() => {\n                  if (!selected) {\n                    this.setState(\n                      {\n                        selected: productTitle,\n                        products: [el]\n                      },\n                      () => {\n                        this.triggerNext({\n                          value: {\n                            ...el,\n                            productTitle\n                          }\n                        });\n                      }\n                    );\n                  }\n                }}\n                className={classNames(\"chat-custom-option w-100\", {\n                  selected: selected === productTitle\n                })}\n                key={index}\n              >\n                {productTitle}\n              </p>\n            );\n          })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  products: state.products.products\n});\n\nexport default connect(mapStateToProps)(ChatProductList);\n"]},"metadata":{},"sourceType":"module"}