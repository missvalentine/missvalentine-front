{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport classNames from \"classnames\";\n\nvar Checkbox = /*#__PURE__*/function (_React$Component) {\n  _inherits(Checkbox, _React$Component);\n\n  var _super = _createSuper(Checkbox);\n\n  function Checkbox() {\n    _classCallCheck(this, Checkbox);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$props = this.props,\n          checked = _this$props.checked,\n          onChange = _this$props.onChange,\n          parentClass = _this$props.parentClass,\n          versions = _this$props.versions,\n          children = _this$props.children,\n          inputId = _this$props.inputId,\n          label = _this$props.label;\n      var componentClass = \"c-checkbox\";\n      var versionClass = versions.map(function (el) {\n        return \"\".concat(componentClass, \"--\").concat(el);\n      }).join(\" \");\n      var parent = \"\".concat(parentClass, \"__\").concat(componentClass.replace(\"c-\", \"\"));\n      var className = classNames(componentClass, (_classNames = {}, _defineProperty(_classNames, versionClass, versions), _defineProperty(_classNames, parent, parentClass), _classNames));\n      return __jsx(\"div\", {\n        className: className\n      }, __jsx(\"label\", {\n        className: \"c-checkbox__label\"\n      }, __jsx(\"input\", {\n        onChange: onChange,\n        checked: checked,\n        type: \"checkbox\",\n        className: \"c-checkbox__input\"\n      }), versions == \"dark\" && __jsx(\"span\", {\n        className: \"ant-checkbox-inner\"\n      }), versions == \"light\" && __jsx(\"span\", {\n        style: {\n          borderRadius: 0\n        },\n        className: \"ant-checkbox-inner\"\n      }), __jsx(\"span\", {\n        className: \"c-checkbox__label-text\"\n      }, label, children)));\n    }\n  }]);\n\n  return Checkbox;\n}(React.Component);\n\nCheckbox.defaultProps = {\n  // inputId: `${parseInt(Math.random() * new Date().getTime())}`,\n  versions: []\n};\nexport default Checkbox;","map":null,"metadata":{},"sourceType":"module"}