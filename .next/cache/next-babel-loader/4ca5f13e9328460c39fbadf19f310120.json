{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport dynamic from 'next/dynamic';\nimport '../../components/styles/app.scss';\nconst Layout = dynamic(() => import('../../components/Layouts/Layout'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/Layouts/Layout')],\n    modules: ['../../components/Layouts/Layout']\n  }\n});\nconst ProductInfo = dynamic(() => import('../../components/ProductInfo'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/ProductInfo')],\n    modules: ['../../components/ProductInfo']\n  }\n});\nconst HImgSection = dynamic(() => import('../../components/HImgSection'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/HImgSection')],\n    modules: ['../../components/HImgSection']\n  }\n});\nimport { useEffect, useState } from 'react';\nimport { getProductImage, getProductAttributes, getVisibleProducts, getProductDescription } from '../../services/helpers/product';\nconst Heading = dynamic(() => import('../../components/Heading'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/Heading')],\n    modules: ['../../components/Heading']\n  }\n});\nconst TitleList = dynamic(() => import('../../components/TItleList'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/TItleList')],\n    modules: ['../../components/TItleList']\n  }\n});\nconst ProductDetailsTab = dynamic(() => import('../../components/ProductDetailsTab'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/ProductDetailsTab')],\n    modules: ['../../components/ProductDetailsTab']\n  }\n});\nconst ProductSlider = dynamic(() => import('../../components/ProductSlider'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/ProductSlider')],\n    modules: ['../../components/ProductSlider']\n  }\n});\nimport { useSelector, useDispatch } from 'react-redux';\nimport ProductDetail from '../../components/ProductDetail';\nimport { useRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport fetch from 'isomorphic-unfetch';\nimport projectSettings from '../../constants/projectSettings';\nimport apiList from '../../services/apis/apiList';\nimport Error from 'next/error';\nconst product = {\n  title: 'CBD Isolate 500 mg'\n};\nimport { getProduct } from '../../redux/actions';\n\nconst Product = () => {\n  const {\n    0: isScrolled,\n    1: setIsScrolled\n  } = useState(false);\n  useEffect(() => {\n    setIsScrolled(true);\n    document.body.scrollTop = document.documentElement.scrollTop = 0;\n  }, isScrolled);\n  const router = useRouter();\n  const {\n    pid\n  } = router.query;\n  const dispatch = useDispatch();\n  const products = useSelector(state => state.products);\n  useEffect(() => {\n    console.log('pid', pid);\n    dispatch(getProduct(pid));\n  }, []);\n  useEffect(() => {\n    if (products.product !== null) dispatch({\n      type: 'ADD_TO_RECENTLY_VIEWD',\n      payload: products.product\n    });\n  }, [products.product]);\n  return __jsx(Layout, {\n    headerTheme: \"black\",\n    fixed: true\n  }, __jsx(ProductDetail, {\n    data: products.product\n  }), products.products !== [] && __jsx(\"div\", {\n    className: \"c-product-single__related-section\"\n  }, __jsx(\"div\", {\n    className: \"row justify-content-center\",\n    style: {\n      maxWidth: '100%'\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6\"\n  }, __jsx(Heading, {\n    style: {\n      textAlign: 'center'\n    },\n    versions: ['default', 'upper', 'weight-500']\n  }, \"YOU MAY ALSO LIKE\")), __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(ProductSlider, {\n    parentClass: \"c-product-single\",\n    products: products.products\n  })))), products.recentlyViewed !== [] && __jsx(\"div\", {\n    className: \"c-product-single__related-section\"\n  }, __jsx(\"div\", {\n    className: \"row justify-content-center\",\n    style: {\n      maxWidth: '100%'\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6\"\n  }, __jsx(Heading, {\n    style: {\n      textAlign: 'center'\n    },\n    versions: ['default', 'upper', 'weight-500']\n  }, \"RECENTLY VIEWED\")), __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(ProductSlider, {\n    parentClass: \"c-product-single\",\n    products: products.recentlyViewed\n  })))));\n}; // Product.getInitialProps = async ({ query, res: resMain }) => {\n// let product = null;\n// const res = await fetch(apiList.getProductByName + query.pid);\n// // const res           = await fetch(apiList.getProductById+query.pid)\n// const productObj = await res.json();\n// if (!productObj.product_details) {\n//   const res = await fetch(apiList.getProductById + query.pid);\n//   const productObj = await res.json();\n//   product = getVisibleProducts([productObj.product_details]);\n// } else {\n//   product = getVisibleProducts([productObj.product_details]);\n// }\n// const reviewRes = await fetch(\n//   apiList.getReviews + productObj.product_details._id\n// );\n// const reviews = await reviewRes.json();\n// const allRes = await fetch(apiList.getAllProducts);\n// const allProductObj = await allRes.json();\n// const allProducts = getVisibleProducts(allProductObj.products).filter(\n//   (el) => el._id !== query.pid\n// );\n// if (product.length && product[0] && productObj.status) {\n//   return {\n//     res,\n//     product: product.length && product[0],\n//     productObj,\n//     allProducts,\n//     allProductObj,\n//     reviews: reviews.reviews,\n//   };\n// }\n// resMain.statusCode = 404;\n// return {\n//   err: {\n//     statusCode: 404,\n//   },\n// };\n// };\n\n\nexport default Product; // export default connect((state) => ({\n//   cart: state.cart,\n//   user: state.user,\n// }))(Product);","map":null,"metadata":{},"sourceType":"module"}