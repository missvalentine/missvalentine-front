{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { addSlugToProduct } from \"./productHelpers\";\nexport const getItemTotal = item => {\n  if (item) {\n    if (item.saleprice) return parseFloat(item.saleprice) * parseFloat(item.qty.value);else if (item.regularprice) return parseFloat(item.regularprice) * parseFloat(item.qty.value);\n  }\n\n  return 0;\n};\nexport const returnSubTotal = items => {\n  // amount =\n  return items.map(el => {\n    if (el) {\n      if (el.saleprice) {\n        if (el.subscribed) {\n          const totalPrice = parseFloat(el.saleprice) * parseFloat(el.qty.value);\n          const disc = totalPrice * el.subscribedDiscountPersent / 100;\n          return parseFloat(totalPrice) - parseFloat(disc);\n        } else {\n          return parseFloat(el.saleprice) * parseFloat(el.qty.value);\n        }\n      } else if (el.regularprice) if (el.subscribed) {\n        const totalPrice = parseFloat(el.regularprice) * parseFloat(el.qty.value);\n        const disc = totalPrice * el.subscribedDiscountPersent / 100;\n        return parseFloat(totalPrice) - parseFloat(disc);\n      } else {\n        return parseFloat(el.regularprice) * parseFloat(el.qty.value);\n      }\n    }\n\n    return 0;\n  }).reduce((a, b) => a + b, 0);\n};\nexport const returnUnSubscribeTotal = items => {\n  return items.filter(el => !el.subscribed).map(el => {\n    if (el) {\n      if (el.saleprice) return parseFloat(el.saleprice) * parseFloat(el.qty.value);else if (el.regularprice) return parseFloat(el.regularprice) * parseFloat(el.qty.value);\n    }\n\n    return 0;\n  }).reduce((a, b) => a + b, 0);\n};\nexport const getTotalWeight = items => {\n  return items.filter(el => el.weight).map(el => el.weight * parseFloat(el.qty.value)).reduce((a, b) => a + b, 0);\n};\nexport const getTotalVolume = items => {\n  // return items\n  //   .filter(el => el.shipping_height && el.shipping_length && el.shipping_width)\n  //   .map(el => el.shipping_height * el.shipping_length * el.shipping_width)\n  //   .reduce((a, b) => a + b, 0);\n  return items.filter(el => el.volume).map(el => el.volume * parseFloat(el.qty.value)).reduce((a, b) => a + b, 0);\n};\nexport const getTotalVariation = item => {\n  if (!item.attributes) return [];\n  return item.attributes.map(el => el ? el.names : null).filter(el => el);\n};\nexport const variablePriceSet = productItem => {\n  if (productItem) {\n    let tempVariable = _objectSpread({}, productItem);\n\n    if (productItem.producttype === \"variable\") {\n      // if (productItem.size && productItem.extract_flavor) {\n      const notNullVariation = productItem.variation.filter(el => el !== null);\n      productItem.attributes.filter(el => el !== null).map(el => el.names);\n      const varCheck = productItem.attributes.filter(el => el !== null).map(attr => {\n        return {\n          key: attr.names,\n          value: productItem[attr.names] ? productItem[attr.names].value : productItem[attr.names]\n        };\n      });\n      let matchedVariable = null;\n\n      if (!varCheck.some(vEl => vEl.value === null || vEl.value === undefined)) {\n        matchedVariable = notNullVariation.find(varEl => {\n          let matchArr = [];\n          varCheck.map(vEl => {\n            matchArr.push(varEl[vEl.key] === vEl.value);\n            return null;\n          });\n          return !matchArr.includes(false);\n        });\n\n        if (matchedVariable) {\n          tempVariable = _objectSpread(_objectSpread({}, productItem), {}, {\n            regularprice: matchedVariable.regular_price,\n            saleprice: matchedVariable.sale_price\n          });\n        } else {\n          tempVariable = _objectSpread(_objectSpread({}, productItem), {}, {\n            regularprice: productItem.dregularprice,\n            saleprice: productItem.dsaleprice\n          });\n        }\n      }\n    } else {\n      if (productItem.producttype === \"simple\" || productItem.combo) {\n        tempVariable = _objectSpread(_objectSpread({}, productItem), {}, {\n          regularprice: productItem.dregularprice,\n          saleprice: productItem.dsaleprice\n        });\n      }\n    }\n\n    return tempVariable;\n  }\n};\nexport const changeCartItemVariation = (varValue, names, item, indexingNo, list) => {\n  if (names === \"qty\") {\n    return {\n      approve: false,\n      update: {\n        oldItem: item,\n        newItem: _objectSpread(_objectSpread({}, item), {}, {\n          [names]: varValue\n        }),\n        remove: null\n      }\n    };\n  } else {\n    const totalVariation = getTotalVariation(item);\n    const foundItem = list.find((el, index) => {\n      const innerFlag = totalVariation.map(varEl => {\n        if (el[varEl]) {\n          if (varEl === names) {\n            return el[varEl].value === varValue.value;\n          }\n\n          return el[varEl].value === item[varEl].value;\n        } else {\n          return null;\n        }\n      }).filter(el => el !== null);\n      return el.productid._id === item.productid._id && innerFlag.every(el => el) && index !== indexingNo;\n    });\n\n    if (foundItem !== undefined && foundItem !== null) {\n      const totalQty = parseInt(foundItem.qty.value) + parseInt(item.qty.value);\n      const qty = {\n        label: totalQty.toString(),\n        value: totalQty.toString()\n      };\n\n      if (item.subscribed || foundItem.subscribed) {\n        return {\n          approve: true,\n          update: {\n            oldItem: foundItem,\n            newItem: _objectSpread(_objectSpread({}, foundItem), {}, {\n              [names]: varValue,\n              qty,\n              subscribed: true,\n              subscribedDiscountPersent: item.subscribedDiscountPersent,\n              subscribedTime: item.subscribedTime\n            }),\n            remove: item\n          }\n        };\n      } else {\n        return {\n          approve: false,\n          update: {\n            oldItem: foundItem,\n            newItem: _objectSpread(_objectSpread({}, foundItem), {}, {\n              [names]: varValue,\n              qty\n            }),\n            remove: item\n          }\n        };\n      }\n    } else {\n      return {\n        approve: false,\n        update: {\n          oldItem: item,\n          newItem: _objectSpread(_objectSpread({}, item), {}, {\n            [names]: varValue\n          }),\n          remove: null\n        }\n      };\n    }\n  }\n};\nexport const verifyProduct = (productItem, items = []) => {\n  const totalVariation = getTotalVariation(productItem);\n  const foundItem = items.find(el => {\n    const innerFlag = totalVariation.map(varEl => {\n      if (el[varEl]) {\n        return el[varEl].value === productItem[varEl].value;\n      } else {\n        return null;\n      }\n    }).filter(el => el !== null).every(el => el);\n    if (!innerFlag) return innerFlag;\n    if (el.combo && productItem.combo) return el._id === productItem._id;\n    if (el.combo) return el._id === productItem.productid._id;\n    if (productItem.combo) return el.productid._id === productItem._id;\n    return el.productid._id === productItem.productid._id;\n  });\n\n  if (foundItem !== undefined && foundItem !== null) {\n    const totalQty = parseInt(foundItem.qty.value) + parseInt(productItem.qty.value);\n    const qty = {\n      label: totalQty,\n      value: totalQty\n    };\n\n    const tempNewItem = _objectSpread(_objectSpread({}, foundItem), {}, {\n      subscribed: productItem.subscribed\n    });\n\n    if (productItem.subscribed) {\n      const {\n        subscribed,\n        subscribedDiscountPersent,\n        subscribedTime\n      } = productItem;\n      return {\n        found: foundItem,\n        item: _objectSpread(_objectSpread({}, foundItem), {}, {\n          qty: qty,\n          subscribed,\n          subscribedDiscountPersent,\n          subscribedTime\n        })\n      };\n    } else if (foundItem.subscribed) {\n      const {\n        subscribedDiscountPersent,\n        subscribedTime\n      } = tempNewItem,\n            newItem = _objectWithoutProperties(tempNewItem, [\"subscribedDiscountPersent\", \"subscribedTime\"]);\n\n      return {\n        found: foundItem,\n        item: _objectSpread({}, newItem)\n      };\n    }\n\n    return {\n      found: foundItem,\n      item: _objectSpread(_objectSpread({}, foundItem), {}, {\n        qty: qty,\n        subscribed: productItem.subscribed\n      })\n    };\n  }\n\n  return {\n    found: null,\n    item: _objectSpread({}, productItem)\n  };\n};\nexport const addItem = (state, newItem) => {\n  const {\n    found,\n    item\n  } = verifyProduct(newItem, state.items);\n\n  if (found) {\n    return modifyProduct(found, item, state);\n  }\n\n  const newItems = [...state.items, newItem];\n  return _objectSpread(_objectSpread({}, state), {}, {\n    items: newItems,\n    subTotal: returnSubTotal(newItems) || 0,\n    unSubscribeProductAmount: returnUnSubscribeTotal(newItems) || 0,\n    totalWeight: getTotalWeight(newItems),\n    totalVolume: getTotalVolume(newItems)\n  });\n};\nexport const setSlugInCart = cart => {\n  return _objectSpread(_objectSpread({}, cart), {}, {\n    items: cart.items ? cart.items.map(el => addSlugToProduct(el)) : []\n  });\n};\nexport const modifyProduct = (oldItem, newItem, state) => {\n  const NewItems = state.items.map(el => {\n    if (el._id === newItem._id) {\n      if (el === oldItem) {\n        return variablePriceSet(newItem);\n      }\n    }\n\n    return el;\n  });\n\n  if (oldItem !== newItem) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      items: [...NewItems],\n      subTotal: returnSubTotal(NewItems) || 0,\n      unSubscribeProductAmount: returnUnSubscribeTotal(NewItems) || 0,\n      totalWeight: getTotalWeight(NewItems),\n      totalVolume: getTotalVolume(NewItems)\n    });\n  }\n\n  return state;\n};\nexport const removeItem = (state, item) => {\n  const newItems = [...state.items.filter(el => el !== item)];\n  return _objectSpread(_objectSpread({}, state), {}, {\n    items: newItems,\n    subTotal: returnSubTotal(newItems) || 0,\n    unSubscribeProductAmount: returnUnSubscribeTotal(newItems) || 0,\n    totalWeight: getTotalWeight(newItems),\n    totalVolume: getTotalVolume(newItems)\n  });\n};","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missnew front/services/extra/cartHealpers.js"],"names":["addSlugToProduct","getItemTotal","item","saleprice","parseFloat","qty","value","regularprice","returnSubTotal","items","map","el","subscribed","totalPrice","disc","subscribedDiscountPersent","reduce","a","b","returnUnSubscribeTotal","filter","getTotalWeight","weight","getTotalVolume","volume","getTotalVariation","attributes","names","variablePriceSet","productItem","tempVariable","producttype","notNullVariation","variation","varCheck","attr","key","matchedVariable","some","vEl","undefined","find","varEl","matchArr","push","includes","regular_price","sale_price","dregularprice","dsaleprice","combo","changeCartItemVariation","varValue","indexingNo","list","approve","update","oldItem","newItem","remove","totalVariation","foundItem","index","innerFlag","productid","_id","every","totalQty","parseInt","label","toString","subscribedTime","verifyProduct","tempNewItem","found","addItem","state","modifyProduct","newItems","subTotal","unSubscribeProductAmount","totalWeight","totalVolume","setSlugInCart","cart","NewItems","removeItem"],"mappings":"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","sourcesContent":["import { addSlugToProduct } from \"./productHelpers\";\n\nexport const getItemTotal = item => {\n  if (item) {\n    if (item.saleprice)\n      return parseFloat(item.saleprice) * parseFloat(item.qty.value);\n    else if (item.regularprice)\n      return parseFloat(item.regularprice) * parseFloat(item.qty.value);\n  }\n  return 0;\n};\n\nexport const returnSubTotal = items => {\n  // amount =\n  return items\n    .map(el => {\n      if (el) {\n        if (el.saleprice)\n          if (el.subscribed) {\n            const totalPrice =\n              parseFloat(el.saleprice) * parseFloat(el.qty.value);\n            const disc = (totalPrice * el.subscribedDiscountPersent) / 100;\n            return parseFloat(totalPrice) - parseFloat(disc);\n          } else {\n            return parseFloat(el.saleprice) * parseFloat(el.qty.value);\n          }\n        else if (el.regularprice)\n          if (el.subscribed) {\n            const totalPrice =\n              parseFloat(el.regularprice) * parseFloat(el.qty.value);\n            const disc = (totalPrice * el.subscribedDiscountPersent) / 100;\n            return parseFloat(totalPrice) - parseFloat(disc);\n          } else {\n            return parseFloat(el.regularprice) * parseFloat(el.qty.value);\n          }\n      }\n\n      return 0;\n    })\n    .reduce((a, b) => a + b, 0);\n};\nexport const returnUnSubscribeTotal = items => {\n  return items\n    .filter(el => !el.subscribed)\n    .map(el => {\n      if (el) {\n        if (el.saleprice)\n          return parseFloat(el.saleprice) * parseFloat(el.qty.value);\n        else if (el.regularprice)\n          return parseFloat(el.regularprice) * parseFloat(el.qty.value);\n      }\n\n      return 0;\n    })\n    .reduce((a, b) => a + b, 0);\n};\nexport const getTotalWeight = items => {\n  return items\n    .filter(el => el.weight)\n    .map(el => el.weight * parseFloat(el.qty.value))\n    .reduce((a, b) => a + b, 0);\n};\nexport const getTotalVolume = items => {\n  // return items\n  //   .filter(el => el.shipping_height && el.shipping_length && el.shipping_width)\n  //   .map(el => el.shipping_height * el.shipping_length * el.shipping_width)\n  //   .reduce((a, b) => a + b, 0);\n  return items\n    .filter(el => el.volume)\n    .map(el => el.volume * parseFloat(el.qty.value))\n    .reduce((a, b) => a + b, 0);\n};\nexport const getTotalVariation = item => {\n  if (!item.attributes) return [];\n\n  return item.attributes.map(el => (el ? el.names : null)).filter(el => el);\n};\nexport const variablePriceSet = productItem => {\n  if (productItem) {\n    let tempVariable = { ...productItem };\n    if (productItem.producttype === \"variable\") {\n      // if (productItem.size && productItem.extract_flavor) {\n      const notNullVariation = productItem.variation.filter(el => el !== null);\n      productItem.attributes.filter(el => el !== null).map(el => el.names);\n      const varCheck = productItem.attributes\n        .filter(el => el !== null)\n        .map(attr => {\n          return {\n            key: attr.names,\n            value: productItem[attr.names]\n              ? productItem[attr.names].value\n              : productItem[attr.names]\n          };\n        });\n      let matchedVariable = null;\n      if (\n        !varCheck.some(vEl => vEl.value === null || vEl.value === undefined)\n      ) {\n        matchedVariable = notNullVariation.find(varEl => {\n          let matchArr = [];\n          varCheck.map(vEl => {\n            matchArr.push(varEl[vEl.key] === vEl.value);\n            return null;\n          });\n\n          return !matchArr.includes(false);\n        });\n        if (matchedVariable) {\n          tempVariable = {\n            ...productItem,\n            regularprice: matchedVariable.regular_price,\n            saleprice: matchedVariable.sale_price\n          };\n        } else {\n          tempVariable = {\n            ...productItem,\n            regularprice: productItem.dregularprice,\n            saleprice: productItem.dsaleprice\n          };\n        }\n      }\n    } else {\n      if (productItem.producttype === \"simple\" || productItem.combo) {\n        tempVariable = {\n          ...productItem,\n          regularprice: productItem.dregularprice,\n          saleprice: productItem.dsaleprice\n        };\n      }\n    }\n\n    return tempVariable;\n  }\n};\nexport const changeCartItemVariation = (\n  varValue,\n  names,\n  item,\n  indexingNo,\n  list\n) => {\n  if (names === \"qty\") {\n    return {\n      approve: false,\n      update: {\n        oldItem: item,\n        newItem: { ...item, [names]: varValue },\n        remove: null\n      }\n    };\n  } else {\n    const totalVariation = getTotalVariation(item);\n\n    const foundItem = list.find((el, index) => {\n      const innerFlag = totalVariation\n        .map(varEl => {\n          if (el[varEl]) {\n            if (varEl === names) {\n              return el[varEl].value === varValue.value;\n            }\n            return el[varEl].value === item[varEl].value;\n          } else {\n            return null;\n          }\n        })\n        .filter(el => el !== null);\n\n      return (\n        el.productid._id === item.productid._id &&\n        innerFlag.every(el => el) &&\n        index !== indexingNo\n      );\n    });\n    if (foundItem !== undefined && foundItem !== null) {\n      const totalQty = parseInt(foundItem.qty.value) + parseInt(item.qty.value);\n      const qty = {\n        label: totalQty.toString(),\n        value: totalQty.toString()\n      };\n\n      if (item.subscribed || foundItem.subscribed) {\n        return {\n          approve: true,\n          update: {\n            oldItem: foundItem,\n            newItem: {\n              ...foundItem,\n              [names]: varValue,\n              qty,\n              subscribed: true,\n              subscribedDiscountPersent: item.subscribedDiscountPersent,\n              subscribedTime: item.subscribedTime\n            },\n            remove: item\n          }\n        };\n      } else {\n        return {\n          approve: false,\n          update: {\n            oldItem: foundItem,\n            newItem: {\n              ...foundItem,\n              [names]: varValue,\n              qty\n            },\n            remove: item\n          }\n        };\n      }\n    } else {\n      return {\n        approve: false,\n        update: {\n          oldItem: item,\n          newItem: {\n            ...item,\n            [names]: varValue\n          },\n          remove: null\n        }\n      };\n    }\n  }\n};\nexport const verifyProduct = (productItem, items = []) => {\n  const totalVariation = getTotalVariation(productItem);\n\n  const foundItem = items.find(el => {\n    const innerFlag = totalVariation\n      .map(varEl => {\n        if (el[varEl]) {\n          return el[varEl].value === productItem[varEl].value;\n        } else {\n          return null;\n        }\n      })\n      .filter(el => el !== null)\n      .every(el => el);\n\n    if (!innerFlag) return innerFlag;\n\n    if (el.combo && productItem.combo) return el._id === productItem._id;\n\n    if (el.combo) return el._id === productItem.productid._id;\n\n    if (productItem.combo) return el.productid._id === productItem._id;\n\n    return el.productid._id === productItem.productid._id;\n  });\n\n  if (foundItem !== undefined && foundItem !== null) {\n    const totalQty =\n      parseInt(foundItem.qty.value) + parseInt(productItem.qty.value);\n    const qty = {\n      label: totalQty,\n      value: totalQty\n    };\n    const tempNewItem = {\n      ...foundItem,\n      subscribed: productItem.subscribed\n    };\n    if (productItem.subscribed) {\n      const {\n        subscribed,\n        subscribedDiscountPersent,\n        subscribedTime\n      } = productItem;\n      return {\n        found: foundItem,\n        item: {\n          ...foundItem,\n          qty: qty,\n          subscribed,\n          subscribedDiscountPersent,\n          subscribedTime\n        }\n      };\n    } else if (foundItem.subscribed) {\n      const {\n        subscribedDiscountPersent,\n        subscribedTime,\n        ...newItem\n      } = tempNewItem;\n      return {\n        found: foundItem,\n        item: {\n          ...newItem\n        }\n      };\n    }\n    return {\n      found: foundItem,\n      item: {\n        ...foundItem,\n        qty: qty,\n        subscribed: productItem.subscribed\n      }\n    };\n  }\n  return {\n    found: null,\n    item: {\n      ...productItem\n    }\n  };\n};\nexport const addItem = (state, newItem) => {\n  const { found, item } = verifyProduct(newItem, state.items);\n\n  if (found) {\n    return modifyProduct(found, item, state);\n  }\n  const newItems = [...state.items, newItem];\n\n  return {\n    ...state,\n    items: newItems,\n    subTotal: returnSubTotal(newItems) || 0,\n    unSubscribeProductAmount: returnUnSubscribeTotal(newItems) || 0,\n    totalWeight: getTotalWeight(newItems),\n    totalVolume: getTotalVolume(newItems)\n  };\n};\nexport const setSlugInCart = cart => {\n  return {\n    ...cart,\n    items: cart.items ? cart.items.map(el => addSlugToProduct(el)) : []\n  };\n};\nexport const modifyProduct = (oldItem, newItem, state) => {\n  const NewItems = state.items.map(el => {\n    if (el._id === newItem._id) {\n      if (el === oldItem) {\n        return variablePriceSet(newItem);\n      }\n    }\n    return el;\n  });\n  if (oldItem !== newItem) {\n    return {\n      ...state,\n      items: [...NewItems],\n      subTotal: returnSubTotal(NewItems) || 0,\n      unSubscribeProductAmount: returnUnSubscribeTotal(NewItems) || 0,\n      totalWeight: getTotalWeight(NewItems),\n      totalVolume: getTotalVolume(NewItems)\n    };\n  }\n  return state;\n};\nexport const removeItem = (state, item) => {\n  const newItems = [...state.items.filter(el => el !== item)];\n  return {\n    ...state,\n    items: newItems,\n    subTotal: returnSubTotal(newItems) || 0,\n    unSubscribeProductAmount: returnUnSubscribeTotal(newItems) || 0,\n    totalWeight: getTotalWeight(newItems),\n    totalVolume: getTotalVolume(newItems)\n  };\n};\n"]},"metadata":{},"sourceType":"module"}