{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport dynamic from 'next/dynamic';\nconst Heading = dynamic(() => import('./Heading'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./Heading')],\n    modules: ['./Heading']\n  }\n});\nconst Button = dynamic(() => import('./form-components/Button'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./form-components/Button')],\n    modules: ['./form-components/Button']\n  }\n});\nimport classNames from 'classnames';\nimport { connect } from 'react-redux';\nimport projectSettings from '../constants/projectSettings';\nimport Flickity from 'react-flickity-component';\nimport Link from 'next/link';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { showCartBar } from '../redux/actions/drawers';\nimport Product from './Product';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nconst CategoryProducts = (props, {\n  heading,\n  subHeading,\n  showCartBar,\n  bg,\n  btnText\n}) => {\n  const className = classNames('c-category-products', {\n    [`c-category-products--${bg}`]: bg\n  });\n  const {\n    0: activeCategoryIndex,\n    1: setActiveCategoryIndex\n  } = useState(-1);\n\n  const flickityInit = () => {\n    setTimeout(() => {\n      if (flkty) {\n        flkty.on('scroll', progress => {\n          if (!isNaN(progress)) {\n            let pos = `${progress * 80}%`; //  sliderLine.current.style.left = pos\n          }\n        });\n      }\n    }, 200);\n  };\n\n  const flResize = () => {\n    if (flkty) flkty.resize();\n  };\n\n  const onCategoryChange = index => setActiveCategoryIndex(index);\n\n  const products = useSelector(s => s.products);\n  console.log('pro', products);\n  let flkty = undefined;\n  return __jsx(\"div\", {\n    className: className\n  }, __jsx(\"div\", {\n    className: \"c-category-products__heading-wrapper\"\n  }, __jsx(Heading, {\n    parentClass: \"c-category-products\",\n    versions: ['default', 'upper']\n  }, heading), subHeading && __jsx(Heading, {\n    subHeading: true,\n    parentClass: \"c-category-products\",\n    versions: ['default', 'lft-br']\n  }, subHeading)), __jsx(\"div\", {\n    className: \"c-category-products__list\"\n  }, __jsx(\"span\", {\n    onClick: () => {\n      onCategoryChange(-1);\n    },\n    className: classNames('c-category-products__list-item', {\n      'c-category-products__list-item--active': activeCategoryIndex === -1\n    }),\n    key: 0\n  }, \"All\"), products.categories.map((el, i) => {\n    if (el.products.length >= 1) return __jsx(\"span\", {\n      onClick: () => {\n        onCategoryChange(i);\n      },\n      className: classNames('c-category-products__list-item', {\n        'c-category-products__list-item--active': activeCategoryIndex === i\n      }),\n      className: `c-category-products__list-item \n            ${activeCategoryIndex === i && 'c-category-products__list-item--active'}\n                `,\n      key: i\n    }, el.name);\n  })), __jsx(\"div\", {\n    className: \"row c-category-products__product-list\"\n  }, __jsx(Flickity, {\n    options: {\n      initialIndex: 0,\n      pageDots: false,\n      cellAlign: 'left',\n      contain: true,\n      on: {\n        ready: () => {\n          flickityInit();\n        }\n      }\n    },\n    flickityRef: c => flkty = c,\n    disableImagesLoaded: false,\n    reloadOnUpdate: true,\n    className: \"c-category-products__slider \"\n  }, console.log('poooo', products.categories, activeCategoryIndex), activeCategoryIndex === -1 ? products.products.filter(product => product.hidden === false).map((item, index) => __jsx(Product, _extends({}, props, {\n    key: index,\n    data: item\n  }))) : products.categories[activeCategoryIndex].products.filter(product => product.hidden === false).map((item, index) => __jsx(Product, _extends({}, props, {\n    key: index,\n    data: item\n  }))))), __jsx(\"div\", {\n    className: \"consult-doc-banner-wrapper\",\n    style: {\n      padding: '0rem 0 0rem 0'\n    }\n  }, __jsx(Link, {\n    href: \"/products\"\n  }, __jsx(\"button\", {\n    className: \"top-btn\",\n    style: {\n      fontSize: 'x-large',\n      fontWeight: '500'\n    }\n  }, 'SEE ALL PRODUCTS ', \" \\xA0\", __jsx(\"img\", {\n    className: \"top\",\n    style: {\n      height: '20px',\n      marginBottom: '5px'\n    },\n    src: \"/images/right-arrow-32px.png\",\n    alt: \"to-top\"\n  })))));\n};\n\nexport default CategoryProducts;","map":null,"metadata":{},"sourceType":"module"}