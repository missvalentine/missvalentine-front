{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Link from \"next/link\";\nimport { filePath } from \"../../constants/projectSettings\";\nimport { directAddToCart, getBasicPrice } from \"../../services/extra\";\nimport BasicFunction from \"../../services/extra/basicFunction\";\nimport { addToCart, toggleCartBar } from \"../../redux/actions\";\nimport { getProductTitle } from \"../../services/helpers/product\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nconst basicFunction = new BasicFunction();\n\nclass ChatProductCard extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"addToCart\", product => {\n      const {\n        addToCart,\n        toggleCartBar,\n        isOpen\n      } = this.props;\n      addToCart(product);\n      if (!isOpen) toggleCartBar();\n    });\n\n    _defineProperty(this, \"triggerNext\", e => {\n      const {\n        triggerNextStep\n      } = this.props;\n      triggerNextStep();\n    });\n\n    this.state = {\n      selected: false\n    };\n  }\n\n  render() {\n    const {\n      value: product,\n      countryCode\n    } = this.props.steps.products;\n    if (!product) return __jsx(\"div\", null);\n    const productLink = `/shop/${getProductTitle(product).replace(/ /g, \"-\")}`;\n    const productTitle = product.title ? product.title : product.productid && product.productid.producttitle;\n    const productImage = product.featureimage ? product.featureimage : product.productid && product.productid.featurefilepath;\n    const amountObj = getBasicPrice(product);\n    const amount = amountObj.sale_price ? amountObj.sale_price : amountObj.regular_price;\n    const price = basicFunction.currencyWithoutUsd(amount);\n    return __jsx(\"div\", {\n      style: {\n        width: \"100%\",\n        margin: \"auto\"\n      },\n      className: \"product-list-item\"\n    }, __jsx(\"div\", {\n      className: \"product-list-image-wrap mb-2\"\n    }, __jsx(Link, {\n      href: productLink\n    }, __jsx(\"a\", {\n      className: \"cursor-pointer product-list-image-link\"\n    }, __jsx(\"div\", {\n      style: {\n        width: \"210px\",\n        height: \"210px\"\n      },\n      className: \"product-list-image-inner-wrap\"\n    }, __jsx(LazyLoadImage, {\n      className: \"product-list-image\",\n      src: filePath + productImage,\n      alt: productTitle\n    }))))), __jsx(\"div\", {\n      className: \"product-list-title-wrap\"\n    }, __jsx(\"div\", {\n      className: \"product-list-title-inner\"\n    }, __jsx(\"p\", {\n      className: \"product-list-title mb-2\"\n    }, __jsx(\"strong\", null, productTitle)))), __jsx(\"div\", {\n      className: \"chat-product-btn-wrap\"\n    }, __jsx(Link, {\n      href: productLink\n    }, __jsx(\"a\", {\n      className: \"btn cursor-pointer d-block mb-0 product-list-btn hover-text-line\"\n    }, \"View details\")), __jsx(\"span\", {\n      onClick: () => {\n        this.addToCart(directAddToCart(product));\n        this.triggerNext();\n      },\n      className: \"c-btn c-btn--dark btn2 cursor-pointer d-block mb-0 product-list-btn\"\n    }, \"Add to cart - \", price)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  countryCode: state.location.countryCode,\n  isOpen: state.drawers.isCartOpen,\n  products: state.products.products\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  toggleCartBar\n})(ChatProductCard);","map":null,"metadata":{},"sourceType":"module"}