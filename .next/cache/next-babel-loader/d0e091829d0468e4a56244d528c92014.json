{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport classNames from \"classnames\";\n\nvar ChatCategoryList = /*#__PURE__*/function (_Component) {\n  _inherits(ChatCategoryList, _Component);\n\n  var _super = _createSuper(ChatCategoryList);\n\n  function ChatCategoryList() {\n    var _this;\n\n    _classCallCheck(this, ChatCategoryList);\n\n    _this = _super.call(this);\n    _this.state = {\n      selected: null,\n      categoryList: [\"Topicals\", \"Pets\", \"Edibles\", \"Capsules\", \"Oils\" // \"Bundles\",\n      ]\n    };\n    return _this;\n  }\n\n  _createClass(ChatCategoryList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          selected = _this$state.selected,\n          categoryList = _this$state.categoryList;\n      return __jsx(\"div\", null, categoryList.map(function (el, index) {\n        return __jsx(\"p\", {\n          className: classNames(\"chat-custom-option\", {\n            selected: selected === el\n          }),\n          onClick: function onClick() {\n            if (!selected) {\n              _this2.setState({\n                categoryList: categoryList.filter(function (elx) {\n                  return elx === el;\n                }),\n                selected: el\n              }, function () {\n                _this2.props.triggerNextStep({\n                  value: el\n                });\n              });\n            }\n          },\n          key: index\n        }, el);\n      }));\n    }\n  }]);\n\n  return ChatCategoryList;\n}(Component);\n\nexport default ChatCategoryList;","map":null,"metadata":{},"sourceType":"module"}