{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport dynamic from 'next/dynamic';\nconst Checkbox = dynamic(() => import('./form-components/Checkbox'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./form-components/Checkbox')],\n    modules: ['./form-components/Checkbox']\n  }\n});\nconst Heading = dynamic(() => import('./Heading'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./Heading')],\n    modules: ['./Heading']\n  }\n});\nimport { Icon, Select, Rate } from 'antd';\nimport Router from 'next/router';\nconst Button = dynamic(() => import('./form-components/Button'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./form-components/Button')],\n    modules: ['./form-components/Button']\n  }\n});\nconst Quantity = dynamic(() => import('./form-components/Quantity'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./form-components/Quantity')],\n    modules: ['./form-components/Quantity']\n  }\n});\nimport { getBasicPrice, directAddToCart } from '../services/helpers/product';\nimport { numberFormat } from '../services/helpers/misc';\nimport { addToCart } from '../redux/actions/cart';\nimport { showCartBar } from '../redux/actions/drawers';\nimport { connect } from 'react-redux';\nimport { getProductImageArray } from '../services/helpers/product';\nimport projectSettings from '../constants/projectSettings';\nimport BasicFunction from '../services/extra/basicFunction';\nimport { addToWishList, deleteWishList, getWishList } from '../services/api';\nimport { setWishList } from '../redux/actions';\nconst ImageZoom = dynamic(() => import('./ImageZoom'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./ImageZoom')],\n    modules: ['./ImageZoom']\n  }\n});\nimport { Collapse } from 'reactstrap';\nconst Drawer = dynamic(() => import('./Drawer'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./Drawer')],\n    modules: ['./Drawer']\n  }\n});\nconst Login = dynamic(() => import('./popups/Login'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./popups/Login')],\n    modules: ['./popups/Login']\n  }\n});\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { toggleRegBar } from '../redux/actions/drawers';\nimport Heart from '../assets/images/wishlist-heart';\nconst basicFunction = new BasicFunction();\n\nclass ProductInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"hartState\", async (_id, productmainId, productDetails, productSlug) => {\n      if (!this.props.user._id) {\n        this.props.toggleRegBar();\n      } else {\n        // console.log(this.props.wishList)\n        const removeIndex = basicFunction.checkProductInWishList(this.props.wishList, productmainId); //  console.log(removeIndex);\n\n        var wishListArray = [...this.props.wishList];\n\n        if (removeIndex || removeIndex === 0) {\n          if (this.props.user._id) {\n            var id = wishListArray[removeIndex].wishListId;\n            deleteWishList({\n              id\n            }).then(resJson => {\n              if (resJson.success) {}\n            }).catch();\n          }\n\n          wishListArray.splice(removeIndex, 1);\n          this.props.setWishList(wishListArray);\n          this.setState({\n            SpinnerToggle: false\n          });\n          this.setState({\n            isFavourite: false\n          });\n        } else {\n          // console.log(this.props.user._id);\n          this.setState({\n            isFavourite: true\n          });\n\n          if (this.props.user._id) {\n            const userid = this.props.user._id;\n            addToWishList(userid, productmainId, _id, productSlug).then(resJson => {\n              const resJson2 = resJson.data;\n\n              if (resJson2.status) {\n                var wishlist = '';\n                const wishListRes = resJson2.wishlist; //  console.log(wishListRes);\n\n                if (wishListRes.combo) {\n                  wishlist = {\n                    combo: wishListRes.combo,\n                    productid: wishListRes.comboid,\n                    productmeta: wishListRes.comboid,\n                    userid: userid,\n                    wishListId: wishListRes._id,\n                    productSlug\n                  };\n                } else {\n                  wishlist = {\n                    combo: wishListRes.combo,\n                    productid: wishListRes.productid,\n                    productmeta: wishListRes.productmeta,\n                    userid: userid,\n                    wishListId: wishListRes._id,\n                    productSlug\n                  };\n                } // console.log(wishlist)\n\n\n                this.props.setWishList([...wishListArray, wishlist]);\n                this.setState({\n                  SpinnerToggle: false\n                });\n              }\n            }).catch(err => {});\n          } else {\n            const wishListDetails = {\n              productmeta: _id,\n              productid: productmainId,\n              productDetails: productDetails,\n              productSlug\n            }; // console.log(wishListDetails);\n\n            this.props.setWishList([...wishListArray, wishListDetails]);\n          }\n        }\n      }\n    });\n\n    _defineProperty(this, \"getAvg\", reviews => {\n      if (reviews) {\n        const newArr = reviews.map(el => el.overall);\n        const sum = newArr.reduce((a, b) => a + b, 0);\n        return sum / reviews.length;\n      }\n\n      return 0;\n    });\n\n    this.state = {\n      qty: 1,\n      isSubscribed: false,\n      subsDuration: '3',\n      isAllIngredient: false,\n      isFavourite: false\n    };\n  }\n\n  componentDidMount() {\n    this.getWishListAtStart();\n  }\n\n  async getWishListAtStart() {\n    const response = await getWishList(this.props.user._id);\n    const wishlist = response.data.wishlist;\n    let wishlist1 = [];\n    wishlist.map(wishListRes => {\n      if (wishListRes.combo) {\n        let wishlist = {\n          combo: wishListRes.combo,\n          productid: wishListRes.comboid,\n          productmeta: wishListRes.comboid,\n          userid: this.props.user._id,\n          wishListId: wishListRes._id\n        };\n        wishlist1.push(wishlist);\n      } else {\n        let wishlist = {\n          combo: wishListRes.combo,\n          productid: wishListRes.productid._id,\n          productmeta: wishListRes.productmeta,\n          userid: this.props.user._id,\n          wishListId: wishListRes._id\n        };\n        wishlist1.push(wishlist);\n      }\n    });\n    this.props.setWishList(wishlist1);\n    const removeIndex = basicFunction.checkProductInWishList(wishlist1, this.props.product.productid._id);\n\n    if (removeIndex || removeIndex === 0) {\n      this.setState({\n        isFavourite: true\n      });\n    }\n  }\n\n  render() {\n    // console.log(this.state.isFavourite)\n    // console.log(this.props.wishList)\n    //  console.log(this.state.displayDrawer);\n    const className = this.state.isFavourite ? 'c-product-info__btn-wrap__wishlist__active' : 'c-product-info__btn-wrap__wishlist';\n    const {\n      qty,\n      isSubscribed,\n      subsDuration,\n      isAllIngredient\n    } = this.state;\n    const {\n      image,\n      product,\n      productAttr,\n      addToCart,\n      cart,\n      showCartBar,\n      allProducts\n    } = this.props;\n    const basePrice = getBasicPrice(product);\n    const price = parseFloat(basePrice.sale_price || 0) * qty;\n    const {\n      subsPercent\n    } = projectSettings;\n    const cutPrice = basicFunction.getParchantage(parseFloat(subsPercent), basePrice.sale_price);\n    const disPrice = ((parseFloat(basePrice.sale_price) - parseFloat(cutPrice)) * qty).toFixed(2);\n    const {\n      _id: productId,\n      combo,\n      productid,\n      title\n    } = product;\n    const productName = combo === true ? title : productid ? productid.producttitle : title || '';\n\n    const addToCartFn = () => {\n      if (isSubscribed) {\n        addToCart(directAddToCart(_objectSpread(_objectSpread({}, product), {}, {\n          subscribed: isSubscribed,\n          subscribedTime: subsDuration,\n          subscribedDiscountPersent: subsPercent\n        }), qty));\n      } else {\n        addToCart(directAddToCart(_objectSpread({}, product), qty));\n      }\n\n      showCartBar();\n    };\n\n    const {\n      Option\n    } = Select;\n    const gallery = getProductImageArray(product);\n    console.log(this.props.reviews);\n    const avgReviews = this.getAvg(this.props.reviews).toFixed(1); // console.log(this.props);\n\n    const reviewsLength = this.props.reviews ? this.props.reviews.length : 0;\n\n    const headingAndReviews = () => __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"d-flex flex-wrap c-product-info__title-wrapper\"\n    }, __jsx(\"div\", {\n      className: \"c-product-info__title-col\"\n    }, __jsx(Heading, {\n      versions: ['default', 'product'],\n      parentClass: \"c-product-info\"\n    }, product && (product.title || product.productid && product.productid.producttitle)), __jsx(Heading, {\n      style: {\n        fontFamily: 'futuraBT-book',\n        opacity: 0.5,\n        fontWeight: '600',\n        color: '#000000'\n      },\n      subHeading: \"true\",\n      parentClass: \"c-product-info\",\n      versions: ['product']\n    }, product && (product.sdescription || product.productid && product.productid.sdescription))), __jsx(\"div\", {\n      className: \"c-product-info__heart-and-rate \"\n    }, __jsx(\"div\", {\n      className: className\n    }, __jsx(Button, {\n      style: {\n        color: 'black'\n      },\n      onClick: () => {\n        this.hartState(productId, productid ? productid._id : productId, {\n          productName,\n          image\n        } // productSlug\n        );\n      },\n      versions: ['wishlist'],\n      parentClass: \"border-left-0 c-product-info\" //theme=\"outline\"\n\n    }, __jsx(Heart, null))), __jsx(\"div\", {\n      className: \"c-product-info__rating-wrapper \",\n      style: {\n        cursor: 'pointer'\n      }\n    }, reviewsLength > 0 && __jsx(\"div\", {\n      className: \"c-product-info__rate\",\n      onClick: () => Router.push(`/reviews/${product._id}`)\n    }, __jsx(Rate, {\n      style: {\n        color: '#000'\n      },\n      className: \"c-product-info__stars c-product-info__stars--sm \",\n      disabled: true,\n      value: avgReviews,\n      allowHalf: true\n    }), __jsx(\"p\", {\n      className: \"c-product-info__review\"\n    }, reviewsLength, \" Reviews(\", avgReviews, \")\")))))); // console.log(this.props.wishList)\n\n\n    return __jsx(\"div\", {\n      className: \"c-product-info container\"\n    }, __jsx(Drawer, {\n      onClose: this.props.toggleRegBar,\n      title: 'Login',\n      visible: this.props.isRegOpen\n    }, __jsx(Login, null)), __jsx(\"div\", {\n      className: \"c-product-info__row\"\n    }, __jsx(\"div\", {\n      className: \"c-product-info__image-col\"\n    }, __jsx(\"div\", {\n      className: \"c-product-info__img-wrapper\"\n    }, gallery && gallery.length > 0 && __jsx(ImageZoom, {\n      images: gallery\n    }), gallery && gallery.length <= 0 && __jsx(LazyLoadImage, {\n      src: image,\n      alt: \"product\",\n      className: \"img-fluid c-product-info__img\"\n    }))), __jsx(\"div\", {\n      className: \"\"\n    }, __jsx(\"div\", {\n      className: \"c-product-info__title-wrap\"\n    }, headingAndReviews()), __jsx(\"div\", {\n      className: \"c-product-info__description\"\n    }, __jsx(Heading, {\n      subHeading: \"true\",\n      className: \"c-product-info__description-heading\",\n      versions: ['default', 'product'],\n      parentClass: \"c-product-info\"\n    }, product && (product.description || product.productid && product.productid.description))), __jsx(\"div\", {\n      className: \"c-product-info__list\"\n    }, __jsx(\"h2\", {\n      className: \"c-sub-heading c-sub-heading--default\"\n    }, __jsx(\"b\", null, \"What is it?\")), productAttr.map((el, i) => __jsx(\"h4\", {\n      key: i,\n      className: \"c-product-info__description-heading\",\n      style: {\n        lineHeight: '1.8'\n      }\n    }, el.description)), __jsx(\"br\", null), !product.combo && __jsx(\"div\", null, __jsx(\"h2\", {\n      className: \"c-sub-heading c-sub-heading--default\",\n      onClick: () => {\n        this.setState(prevState => ({\n          isAllIngredient: !prevState.isAllIngredient\n        }));\n      },\n      style: {\n        cursor: 'pointer'\n      }\n    }, __jsx(\"b\", null, isAllIngredient ? 'All' : 'Key', \" Ingredients\", ' ', __jsx(Icon, {\n      type: isAllIngredient ? 'minus' : 'plus',\n      style: {\n        verticalAlign: '0.1em'\n      }\n    }), ' '), ' '), __jsx(Collapse, {\n      isOpen: !isAllIngredient\n    }, __jsx(\"h4\", {\n      parentClass: \"c-product-info \",\n      className: \"c-product-info__description-heading\",\n      style: {\n        lineHeight: '1.8',\n        marginBottom: '20px'\n      }\n    }, ' ', product.keyingredients, ' ')), __jsx(Collapse, {\n      isOpen: isAllIngredient\n    }, __jsx(\"h4\", {\n      parentClass: \"c-product-info \",\n      className: \"c-product-info__description-heading\",\n      style: {\n        lineHeight: '1.8',\n        marginBottom: '20px'\n      }\n    }, ' ', product.allingredients, ' ')))), __jsx(\"div\", {\n      className: \"c-product-info__atc-wrapper\"\n    }, __jsx(\"div\", {\n      className: \"c-product-info__price-and-qty\"\n    }, __jsx(\"div\", {\n      style: {\n        paddingRight: '10px'\n      },\n      className: \"c-product-info__price-wrapper\"\n    }, isSubscribed ? __jsx(\"p\", {\n      style: {\n        paddingRight: '10px'\n      },\n      className: \"c-product-info__price\"\n    }, __jsx(\"strike\", {\n      style: {\n        opacity: 0.7,\n        marginLeft: '3px'\n      }\n    }, \"$\", numberFormat(price)), __jsx(\"span\", null, \" $\", numberFormat(disPrice))) : __jsx(\"p\", {\n      style: {\n        paddingRight: '10px'\n      },\n      className: \"c-product-info__price\"\n    }, \"$\", numberFormat(price))), __jsx(\"div\", {\n      className: \"c-product-info__qty-wrapper\",\n      style: {\n        borderLeft: '1px solid #aaaaaa'\n      }\n    }, __jsx(Quantity, {\n      value: qty,\n      onChange: e => this.setState({\n        qty: e\n      }),\n      min: 1,\n      parentClass: \"c-product-info\"\n    }))), __jsx(\"div\", {\n      className: \"c-product-info__subscribe-wrapper d-flex\"\n    }, __jsx(Checkbox, {\n      checked: isSubscribed,\n      onChange: () => {\n        this.setState(prevState => ({\n          isSubscribed: !prevState.isSubscribed\n        }));\n      },\n      versions: ['light'],\n      id: product && product._id,\n      label: `Subscribe & save ${subsPercent}%`\n    }), isSubscribed && __jsx(\"div\", {\n      style: {\n        padding: '15px 20px',\n        fontFamily: 'futuraBT-medium',\n        fontWeight: '700'\n      }\n    }, __jsx(Select, {\n      style: {\n        width: '100px'\n      },\n      onChange: e => this.setState({\n        subsDuration: e\n      }),\n      value: subsDuration\n    }, __jsx(Option, {\n      value: \"3\"\n    }, \"3 Months\"), __jsx(Option, {\n      value: \"6\"\n    }, \"6 Months\"), __jsx(Option, {\n      value: \"12\"\n    }, \"1 Year\")), __jsx(\"br\", null)))), __jsx(\"div\", {\n      className: \"c-product-info__btn-wrapper\"\n    }, __jsx(\"div\", {\n      className: \"c-product-info__btn-wrap\"\n    }, __jsx(Button, {\n      onClick: addToCartFn,\n      parentClass: \"c-product-info\" // theme=\"dark\"\n\n    }, \"Add to cart\"))))), __jsx(\"center\", {\n      className: \"d-flex justify-content-center floating-btn\"\n    }, __jsx(Button, {\n      onClick: addToCartFn,\n      parentClass: \"c-product-info\" // theme=\"dark\"\n\n    }, \"Add to cart\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  cart: state.cart,\n  wishList: state.wishList,\n  user: state.user,\n  isRegOpen: state.isRegOpen\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  showCartBar,\n  setWishList,\n  toggleRegBar\n})(ProductInfo);","map":null,"metadata":{},"sourceType":"module"}