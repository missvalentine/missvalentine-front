{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { TOGGLE_CART_BAR, SHOW_CART_BAR, HIDE_CART_BAR, TOGGLE_REGISTRATION_BAR, SHOW_REGISTRATION_BAR, HIDE_REGISTRATION_BAR, HAS_LOGIN, TO_DISPLAY } from \"../actions/type\";\nconst initialState = {\n  isCartOpen: false,\n  isRegOpen: false,\n  hasLogin: false,\n  toDisplay: \"login\"\n};\nexport default ((state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case TOGGLE_CART_BAR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isCartOpen: !state.isCartOpen\n      });\n\n    case SHOW_CART_BAR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isCartOpen: true\n      });\n\n    case HIDE_CART_BAR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isCartOpen: false\n      });\n\n    case TOGGLE_REGISTRATION_BAR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isRegOpen: !state.isRegOpen\n      });\n\n    case SHOW_REGISTRATION_BAR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isRegOpen: true\n      });\n\n    case HIDE_REGISTRATION_BAR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isRegOpen: false\n      });\n\n    case HAS_LOGIN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        hasLogin: payload\n      });\n\n    case TO_DISPLAY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        toDisplay: payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missnew front/redux/reducers/drawers.js"],"names":["TOGGLE_CART_BAR","SHOW_CART_BAR","HIDE_CART_BAR","TOGGLE_REGISTRATION_BAR","SHOW_REGISTRATION_BAR","HIDE_REGISTRATION_BAR","HAS_LOGIN","TO_DISPLAY","initialState","isCartOpen","isRegOpen","hasLogin","toDisplay","state","action","type","payload"],"mappings":";;;;;;AAAA,SACEA,eADF,EACmBC,aADnB,EACkCC,aADlC,EAEEC,uBAFF,EAE2BC,qBAF3B,EAEkDC,qBAFlD,EAGEC,SAHF,EAGaC,UAHb,QAIO,iBAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,QAAQ,EAAE,KAHS;AAInBC,EAAAA,SAAS,EAAE;AAJQ,CAArB;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKf,eAAL;AACE,6CACKa,KADL;AAEEJ,QAAAA,UAAU,EAAE,CAACI,KAAK,CAACJ;AAFrB;;AAKF,SAAKR,aAAL;AACE,6CACKY,KADL;AAEEJ,QAAAA,UAAU,EAAE;AAFd;;AAKF,SAAKP,aAAL;AACE,6CACKW,KADL;AAEEJ,QAAAA,UAAU,EAAE;AAFd;;AAKF,SAAKN,uBAAL;AACE,6CACKU,KADL;AAEEH,QAAAA,SAAS,EAAE,CAACG,KAAK,CAACH;AAFpB;;AAKF,SAAKN,qBAAL;AACE,6CACKS,KADL;AAEEH,QAAAA,SAAS,EAAE;AAFb;;AAKF,SAAKL,qBAAL;AACE,6CACKQ,KADL;AAEEH,QAAAA,SAAS,EAAE;AAFb;;AAKF,SAAKJ,SAAL;AACE,6CACKO,KADL;AAEEF,QAAAA,QAAQ,EAAEK;AAFZ;;AAKF,SAAKT,UAAL;AACE,6CACKM,KADL;AAEED,QAAAA,SAAS,EAAEI;AAFb;;AAKF;AACE,aAAOH,KAAP;AAlDJ;AAoDD,CAvDD","sourcesContent":["import { \n  TOGGLE_CART_BAR, SHOW_CART_BAR, HIDE_CART_BAR,\n  TOGGLE_REGISTRATION_BAR, SHOW_REGISTRATION_BAR, HIDE_REGISTRATION_BAR,\n  HAS_LOGIN, TO_DISPLAY\n} from \"../actions/type\";\n\nconst initialState = {\n  isCartOpen: false,\n  isRegOpen: false,\n  hasLogin: false,\n  toDisplay: \"login\"\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case TOGGLE_CART_BAR:\n      return {\n        ...state,\n        isCartOpen: !state.isCartOpen\n      };\n\n    case SHOW_CART_BAR:\n      return {\n        ...state,\n        isCartOpen: true\n      };\n\n    case HIDE_CART_BAR:\n      return {\n        ...state,\n        isCartOpen: false\n      };\n\n    case TOGGLE_REGISTRATION_BAR:\n      return {\n        ...state,\n        isRegOpen: !state.isRegOpen\n      };\n\n    case SHOW_REGISTRATION_BAR:\n      return {\n        ...state,\n        isRegOpen: true\n      };\n\n    case HIDE_REGISTRATION_BAR:\n      return {\n        ...state,\n        isRegOpen: false\n      };\n\n    case HAS_LOGIN:\n      return {\n        ...state,\n        hasLogin: payload\n      };\n\n    case TO_DISPLAY:\n      return {\n        ...state,\n        toDisplay: payload\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}