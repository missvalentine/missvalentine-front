{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport dynamic from 'next/dynamic';\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nvar Header = dynamic(function () {\n  return import('../Header');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../Header')];\n    },\n    modules: ['../Header']\n  }\n});\nimport projectSettings, { topBarText, projectName } from '../../constants/projectSettings';\nimport '../styles/app.scss';\nvar Footer = dynamic(function () {\n  return import('../Footer');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../Footer')];\n    },\n    modules: ['../Footer']\n  }\n});\nimport classNames from 'classnames';\nvar ChatBot = dynamic(function () {\n  return import('../chatBot/ChatBot');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../chatBot/ChatBot')];\n    },\n    modules: ['../chatBot/ChatBot']\n  }\n});\nimport Button from '../form-components/Button';\nvar TopAlert = dynamic(function () {\n  return import('../TopAlert');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../TopAlert')];\n    },\n    modules: ['../TopAlert']\n  }\n});\nimport { FullModal } from '../modal';\nimport { connect } from 'react-redux';\nimport { setEntryMsg } from '../../redux/actions';\nvar Input = dynamic(function () {\n  return import('../form-components/Input');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../form-components/Input')];\n    },\n    modules: ['../form-components/Input']\n  }\n});\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { addSubscriber } from '../../services/apis/user';\nvar EmailReg = new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g);\n\nvar Layout = function Layout(_ref) {\n  var title = _ref.title,\n      description = _ref.description,\n      keywords = _ref.keywords,\n      children = _ref.children,\n      isHeaderBg = _ref.isHeaderBg,\n      headerTheme = _ref.headerTheme,\n      headerVersions = _ref.headerVersions,\n      pageClass = _ref.pageClass,\n      fixed = _ref.fixed,\n      homeLogo = _ref.homeLogo,\n      isEntryMsg = _ref.isEntryMsg,\n      setEntryMsg = _ref.setEntryMsg,\n      logo = _ref.logo,\n      footerLogo = _ref.footerLogo;\n\n  // console.log(headerVersions);\n  var _useState = useState(false),\n      isEntryMsg1 = _useState[0],\n      setEntryMsg1 = _useState[1];\n\n  var _useState2 = useState(''),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(false),\n      isAdded = _useState3[0],\n      setIsAdded = _useState3[1];\n\n  var _useState4 = useState(''),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var setSubscriber = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return addSubscriber(email);\n\n            case 2:\n              result = _context.sent;\n              setIsAdded(true);\n              setMessage(result.data.message);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function setSubscriber() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classNames('c-layout', _defineProperty({}, pageClass, pageClass))\n  }, __jsx(Head, null, __jsx(\"title\", null, title ? title : projectSettings.projectName), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: title ? title : projectSettings.projectName,\n    key: \"title\"\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: title ? title : projectSettings.projectName,\n    key: \"description\"\n  }), __jsx(\"meta\", {\n    name: \"description\",\n    content: description ? description : projectSettings.projectName\n  }), __jsx(\"meta\", {\n    name: \"keywords\",\n    content: keywords ? keywords : projectSettings.projectName\n  }), __jsx(\"meta\", {\n    httpEquiv: \"Content-Type\",\n    content: \"text/html; charset=utf-8\"\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1\"\n  }), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  })), __jsx(Header, {\n    theme: headerTheme,\n    homeLogo: homeLogo,\n    versions: headerVersions,\n    bg: isHeaderBg,\n    fixed: fixed,\n    logo: logo\n  }), children, __jsx(FullModal, {\n    isOpen: isEntryMsg,\n    toggle: function toggle() {\n      return setEntryMsg(false);\n    },\n    style: {\n      width: '100%'\n    }\n  }, __jsx(\"div\", {\n    className: \"ss ss-row\"\n  }, __jsx(\"div\", {\n    className: \"left\"\n  }, __jsx(\"img\", {\n    src: \"/images/ss2_banner.png\",\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  })), __jsx(\"div\", {\n    className: \"right\"\n  }, !isAdded ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"modal__logo-wrapper ss__heading\",\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, __jsx(\"div\", {\n    className: \"\"\n  }, __jsx(\"span\", {\n    className: \"c-banner__heading\",\n    style: {\n      color: '#d8ab97',\n      fontSize: '50px',\n      lineHeight: '60px'\n    }\n  }, \"you first!\"))), __jsx(\"div\", {\n    className: \"c-susbmit-r__wrapper justify-content-center\"\n  }, __jsx(\"h1\", {\n    className: \"ss__subhead\",\n    style: {\n      fontSize: '20px',\n      margin: '30px'\n    }\n  }, \"Sign up for our emails to get the latest updates\", __jsx(\"br\", null), \"on our products before anyone else.\"), __jsx(\"div\", null, __jsx(Input, {\n    label: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    }\n  }), email.length > 0 && !EmailReg.test(email) && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    }\n  }, \"email is not valid!\"), __jsx(\"br\", null), __jsx(Button, {\n    theme: \"dark\",\n    type: \"submit\",\n    onClick: setSubscriber,\n    disbaled: !EmailReg.test(email)\n  }, \"Submit\"), __jsx(Button, {\n    theme: \"dark\",\n    type: \"link\",\n    onClick: function onClick() {\n      return setEntryMsg(false);\n    }\n  }, \"Cancel\")))) : __jsx(React.Fragment, null, __jsx(\"h1\", null, message), __jsx(Button, {\n    theme: \"dark\",\n    type: \"link\",\n    onClick: function onClick() {\n      return setEntryMsg(false);\n    }\n  }, \"Close\"))))), __jsx(ChatBot, null), __jsx(Footer, {\n    imageUrl: footerLogo\n  })));\n};\n\nLayout.defaultProps = {\n  isHeaderBg: false,\n  fixed: true\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isEntryMsg: state.firstSetting.entryMsg\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEntryMsg: setEntryMsg\n})(Layout); // onClick={() => {if () {setEntryMsg1(false)} else {setError(\"Invalid Email\")}}}","map":null,"metadata":{},"sourceType":"module"}