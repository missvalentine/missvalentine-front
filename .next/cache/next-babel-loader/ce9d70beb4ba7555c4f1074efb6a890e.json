{"ast":null,"code":"var __jsx = React.createElement;\n// pages/_app.js\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport createStore from '../redux';\nimport Head from 'next/head';\nimport projectSettings from '../constants/projectSettings';\nimport '../components/styles/app.scss';\n/**\n * @param {object} initialState\n * @param {boolean} options.isServer indicates whether it is a server side or client side\n * @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n * @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n * @param {boolean} options.debug User-defined debug mode param\n * @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR\n */\n\nconst {\n  store,\n  persistor\n} = createStore();\n\nconst App = ({\n  Component,\n  pageProps\n}) => {\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"script\", {\n    src: `https://maps.googleapis.com/maps/api/js?key=${projectSettings.googleApiKey}&libraries=places&v=3` // async\n    // defer\n\n  })), __jsx(Provider, {\n    store: store\n  }, __jsx(PersistGate, {\n    loading: null,\n    persistor: persistor\n  }, __jsx(Component, pageProps))));\n};\n\nApp.getInitialProps = async ({\n  Component,\n  ctx\n}) => {\n  if (Component.getInitialProps) {\n    const pageProps = await Component.getInitialProps(ctx);\n    return {\n      pageProps\n    };\n  }\n\n  return {};\n};\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}