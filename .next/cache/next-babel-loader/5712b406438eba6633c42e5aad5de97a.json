{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { LOADING } from '../actions/type';\nconst initialState = {\n  isLoading: false\n};\nexport default ((state = initialState, action) => {\n  const {\n    payload,\n    type\n  } = action;\n\n  switch (type) {\n    case LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/redux/reducers/loading.js"],"names":["LOADING","initialState","isLoading","state","action","payload","type"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,iBAAxB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE;AADM,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC7C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBF,MAA1B;;AAEA,UAAQE,IAAR;AACI,SAAKN,OAAL;AACI,6CACOG,KADP;AAEID,QAAAA,SAAS,EAAEG;AAFf;;AAIJ;AACI,aAAOF,KAAP;AAPR;AASH,CAZD","sourcesContent":["import { LOADING } from '../actions/type'\n\nconst initialState = {\n    isLoading: false,\n};\n\nexport default (state = initialState, action) => {\n    const { payload, type } = action;\n\n    switch (type) {\n        case LOADING:\n            return {\n                ...state,\n                isLoading: payload\n            };\n        default:\n            return state;\n    }\n};\n\n"]},"metadata":{},"sourceType":"module"}