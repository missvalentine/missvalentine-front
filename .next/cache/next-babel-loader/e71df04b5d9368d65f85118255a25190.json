{"ast":null,"code":"import { getBlogs } from \"../../services/apis/blog\";\nimport * as actionTypes from \"./type\";\nexport var get = function get(pageNo, tag) {\n  return function (dispatch) {\n    return getBlogs(pageNo, tag).then(function (result) {\n      dispatch({\n        type: actionTypes.GET_ALL,\n        payload: result.data.data,\n        pageNo: pageNo,\n        tag: tag\n      });\n    })[\"catch\"](function (err) {\n      console.log(\"\tI got error here\", err);\n      return Promise.reject(err);\n    });\n  };\n};\nexport var getArticle = function getArticle(index) {\n  return {\n    type: actionTypes.GET_ARTICLE,\n    index: index\n  };\n};","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missnew front/redux/actions/blog.js"],"names":["getBlogs","actionTypes","get","pageNo","tag","dispatch","then","result","type","GET_ALL","payload","data","err","console","log","Promise","reject","getArticle","index","GET_ARTICLE"],"mappings":"AAAA,SAASA,QAAT,QAAyB,0BAAzB;AACA,OAAO,KAAKC,WAAZ,MAA6B,QAA7B;AAEA,OAAO,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,MAAD,EAASC,GAAT,EAAiB;AAEnC,SAAO,UAACC,QAAD,EAAc;AACpB,WAAOL,QAAQ,CAACG,MAAD,EAASC,GAAT,CAAR,CACLE,IADK,CACA,UAACC,MAAD,EAAY;AAEjBF,MAAAA,QAAQ,CAAC;AACRG,QAAAA,IAAI,EAAEP,WAAW,CAACQ,OADV;AAERC,QAAAA,OAAO,EAAEH,MAAM,CAACI,IAAP,CAAYA,IAFb;AAGRR,QAAAA,MAAM,EAAEA,MAHA;AAIRC,QAAAA,GAAG,EAAEA;AAJG,OAAD,CAAR;AAMA,KATK,WAUC,UAACQ,GAAD,EAAS;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,GAAjC;AACA,aAAOG,OAAO,CAACC,MAAR,CAAeJ,GAAf,CAAP;AACA,KAbK,CAAP;AAcA,GAfD;AAgBA,CAlBM;AAoBP,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AACpC,SAAO;AACNV,IAAAA,IAAI,EAAEP,WAAW,CAACkB,WADZ;AAEND,IAAAA,KAAK,EAALA;AAFM,GAAP;AAIA,CALM","sourcesContent":["import { getBlogs } from \"../../services/apis/blog\";\nimport * as actionTypes from \"./type\";\n\nexport const get = (pageNo, tag) => {\n\t\n\treturn (dispatch) => {\n\t\treturn getBlogs(pageNo, tag)\n\t\t\t.then((result) => {\n\t\t\t\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: actionTypes.GET_ALL,\n\t\t\t\t\tpayload: result.data.data,\n\t\t\t\t\tpageNo: pageNo,\n\t\t\t\t\ttag: tag,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(\"\tI got error here\", err);\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t};\n};\n\nexport const getArticle = (index) => {\n\treturn {\n\t\ttype: actionTypes.GET_ARTICLE,\n\t\tindex,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}