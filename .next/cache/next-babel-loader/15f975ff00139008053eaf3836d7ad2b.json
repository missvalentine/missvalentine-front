{"ast":null,"code":"var __jsx = React.createElement;\nimport dynamic from 'next/dynamic';\nimport React, { useState, useEffect } from \"react\";\nimport Head from \"next/head\";\nimport ReactSVG from \"react-svg\";\nconst Heading = dynamic(() => import(\"../../components/Heading\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../../components/Heading\")],\n    modules: [\"../../components/Heading\"]\n  }\n});\nimport projectSettings from \"../../constants/projectSettings\";\nimport \"../styles/app.scss\";\nconst Logo = dynamic(() => import(\"../Logo\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../Logo\")],\n    modules: [\"../Logo\"]\n  }\n});\nconst CartDrawer = dynamic(() => import(\"../CartDrawer\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../CartDrawer\")],\n    modules: [\"../CartDrawer\"]\n  }\n});\nimport { connect } from \"react-redux\";\nconst Drawer = dynamic(() => import(\"../Drawer\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../Drawer\")],\n    modules: [\"../Drawer\"]\n  }\n});\nconst Registration = dynamic(() => import(\"../popups/Registration\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../popups/Registration\")],\n    modules: [\"../popups/Registration\"]\n  }\n});\nconst ForgetPassword = dynamic(() => import(\"../popups/ForgetPassword\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../popups/ForgetPassword\")],\n    modules: [\"../popups/ForgetPassword\"]\n  }\n});\nconst Login = dynamic(() => import(\"../popups/Login\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../popups/Login\")],\n    modules: [\"../popups/Login\"]\n  }\n});\nimport { toggleRegBar } from \"../../redux/actions/drawers\";\nimport { Collapse } from \"reactstrap\";\n\nconst CheckoutLayout = ({\n  title,\n  children,\n  isRegOpen,\n  hasLogin,\n  toggleRegBar,\n  loginDisplay\n}) => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(true);\n  const {\n    0: windowWidth,\n    1: setWindowWidth\n  } = useState(false ? window.innerWidth : 0);\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      if (window.innerWidth !== windowWidth) {\n        setWindowWidth(window.innerWidth);\n        resetOpen(windowWidth, isOpen);\n      }\n    });\n    setWindowWidth(window.innerWidth);\n    resetOpen(windowWidth, isOpen);\n  }, [windowWidth]);\n  useEffect(() => {\n    window.myCallbackFunc = function () {};\n  });\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const resetOpen = (width = 0, isOpen) => {\n    if (width < 768) {\n      if (isOpen) setIsOpen(false);\n    } else {\n      if (!isOpen) setIsOpen(true);\n    }\n  };\n\n  const DrawerTitle = ({\n    onClose,\n    title\n  }) => __jsx(\"div\", {\n    className: \"c-drawer-title c-drawer__title\"\n  }, __jsx(\"div\", {\n    className: \"c-drawer-title__go-back-wrapper\"\n  }), __jsx(\"div\", {\n    className: \"c-drawer-title__header\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col\"\n  }, __jsx(Heading, {\n    parentClass: \"c-cart-title\",\n    className: \"c-cart-title__heading\",\n    versions: [\"default\", \"dark\", \"upper\"]\n  }, title)))));\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"c-checkout-layout container-fluid\"\n  }, __jsx(Head, null, __jsx(\"title\", null, title ? title : projectSettings.projectName), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  })), __jsx(\"div\", {\n    className: \"c-checkout-layout__row row\"\n  }, __jsx(\"div\", {\n    className: \"c-checkout-layout__main col-md-7 order-1 order-md-0 \"\n  }, __jsx(\"div\", {\n    className: \"d-none d-md-block c-checkout-layout__logo-wrapper\"\n  }, __jsx(Logo, {\n    full: true,\n    parentClass: \"c-checkout-layout\"\n  })), children), __jsx(\"div\", {\n    className: \"c-checkout-layout__cart-col col-md-4 order-0 order-md-1\"\n  }, __jsx(\"div\", {\n    className: \"d-block d-md-none\"\n  }, __jsx(\"div\", {\n    className: \"c-checkout-layout__logo-wrapper \"\n  }, __jsx(Logo, {\n    full: true,\n    parentClass: \"c-checkout-layout\"\n  })), __jsx(Heading, {\n    parentClass: \"c-heading d-block d-md-none c-checkout \",\n    versions: [\"upper\"]\n  }, \"Checkout\"), __jsx(\"div\", {\n    className: \"order-summary\"\n  }, __jsx(Heading, {\n    onClick: toggle,\n    parentClass: \"c-checkout-layout\",\n    versions: [\"medium\", \"black\"]\n  }, __jsx(\"span\", {\n    className: \"d-flex c-checkout-layout__btn \"\n  }, __jsx(ReactSVG, {\n    className: \"c-checkout-layout__cart-icon\",\n    src: \"/images/cart-icon-1.svg\"\n  }), \" \", \"Show order summary \", isOpen ? \"-\" : \"+\")))), __jsx(DrawerTitle, {\n    title: \"My Cart\"\n  }), __jsx(Collapse, {\n    isOpen: isOpen\n  }, __jsx(CartDrawer, {\n    complete: true\n  }))), __jsx(\"div\", {\n    className: \"c-checkout-layout col-md-1 order-3 order-md-3\"\n  })), __jsx(Drawer, {\n    onClose: toggleRegBar,\n    title: loginDisplay === \"register\" ? \"Registration\" : \"Login\",\n    visible: isRegOpen\n  }, loginDisplay === \"register\" && __jsx(Registration, null), loginDisplay === \"login\" && __jsx(Login, null), loginDisplay === \"forget\" && __jsx(ForgetPassword, null))));\n};\n\nconst mapStateToProps = state => ({\n  isRegOpen: state.drawers.isRegOpen,\n  hasLogin: state.drawers.hasLogin,\n  loginDisplay: state.drawers.toDisplay,\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  toggleRegBar\n})(CheckoutLayout);","map":null,"metadata":{},"sourceType":"module"}