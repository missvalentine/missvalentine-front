{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { getProductsByCategory } from \"../../services/extra/productHelpers\";\nimport { getVisibleProducts } from \"../../services/helpers/product\";\nimport { getAllProducts } from '../../services/api';\n\nvar ChatProductList = /*#__PURE__*/function (_Component) {\n  _inherits(ChatProductList, _Component);\n\n  var _super = _createSuper(ChatProductList);\n\n  function ChatProductList(props) {\n    var _this;\n\n    _classCallCheck(this, ChatProductList);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerNext\", function (e) {\n      _this.setState({\n        trigger: true\n      }, function () {\n        _this.props.triggerNextStep(e);\n      });\n    });\n\n    _this.state = {\n      products: getProductsByCategory(props.products, props.steps.categoryList.value),\n      isLoading: true,\n      selected: null\n    };\n    return _this;\n  }\n\n  _createClass(ChatProductList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getAllProducts().then(function (res) {\n        var products = getProductsByCategory(res.data.products || [], _this2.props.steps.categoryList.value);\n\n        _this2.setState({\n          products: getVisibleProducts(products),\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          selected = _this$state.selected,\n          isLoading = _this$state.isLoading,\n          products = _this$state.products;\n      return __jsx(\"div\", null, isLoading && \"...\", !isLoading && products.map(function (el, index) {\n        var productTitle = el.title ? el.title : el.productid && el.productid.producttitle;\n        return __jsx(\"p\", {\n          onClick: function onClick() {\n            if (!selected) {\n              _this3.setState({\n                selected: productTitle,\n                products: [el]\n              }, function () {\n                _this3.triggerNext({\n                  value: _objectSpread(_objectSpread({}, el), {}, {\n                    productTitle: productTitle\n                  })\n                });\n              });\n            }\n          },\n          className: classNames(\"chat-custom-option w-100\", {\n            selected: selected === productTitle\n          }),\n          key: index\n        }, productTitle);\n      }));\n    }\n  }]);\n\n  return ChatProductList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    products: state.products.products\n  };\n};\n\nexport default connect(mapStateToProps)(ChatProductList);","map":null,"metadata":{},"sourceType":"module"}