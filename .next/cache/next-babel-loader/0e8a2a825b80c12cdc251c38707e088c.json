{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_WISHLIST, UNSET_WISHLIST } from \"./type\";\n\nvar wishListParser = function wishListParser(wishList) {\n  return wishList.map(function (el) {\n    if (el.productDetails) {\n      var productDetails = el.productDetails;\n\n      if (productDetails.combo) {\n        var comboid = productDetails.comboid; // const productSlug = encodeUrlFn(comboid.title);\n\n        return _objectSpread(_objectSpread({}, el), {}, {\n          productDetails: _objectSpread(_objectSpread({}, productDetails), {}, {\n            comboid: _objectSpread({}, comboid)\n          })\n        });\n      } else if (productDetails.productid) {\n        var productid = productDetails.productid; // const productSlug = encodeUrlFn(productid.producttitle);\n\n        return _objectSpread(_objectSpread({}, el), {}, {\n          productDetails: _objectSpread(_objectSpread({}, productDetails), {}, {\n            productid: _objectSpread({}, productid)\n          })\n        });\n      } else {\n        return el;\n      }\n    }\n\n    return el;\n  });\n};\n\nexport var setWishList = function setWishList(wishList) {\n  return function (dispatch) {\n    var newWishList = wishListParser(wishList);\n    dispatch({\n      type: SET_WISHLIST,\n      payload: newWishList\n    });\n  };\n};\nexport var unsetWishList = function unsetWishList() {\n  return {\n    type: UNSET_WISHLIST,\n    payload: {}\n  };\n};","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missnew front/redux/actions/wishList.js"],"names":["SET_WISHLIST","UNSET_WISHLIST","wishListParser","wishList","map","el","productDetails","combo","comboid","productid","setWishList","dispatch","newWishList","type","payload","unsetWishList"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,cAAvB,QAA6C,QAA7C;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,QAAQ;AAAA,SAC7BA,QAAQ,CAACC,GAAT,CAAa,UAAAC,EAAE,EAAI;AACjB,QAAIA,EAAE,CAACC,cAAP,EAAuB;AAAA,UACbA,cADa,GACMD,EADN,CACbC,cADa;;AAErB,UAAIA,cAAc,CAACC,KAAnB,EAA0B;AAAA,YAChBC,OADgB,GACJF,cADI,CAChBE,OADgB,EAExB;;AACA,+CACKH,EADL;AAEEC,UAAAA,cAAc,kCACTA,cADS;AAEZE,YAAAA,OAAO,oBACFA,OADE;AAFK;AAFhB;AAUD,OAbD,MAaO,IAAIF,cAAc,CAACG,SAAnB,EAA8B;AAAA,YAC3BA,SAD2B,GACbH,cADa,CAC3BG,SAD2B,EAEnC;;AACA,+CACKJ,EADL;AAEEC,UAAAA,cAAc,kCACTA,cADS;AAEZG,YAAAA,SAAS,oBACJA,SADI;AAFG;AAFhB;AAUD,OAbM,MAaA;AACL,eAAOJ,EAAP;AACD;AACF;;AACD,WAAOA,EAAP;AACD,GAlCD,CAD6B;AAAA,CAA/B;;AAqCA,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAAAP,QAAQ;AAAA,SAAI,UAAAQ,QAAQ,EAAI;AACjD,QAAMC,WAAW,GAAGV,cAAc,CAACC,QAAD,CAAlC;AACAQ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEb,YADC;AAEPc,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GANkC;AAAA,CAA5B;AAOP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAO;AAClCF,IAAAA,IAAI,EAAEZ,cAD4B;AAElCa,IAAAA,OAAO,EAAE;AAFyB,GAAP;AAAA,CAAtB","sourcesContent":["import { SET_WISHLIST, UNSET_WISHLIST } from \"./type\";\n\nconst wishListParser = wishList =>\n  wishList.map(el => {\n    if (el.productDetails) {\n      const { productDetails } = el;\n      if (productDetails.combo) {\n        const { comboid } = productDetails;\n        // const productSlug = encodeUrlFn(comboid.title);\n        return {\n          ...el,\n          productDetails: {\n            ...productDetails,\n            comboid: {\n              ...comboid,\n            //   productSlug\n            }\n          }\n        };\n      } else if (productDetails.productid) {\n        const { productid } = productDetails;\n        // const productSlug = encodeUrlFn(productid.producttitle);\n        return {\n          ...el,\n          productDetails: {\n            ...productDetails,\n            productid: {\n              ...productid,\n            //   productSlug\n            }\n          }\n        };\n      } else {\n        return el;\n      }\n    }\n    return el;\n  });\n\nexport const setWishList = wishList => dispatch => {\n  const newWishList = wishListParser(wishList);\n  dispatch({\n    type: SET_WISHLIST,\n    payload: newWishList\n  });\n};\nexport const unsetWishList = () => ({\n  type: UNSET_WISHLIST,\n  payload: {}\n});\n"]},"metadata":{},"sourceType":"module"}