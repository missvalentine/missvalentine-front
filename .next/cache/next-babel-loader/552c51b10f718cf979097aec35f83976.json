{"ast":null,"code":"var _jsxFileName = \"/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/services/helpers/product.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { encodeUrlFn, getParentage, numberFormat } from \"./misc\";\nimport { variablePriceSet } from \"./cart\";\nexport const getProductImage = (product = {}, image = \"main\") => {\n  if (image === \"main\") {\n    if (product.productid) {\n      if (product.productid.featurefilepath) return product.productid.featurefilepath;\n    }\n\n    if (product.productId) {\n      if (product.productId.featurefilepath) return product.productId.featurefilepath;\n    }\n\n    if (product.featureimage) return product.featureimage;\n    if (product.galleryimgdetails) return product.galleryimgdetails[0];\n  }\n\n  if (image === \"sectionB\") {\n    if (product.productid) {\n      if (product.productid.sectionbimage) return product.productid.sectionbimage;\n    }\n\n    if (product.productId) {\n      if (product.productId.sectionbimage) return product.productId.sectionbimage;\n    }\n\n    if (product.sectionbimage) return product.sectionbimage;\n  }\n\n  return null;\n};\nexport const getProductImageArray = (product = {}) => {\n  let image = [];\n\n  if (product.productid) {\n    if (product.productid.featurefilepath) image = [...image, product.productid.featurefilepath];\n  }\n\n  if (product.featureimage) image = [...image, product.featureimage];\n  if (product.galleryimgdetails) image = [...image, ...product.galleryimgdetails];\n  return image;\n};\nexport const getProductAttributes = (product = {}, allProducts = []) => {\n  if (product.combo) {\n    return product.products.map(el => {\n      const {\n        combo_pid\n      } = el;\n      const thisProduct = allProducts.find(elx => elx._id === combo_pid);\n\n      if (thisProduct) {\n        return {\n          title: thisProduct.title || thisProduct.productid && thisProduct.productid.producttitle,\n          description: thisProduct.description || thisProduct.productid && thisProduct.productid.description\n        };\n      }\n\n      return null;\n    }).filter(el => el);\n  }\n\n  return product.attributecontent || [];\n};\nexport const getProductDescription = product => {\n  if (product) {\n    if (product.productid) {\n      return product.productid.description;\n    }\n\n    if (product.description) {\n      return product.description;\n    }\n  }\n\n  return \"\";\n};\nexport const getProductTitle = product => {\n  if (product) {\n    if (product.title) {\n      return product.title;\n    }\n\n    if (product.productid) {\n      return product.productid.producttitle;\n    }\n\n    if (product.producttitle) {\n      return product.producttitle;\n    }\n  }\n\n  return \"\";\n};\nexport const getProductShortDesc = product => {\n  if (product) {\n    if (product.sdescription) {\n      return product.sdescription;\n    }\n\n    if (product.productid) {\n      return product.productid.sdescription;\n    }\n  }\n\n  return \"\";\n}; //\n\nexport const filteredAttr = (variation, attr) => {\n  const attrX = variation.map(el => {\n    const {\n      sale_price,\n      sku,\n      bar,\n      regular_price\n    } = el,\n          rest = _objectWithoutProperties(el, [\"sale_price\", \"sku\", \"bar\", \"regular_price\"]);\n\n    return _objectSpread({}, rest);\n  });\n  const attrY = attrX.filter(el => Object.keys(el).length === attr.length);\n  const attrZ = removeDuplicateObjAr(attrY);\n  return attrZ;\n};\nexport const removeDuplicateObjAr = arr => arr.reduce((r, i) => !r.some(j => Object.keys(i).length === Object.keys(j).length && !Object.keys(i).some(k => i[k] !== j[k])) ? [...r, i] : r, []);\nexport const getAttrListing = (attr = []) => attr.length > 0 ? Object.keys(attr[0]).map(el => ({\n  names: el,\n  values: [...new Set(attr.map(elx => elx[el]))]\n})) : [];\nexport const getFeaturedProduct = (products = []) => {\n  const filterProduct = getVisibleProducts(products).filter(el => {\n    if (!el) return false;\n    if (el.featured !== true) return false;\n    return true;\n  });\n  return filterProduct;\n};\nexport const getVisibleProducts = (products = []) => {\n  const productsList = products.filter(el => {\n    if (!el) return false;\n    if (el.visibilitytype !== true) return false;\n    return true;\n  });\n  return productsList.map(el => {\n    if (el.combo) return el;\n\n    if (el.variation) {\n      const verifiedAttr = filteredAttr(el.variation, el.attributes);\n      return _objectSpread(_objectSpread({}, el), {}, {\n        verifiedAttr,\n        visibleAttrList: getAttrListing(verifiedAttr)\n      });\n    } else return el;\n  });\n};\nexport const generateProductSlug = product => {\n  const productSlug = product.title ? product.title.toLocaleLowerCase() : product.productid && product.productid.producttitle.toLocaleLowerCase();\n  return encodeUrlFn(productSlug);\n};\nexport const addSlugToProduct = product => _objectSpread(_objectSpread({}, product), {}, {\n  productImage: getProductImage(product),\n  productSlug: generateProductSlug(product)\n});\nexport const getCategoriesProducts = products => {\n  const productsN = products.filter(el => el.categoryid);\n  const combos = products.filter(el => el.combo);\n  const filtered = productsN.map(el => {\n    return productsN.filter(elx => {\n      if (el.categoryid[0] && elx.categoryid[0]) return el.categoryid[0]._id === elx.categoryid[0]._id;\n      return false;\n    });\n  }).sort((a, b) => {\n    if (a[0] && b[0]) if (a[0].categoryid[0] && b[0].categoryid[0]) {\n      if (a[0].categoryid[0]._id < b[0].categoryid[0]._id) return -1;\n      if (a[0].categoryid[0]._id > b[0].categoryid[0]._id) return 1;\n    }\n    return 0;\n  });\n  const productsF = filtered.filter((el, x) => {\n    if (x === 0) return true;\n\n    if (filtered[x - 1] && el[0]) {\n      if (filtered[x - 1][0]) {\n        if (filtered[x - 1][0].categoryid[0] && el[0].categoryid[0]) {\n          const prevEl = filtered[x - 1][0].categoryid[0]._id;\n          const currentEl = el[0].categoryid[0]._id;\n          return prevEl !== currentEl;\n        }\n      }\n    }\n\n    return false; // const prevEl = filtered[x - 1][0].categoryid[0]._id;\n    // const currentEl = el[0].categoryid[0]._id;\n    // return prevEl !== currentEl;\n  });\n  const cate = [...productsF, combos];\n  return cate.map(el => {\n    if (el.length) {\n      if (el[0].combo) {\n        return {\n          category: {\n            blockedcountries: [],\n            catdescription: \"Bundles\",\n            categoryid: \"Bundles\",\n            categoryslug: \"Bundles\",\n            categorytitle: \"Bundles\",\n            _id: \"Bundles\",\n            products: el\n          },\n          products: el\n        };\n      }\n\n      return {\n        category: _objectSpread(_objectSpread({}, el[0].categoryid[0]), {}, {\n          products: el\n        }),\n        products: el\n      };\n    }\n\n    return null;\n  }).filter(el => el);\n};\nexport const getProductPrice = (product, qty, state) => {\n  var {\n    sale_price,\n    regular_price,\n    subscribeChecked,\n    subscribeDiscount\n  } = state;\n\n  if (product.producttype === \"simple\" || product.combo === true) {\n    sale_price = product.dsaleprice;\n    regular_price = product.dregularprice;\n  }\n\n  let value = 0;\n  const qtyVal = qty ? parseInt(qty) > 0 ? parseInt(qty) : 1 : 1;\n  let currency = `$`;\n\n  if (sale_price) {\n    value = sale_price;\n  } else if (regular_price) {\n    value = regular_price;\n  }\n\n  if (value) {\n    if (subscribeChecked) {\n      const discount = subscribeDiscount;\n      const cutPrice = value - getParentage(parseFloat(discount), value);\n\n      if (onlyNew) {\n        return __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 11\n          }\n        }, \" \" + currency, (cutPrice * qtyVal).toFixed(2));\n      }\n\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 9\n        }\n      }, \" \" + currency, __jsx(\"strike\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }\n      }, numberFormat(value * qtyVal)), \" \", (cutPrice * qtyVal).toFixed(2)); // `${currency}${basicFunction.nombarFormat(value * qtyVal)}`\n    }\n\n    return ` ${currency}${basicFunction.numberFormat(value * qtyVal)}`;\n  }\n\n  return ``;\n};\nexport const getBasicPrice = product => {\n  const {\n    verifiedAttr,\n    variation,\n    combo,\n    producttype\n  } = product;\n\n  if (combo || producttype !== \"variable\") {\n    return {\n      regular_price: product.dregularprice,\n      sale_price: product.dsaleprice\n    };\n  }\n\n  if (verifiedAttr) {\n    if (verifiedAttr.constructor === Array) {\n      if (verifiedAttr.length > 0) {\n        const findItem = variation.find(el => {\n          const keyList = Object.keys(verifiedAttr[0]);\n          const flag = keyList.every(elx => el[elx]);\n          return flag;\n        });\n\n        if (findItem) {\n          const {\n            regular_price,\n            sale_price\n          } = findItem;\n          return {\n            regular_price,\n            sale_price\n          };\n        }\n      }\n    }\n  }\n\n  return {\n    regular_price: 0,\n    sale_price: 0\n  };\n};\nexport const directAddToCart = (product, qty = 1) => {\n  const {\n    verifiedAttr\n  } = product;\n  const arr = verifiedAttr && verifiedAttr.constructor === Array ? verifiedAttr.map(el => {\n    const keys = Object.keys(el);\n    return keys.map(elx => {\n      return {\n        [elx]: {\n          label: el[elx],\n          value: el[elx]\n        }\n      };\n    });\n  }) : [];\n  const obj = arr.map(el => {\n    return el.reduce((a, b) => {\n      return _objectSpread(_objectSpread({}, a), b);\n    }, {});\n  });\n  const newVariation = obj && obj.length ? _objectSpread({}, obj[0]) : {};\n  return variablePriceSet(_objectSpread(_objectSpread(_objectSpread({}, product), newVariation), {}, {\n    qty\n  }));\n};","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/services/helpers/product.js"],"names":["encodeUrlFn","getParentage","numberFormat","variablePriceSet","getProductImage","product","image","productid","featurefilepath","productId","featureimage","galleryimgdetails","sectionbimage","getProductImageArray","getProductAttributes","allProducts","combo","products","map","el","combo_pid","thisProduct","find","elx","_id","title","producttitle","description","filter","attributecontent","getProductDescription","getProductTitle","getProductShortDesc","sdescription","filteredAttr","variation","attr","attrX","sale_price","sku","bar","regular_price","rest","attrY","Object","keys","length","attrZ","removeDuplicateObjAr","arr","reduce","r","i","some","j","k","getAttrListing","names","values","Set","getFeaturedProduct","filterProduct","getVisibleProducts","featured","productsList","visibilitytype","verifiedAttr","attributes","visibleAttrList","generateProductSlug","productSlug","toLocaleLowerCase","addSlugToProduct","productImage","getCategoriesProducts","productsN","categoryid","combos","filtered","sort","a","b","productsF","x","prevEl","currentEl","cate","category","blockedcountries","catdescription","categoryslug","categorytitle","getProductPrice","qty","state","subscribeChecked","subscribeDiscount","producttype","dsaleprice","dregularprice","value","qtyVal","parseInt","currency","discount","cutPrice","parseFloat","onlyNew","toFixed","basicFunction","getBasicPrice","constructor","Array","findItem","keyList","flag","every","directAddToCart","label","obj","newVariation"],"mappings":"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","sourcesContent":["import { encodeUrlFn, getParentage, numberFormat } from \"./misc\";\nimport { variablePriceSet } from \"./cart\";\nexport const getProductImage = (product = {}, image = \"main\") => {\n  if (image === \"main\") {\n    if (product.productid) {\n      if (product.productid.featurefilepath)\n        return product.productid.featurefilepath;\n    }\n    if (product.productId) {\n      if (product.productId.featurefilepath)\n        return product.productId.featurefilepath;\n    }\n    if (product.featureimage) return product.featureimage;\n    if (product.galleryimgdetails) return product.galleryimgdetails[0];\n  }\n  if (image === \"sectionB\") {\n    if (product.productid) {\n      if (product.productid.sectionbimage)\n        return product.productid.sectionbimage;\n    }\n    if (product.productId) {\n      if (product.productId.sectionbimage)\n        return product.productId.sectionbimage;\n    }\n\n    if (product.sectionbimage) return product.sectionbimage;\n  }\n  return null;\n};\nexport const getProductImageArray = (product = {}) => {\n  let image = [];\n  if (product.productid) {\n    if (product.productid.featurefilepath)\n      image = [...image, product.productid.featurefilepath];\n  }\n  if (product.featureimage) image = [...image, product.featureimage];\n  if (product.galleryimgdetails)\n    image = [...image, ...product.galleryimgdetails];\n  return image;\n};\nexport const getProductAttributes = (product = {}, allProducts = []) => {\n  if (product.combo) {\n    return product.products\n      .map((el) => {\n        const { combo_pid } = el;\n        const thisProduct = allProducts.find((elx) => elx._id === combo_pid);\n        if (thisProduct) {\n          return {\n            title:\n              thisProduct.title ||\n              (thisProduct.productid && thisProduct.productid.producttitle),\n            description:\n              thisProduct.description ||\n              (thisProduct.productid && thisProduct.productid.description),\n          };\n        }\n        return null;\n      })\n      .filter((el) => el);\n  }\n  return product.attributecontent || [];\n};\nexport const getProductDescription = (product) => {\n  if (product) {\n    if (product.productid) {\n      return product.productid.description;\n    }\n    if (product.description) {\n      return product.description;\n    }\n  }\n  return \"\";\n};\nexport const getProductTitle = (product) => {\n  if (product) {\n    if (product.title) {\n      return product.title;\n    }\n    if (product.productid) {\n      return product.productid.producttitle;\n    }\n    if (product.producttitle) {\n      return product.producttitle;\n    }\n  }\n  return \"\";\n};\nexport const getProductShortDesc = (product) => {\n  if (product) {\n    if (product.sdescription) {\n      return product.sdescription;\n    }\n    if (product.productid) {\n      return product.productid.sdescription;\n    }\n  }\n  return \"\";\n};\n\n//\n\nexport const filteredAttr = (variation, attr) => {\n  const attrX = variation.map((el) => {\n    const { sale_price, sku, bar, regular_price, ...rest } = el;\n    return {\n      ...rest,\n    };\n  });\n  const attrY = attrX.filter((el) => Object.keys(el).length === attr.length);\n  const attrZ = removeDuplicateObjAr(attrY);\n\n  return attrZ;\n};\n\nexport const removeDuplicateObjAr = (arr) =>\n  arr.reduce(\n    (r, i) =>\n      !r.some(\n        (j) =>\n          Object.keys(i).length === Object.keys(j).length &&\n          !Object.keys(i).some((k) => i[k] !== j[k])\n      )\n        ? [...r, i]\n        : r,\n    []\n  );\n\nexport const getAttrListing = (attr = []) =>\n  attr.length > 0\n    ? Object.keys(attr[0]).map((el) => ({\n        names: el,\n        values: [...new Set(attr.map((elx) => elx[el]))],\n      }))\n    : [];\nexport const getFeaturedProduct = (products = []) => {\n  const filterProduct = getVisibleProducts(products).filter((el) => {\n    if (!el) return false;\n    if (el.featured !== true) return false;\n\n    return true;\n  });\n\n  return filterProduct;\n};\nexport const getVisibleProducts = (products = []) => {\n  const productsList = products.filter((el) => {\n    if (!el) return false;\n    if (el.visibilitytype !== true) return false;\n\n    return true;\n  });\n  return productsList.map((el) => {\n    if (el.combo) return el;\n    if (el.variation) {\n      const verifiedAttr = filteredAttr(el.variation, el.attributes);\n      return {\n        ...el,\n        verifiedAttr,\n        visibleAttrList: getAttrListing(verifiedAttr),\n      };\n    } else return el;\n  });\n};\n\nexport const generateProductSlug = (product) => {\n  const productSlug = product.title\n    ? product.title.toLocaleLowerCase()\n    : product.productid && product.productid.producttitle.toLocaleLowerCase();\n\n  return encodeUrlFn(productSlug);\n};\nexport const addSlugToProduct = (product) => ({\n  ...product,\n  productImage: getProductImage(product),\n  productSlug: generateProductSlug(product),\n});\n\nexport const getCategoriesProducts = (products) => {\n  const productsN = products.filter((el) => el.categoryid);\n  const combos = products.filter((el) => el.combo);\n\n  const filtered = productsN\n    .map((el) => {\n      return productsN.filter((elx) => {\n        if (el.categoryid[0] && elx.categoryid[0])\n          return el.categoryid[0]._id === elx.categoryid[0]._id;\n\n        return false;\n      });\n    })\n    .sort((a, b) => {\n      if (a[0] && b[0])\n        if (a[0].categoryid[0] && b[0].categoryid[0]) {\n          if (a[0].categoryid[0]._id < b[0].categoryid[0]._id) return -1;\n          if (a[0].categoryid[0]._id > b[0].categoryid[0]._id) return 1;\n        }\n      return 0;\n    });\n\n  const productsF = filtered.filter((el, x) => {\n    if (x === 0) return true;\n    if (filtered[x - 1] && el[0]) {\n      if (filtered[x - 1][0]) {\n        if (filtered[x - 1][0].categoryid[0] && el[0].categoryid[0]) {\n          const prevEl = filtered[x - 1][0].categoryid[0]._id;\n          const currentEl = el[0].categoryid[0]._id;\n          return prevEl !== currentEl;\n        }\n      }\n    }\n    return false;\n    // const prevEl = filtered[x - 1][0].categoryid[0]._id;\n    // const currentEl = el[0].categoryid[0]._id;\n\n    // return prevEl !== currentEl;\n  });\n  const cate = [...productsF, combos];\n  return cate\n    .map((el) => {\n      if (el.length) {\n        if (el[0].combo) {\n          return {\n            category: {\n              blockedcountries: [],\n              catdescription: \"Bundles\",\n              categoryid: \"Bundles\",\n              categoryslug: \"Bundles\",\n              categorytitle: \"Bundles\",\n              _id: \"Bundles\",\n              products: el,\n            },\n            products: el,\n          };\n        }\n        return {\n          category: {\n            ...el[0].categoryid[0],\n            products: el,\n          },\n          products: el,\n        };\n      }\n      return null;\n    })\n    .filter((el) => el);\n};\n\nexport const getProductPrice = (product, qty, state) => {\n  var {\n    sale_price,\n    regular_price,\n    subscribeChecked,\n    subscribeDiscount,\n  } = state;\n  if (product.producttype === \"simple\" || product.combo === true) {\n    sale_price = product.dsaleprice;\n    regular_price = product.dregularprice;\n  }\n  let value = 0;\n  const qtyVal = qty ? (parseInt(qty) > 0 ? parseInt(qty) : 1) : 1;\n  let currency = `$`;\n  if (sale_price) {\n    value = sale_price;\n  } else if (regular_price) {\n    value = regular_price;\n  }\n  if (value) {\n    if (subscribeChecked) {\n      const discount = subscribeDiscount;\n\n      const cutPrice = value - getParentage(parseFloat(discount), value);\n      if (onlyNew) {\n        return (\n          <span>\n            {\" \" + currency}\n            {(cutPrice * qtyVal).toFixed(2)}\n          </span>\n        );\n      }\n      return (\n        <span>\n          {\" \" + currency}\n          <strike>{numberFormat(value * qtyVal)}</strike>{\" \"}\n          {(cutPrice * qtyVal).toFixed(2)}\n        </span>\n      );\n\n      // `${currency}${basicFunction.nombarFormat(value * qtyVal)}`\n    }\n    return ` ${currency}${basicFunction.numberFormat(value * qtyVal)}`;\n  }\n  return ``;\n};\n\nexport const getBasicPrice = (product) => {\n  const { verifiedAttr, variation, combo, producttype } = product;\n  if (combo || producttype !== \"variable\") {\n    return {\n      regular_price: product.dregularprice,\n      sale_price: product.dsaleprice,\n    };\n  }\n  if (verifiedAttr) {\n    if (verifiedAttr.constructor === Array) {\n      if (verifiedAttr.length > 0) {\n        const findItem = variation.find((el) => {\n          const keyList = Object.keys(verifiedAttr[0]);\n          const flag = keyList.every((elx) => el[elx]);\n          return flag;\n        });\n        if (findItem) {\n          const { regular_price, sale_price } = findItem;\n          return {\n            regular_price,\n            sale_price,\n          };\n        }\n      }\n    }\n  }\n  return {\n    regular_price: 0,\n    sale_price: 0,\n  };\n};\n\nexport const directAddToCart = (product, qty = 1) => {\n  const { verifiedAttr } = product;\n  const arr =\n    verifiedAttr && verifiedAttr.constructor === Array\n      ? verifiedAttr.map((el) => {\n          const keys = Object.keys(el);\n          return keys.map((elx) => {\n            return {\n              [elx]: {\n                label: el[elx],\n                value: el[elx],\n              },\n            };\n          });\n        })\n      : [];\n  const obj = arr.map((el) => {\n    return el.reduce((a, b) => {\n      return { ...a, ...b };\n    }, {});\n  });\n\n  const newVariation =\n    obj && obj.length\n      ? {\n          ...obj[0],\n        }\n      : {};\n  return variablePriceSet({\n    ...product,\n    ...newVariation,\n    qty,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}