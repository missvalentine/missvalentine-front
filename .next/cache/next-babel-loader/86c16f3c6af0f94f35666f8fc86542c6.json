{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport Router from \"next/router\";\nimport moment from \"moment\";\nimport { projectName } from \"../../constants/projectSettings\";\n\nvar Success = /*#__PURE__*/function (_Component) {\n  _inherits(Success, _Component);\n\n  var _super = _createSuper(Success);\n\n  function Success() {\n    var _this;\n\n    _classCallCheck(this, Success);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"saveAndContinue\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        isConfirmed: true\n      }); // this.props.nextStep()\n      //@shubham Do the api call here\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"back\", function (e) {\n      e.preventDefault();\n      if (typeof _this.props.prevStep === \"function\") _this.props.prevStep();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"goToShop\", function () {\n      Router.push(\"/shop\");\n    });\n\n    _this.state = {\n      isConfirmed: false\n    };\n    return _this;\n  }\n\n  _createClass(Success, [{\n    key: \"render\",\n    value: function render() {\n      var isConfirmed = this.state.isConfirmed;\n      var _this$props$values = this.props.values,\n          firstName = _this$props$values.firstName,\n          lastName = _this$props$values.lastName,\n          phoneNumber = _this$props$values.phoneNumber,\n          zipCode = _this$props$values.zipCode,\n          state = _this$props$values.state,\n          weight = _this$props$values.weight,\n          age = _this$props$values.age,\n          notes = _this$props$values.notes;\n      var time = moment(this.props.currentAppointment.bookedFor).format(\"MMM DD, hh:mm:a\");\n      return __jsx(\"div\", {\n        className: \"c-confirmation\"\n      }, __jsx(\"div\", {\n        className: \"container-fluid\"\n      }, __jsx(\"div\", {\n        className: \"consult-success-wrapper\"\n      }, __jsx(\"h1\", {\n        className: \"c-confirmation__center c-confirmation__center--heading\"\n      }, !isConfirmed ? \"Confirm your Appointment\" : \"Your Appointment has been confirmed!\"), !isConfirmed && __jsx(\"p\", {\n        className: \"c-confirmation__center\"\n      }, \"Your Appointment with\", \" \", __jsx(\"b\", null, this.props.currentAppointment.doctorName), \", scheduled for\", \" \", __jsx(\"b\", null, time), \" is waiting for a confirmation.\"), !isConfirmed && __jsx(\"p\", {\n        className: \"c-confirmation__center\"\n      }, \"Thank you for choosing \", projectName), !isConfirmed && __jsx(React.Fragment, null, firstName, lastName, phoneNumber, zipCode, __jsx(\"div\", {\n        className: \"c-personalDetails__btn-wrap\"\n      }, __jsx(Button, {\n        className: \"c-btn c-btn--dark\",\n        onClick: this.back\n      }, \"Back\"), __jsx(Button, {\n        className: \"c-btn c-btn--dark\",\n        onClick: this.saveAndContinue\n      }, \"Confirm Appointment\"))), isConfirmed && __jsx(\"div\", {\n        className: \"c-personalDetails__btn-wrap justify-content-around\"\n      }, __jsx(Button, {\n        className: \"c-btn c-btn--dark\",\n        onClick: this.goToShop\n      }, \"Continue Shopping\")))));\n    }\n  }]);\n\n  return Success;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentAppointment: state.appointment.currentAppointment\n  };\n};\n\nexport default connect(mapStateToProps)(Success);","map":null,"metadata":{},"sourceType":"module"}