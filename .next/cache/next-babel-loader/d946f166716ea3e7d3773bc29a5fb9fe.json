{"ast":null,"code":"var __jsx = React.createElement;\nimport dynamic from 'next/dynamic';\nimport React, { useState, useEffect } from \"react\";\nimport Head from \"next/head\";\nimport ReactSVG from \"react-svg\";\nvar Heading = dynamic(function () {\n  return import(\"../../components/Heading\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../../components/Heading\")];\n    },\n    modules: [\"../../components/Heading\"]\n  }\n});\nimport projectSettings from \"../../constants/projectSettings\";\nimport \"../styles/app.scss\";\nvar Logo = dynamic(function () {\n  return import(\"../Logo\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../Logo\")];\n    },\n    modules: [\"../Logo\"]\n  }\n});\nvar CartDrawer = dynamic(function () {\n  return import(\"../CartDrawer\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../CartDrawer\")];\n    },\n    modules: [\"../CartDrawer\"]\n  }\n});\nimport { connect } from \"react-redux\";\nvar Drawer = dynamic(function () {\n  return import(\"../Drawer\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../Drawer\")];\n    },\n    modules: [\"../Drawer\"]\n  }\n});\nvar Registration = dynamic(function () {\n  return import(\"../popups/Registration\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../popups/Registration\")];\n    },\n    modules: [\"../popups/Registration\"]\n  }\n});\nvar ForgetPassword = dynamic(function () {\n  return import(\"../popups/ForgetPassword\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../popups/ForgetPassword\")];\n    },\n    modules: [\"../popups/ForgetPassword\"]\n  }\n});\nvar Login = dynamic(function () {\n  return import(\"../popups/Login\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../popups/Login\")];\n    },\n    modules: [\"../popups/Login\"]\n  }\n});\nimport { toggleRegBar } from \"../../redux/actions/drawers\";\nimport { Collapse } from \"reactstrap\";\n\nvar CheckoutLayout = function CheckoutLayout(_ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      isRegOpen = _ref.isRegOpen,\n      hasLogin = _ref.hasLogin,\n      toggleRegBar = _ref.toggleRegBar,\n      loginDisplay = _ref.loginDisplay;\n\n  var _useState = useState(true),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var _useState2 = useState(true ? window.innerWidth : 0),\n      windowWidth = _useState2[0],\n      setWindowWidth = _useState2[1];\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", function () {\n      if (window.innerWidth !== windowWidth) {\n        setWindowWidth(window.innerWidth);\n        resetOpen(windowWidth, isOpen);\n      }\n    });\n    setWindowWidth(window.innerWidth);\n    resetOpen(windowWidth, isOpen);\n  }, [windowWidth]);\n  useEffect(function () {\n    window.myCallbackFunc = function () {};\n  });\n\n  var toggle = function toggle() {\n    return setIsOpen(!isOpen);\n  };\n\n  var resetOpen = function resetOpen() {\n    var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var isOpen = arguments.length > 1 ? arguments[1] : undefined;\n\n    if (width < 768) {\n      if (isOpen) setIsOpen(false);\n    } else {\n      if (!isOpen) setIsOpen(true);\n    }\n  };\n\n  var DrawerTitle = function DrawerTitle(_ref2) {\n    var onClose = _ref2.onClose,\n        title = _ref2.title;\n    return __jsx(\"div\", {\n      className: \"c-drawer-title c-drawer__title\"\n    }, __jsx(\"div\", {\n      className: \"c-drawer-title__go-back-wrapper\"\n    }), __jsx(\"div\", {\n      className: \"c-drawer-title__header\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col\"\n    }, __jsx(Heading, {\n      parentClass: \"c-cart-title\",\n      className: \"c-cart-title__heading\",\n      versions: [\"default\", \"dark\", \"upper\"]\n    }, title)))));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"c-checkout-layout container-fluid\"\n  }, __jsx(Head, null, __jsx(\"title\", null, title ? title : projectSettings.projectName), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  })), __jsx(\"div\", {\n    className: \"c-checkout-layout__row row\"\n  }, __jsx(\"div\", {\n    className: \"c-checkout-layout__main col-md-7 order-1 order-md-0 \"\n  }, __jsx(\"div\", {\n    className: \"d-none d-md-block c-checkout-layout__logo-wrapper\"\n  }, __jsx(Logo, {\n    full: true,\n    parentClass: \"c-checkout-layout\"\n  })), children), __jsx(\"div\", {\n    className: \"c-checkout-layout__cart-col col-md-4 order-0 order-md-1\"\n  }, __jsx(\"div\", {\n    className: \"d-block d-md-none\"\n  }, __jsx(\"div\", {\n    className: \"c-checkout-layout__logo-wrapper \"\n  }, __jsx(Logo, {\n    full: true,\n    parentClass: \"c-checkout-layout\"\n  })), __jsx(Heading, {\n    parentClass: \"c-heading d-block d-md-none c-checkout \",\n    versions: [\"upper\"]\n  }, \"Checkout\"), __jsx(\"div\", {\n    className: \"order-summary\"\n  }, __jsx(Heading, {\n    onClick: toggle,\n    parentClass: \"c-checkout-layout\",\n    versions: [\"medium\", \"black\"]\n  }, __jsx(\"span\", {\n    className: \"d-flex c-checkout-layout__btn \"\n  }, __jsx(ReactSVG, {\n    className: \"c-checkout-layout__cart-icon\",\n    src: \"/images/cart-icon-1.svg\"\n  }), \" \", \"Show order summary \", isOpen ? \"-\" : \"+\")))), __jsx(DrawerTitle, {\n    title: \"My Cart\"\n  }), __jsx(Collapse, {\n    isOpen: isOpen\n  }, __jsx(CartDrawer, {\n    complete: true\n  }))), __jsx(\"div\", {\n    className: \"c-checkout-layout col-md-1 order-3 order-md-3\"\n  })), __jsx(Drawer, {\n    onClose: toggleRegBar,\n    title: loginDisplay === \"register\" ? \"Registration\" : \"Login\",\n    visible: isRegOpen\n  }, loginDisplay === \"register\" && __jsx(Registration, null), loginDisplay === \"login\" && __jsx(Login, null), loginDisplay === \"forget\" && __jsx(ForgetPassword, null))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isRegOpen: state.drawers.isRegOpen,\n    hasLogin: state.drawers.hasLogin,\n    loginDisplay: state.drawers.toDisplay,\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleRegBar: toggleRegBar\n})(CheckoutLayout);","map":null,"metadata":{},"sourceType":"module"}