{"ast":null,"code":"var _jsxFileName = \"/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/components/chatBot/ChatUserOneRet.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ChatMsgList from \"./ChatMsgList\";\nimport { getOrders } from \"../../services/api\";\nconst chatMsgList = new ChatMsgList();\nconst {\n  getWrongTextMsg,\n  msgAfterShopSelect,\n  msgAfterTrackSelect,\n  msgAfterTrackSelectNoOrder,\n  msgTrackNow\n} = chatMsgList;\n\nclass ChatUserOneRet extends Component {\n  constructor() {\n    super();\n    this.state = {\n      msg: \"...\"\n    };\n  }\n\n  componentDidMount() {\n    const {\n      steps,\n      triggerNextStep\n    } = this.props;\n    const msg = steps.userOne.message.toLocaleLowerCase();\n\n    if (msg.includes(\"place\")) {\n      this.setState({\n        msg: msgAfterShopSelect()\n      }, () => {\n        triggerNextStep({\n          value: \"\",\n          trigger: \"categoryList\"\n        });\n      });\n    } else if (msg.includes(\"track\")) {\n      const {\n        user\n      } = this.props;\n\n      if (user._id) {\n        if (user.userMetaId) {\n          getOrders(user.userMetaId).then(res => {\n            const resJson = res.data;\n\n            if (resJson.status) {\n              const orderList = resJson.orders.sort(function (a, b) {\n                return new Date(b.createdOn) - new Date(a.createdOn);\n              });\n\n              if (orderList.length > 0) {\n                this.setState({\n                  msg: msgAfterTrackSelect()\n                }, () => {\n                  triggerNextStep({\n                    value: \"\",\n                    trigger: \"trackNowLogin\"\n                  });\n                });\n              } else {\n                this.setState({\n                  msg: msgAfterTrackSelectNoOrder()\n                }, () => {\n                  triggerNextStep({\n                    value: \"\",\n                    trigger: \"firstOptions\"\n                  });\n                });\n              }\n            }\n          }).catch(err => {\n            this.setState({\n              msg: msgAfterTrackSelect()\n            }, () => {\n              triggerNextStep({\n                value: \"\",\n                trigger: \"trackNowLogin\"\n              });\n            });\n            console.log({\n              err\n            });\n          });\n        }\n      } else {\n        this.setState({\n          msg: msgTrackNow()\n        }, () => {\n          triggerNextStep({\n            value: \"\",\n            trigger: \"trackNow\"\n          });\n        });\n      }\n    } else {\n      this.setState({\n        msg: getWrongTextMsg()\n      }, () => {\n        triggerNextStep({\n          value: \"\",\n          trigger: \"shopSelected\"\n        });\n      });\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 12\n      }\n    }, this.state.msg);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(ChatUserOneRet);","map":{"version":3,"sources":["/Users/akshataggarwal/Documents/Coding Files/webd projects/missvalentine-front/components/chatBot/ChatUserOneRet.js"],"names":["React","Component","connect","ChatMsgList","getOrders","chatMsgList","getWrongTextMsg","msgAfterShopSelect","msgAfterTrackSelect","msgAfterTrackSelectNoOrder","msgTrackNow","ChatUserOneRet","constructor","state","msg","componentDidMount","steps","triggerNextStep","props","userOne","message","toLocaleLowerCase","includes","setState","value","trigger","user","_id","userMetaId","then","res","resJson","data","status","orderList","orders","sort","a","b","Date","createdOn","length","catch","err","console","log","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ChatMsgList from \"./ChatMsgList\";\nimport { getOrders } from \"../../services/api\";\n\nconst chatMsgList = new ChatMsgList();\nconst {\n  getWrongTextMsg,\n  msgAfterShopSelect,\n  msgAfterTrackSelect,\n  msgAfterTrackSelectNoOrder,\n  msgTrackNow\n} = chatMsgList;\n\nclass ChatUserOneRet extends Component {\n  constructor() {\n    super();\n    this.state = {\n      msg: \"...\"\n    };\n  }\n  componentDidMount() {\n    const { steps, triggerNextStep } = this.props;\n    const msg = steps.userOne.message.toLocaleLowerCase();\n    if (msg.includes(\"place\")) {\n      this.setState(\n        {\n          msg: msgAfterShopSelect()\n        },\n        () => {\n          triggerNextStep({\n            value: \"\",\n            trigger: \"categoryList\"\n          });\n        }\n      );\n    } else if (msg.includes(\"track\")) {\n      const { user } = this.props;\n\n      if (user._id) {\n        if (user.userMetaId) {\n          getOrders(user.userMetaId)\n            .then(res => {\n              const resJson = res.data\n              if (resJson.status) {\n                const orderList = resJson.orders.sort(function(a, b) {\n                  return new Date(b.createdOn) - new Date(a.createdOn);\n                });\n                if (orderList.length > 0) {\n                  this.setState(\n                    {\n                      msg: msgAfterTrackSelect()\n                    },\n                    () => {\n                      triggerNextStep({\n                        value: \"\",\n                        trigger: \"trackNowLogin\"\n                      });\n                    }\n                  );\n                } else {\n                  this.setState(\n                    {\n                      msg: msgAfterTrackSelectNoOrder()\n                    },\n                    () => {\n                      triggerNextStep({\n                        value: \"\",\n                        trigger: \"firstOptions\"\n                      });\n                    }\n                  );\n                }\n              }\n            })\n            .catch(err => {\n              this.setState(\n                {\n                  msg: msgAfterTrackSelect()\n                },\n                () => {\n                  triggerNextStep({\n                    value: \"\",\n                    trigger: \"trackNowLogin\"\n                  });\n                }\n              );\n              console.log({ err });\n            });\n        }\n      } else {\n        this.setState(\n          {\n            msg: msgTrackNow()\n          },\n          () => {\n            triggerNextStep({\n              value: \"\",\n              trigger: \"trackNow\"\n            });\n          }\n        );\n      }\n    } else {\n      this.setState(\n        {\n          msg: getWrongTextMsg()\n        },\n        () => {\n          triggerNextStep({\n            value: \"\",\n            trigger: \"shopSelected\"\n          });\n        }\n      );\n    }\n  }\n  render() {\n    return <div>{this.state.msg}</div>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\nexport default connect(mapStateToProps)(ChatUserOneRet);\n"]},"metadata":{},"sourceType":"module"}