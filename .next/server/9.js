exports.ids = [9];
exports.modules = {

/***/ "./components/chatBot/ChatProductCard.js":
/*!***********************************************!*\
  !*** ./components/chatBot/ChatProductCard.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ \"react-redux\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _constants_projectSettings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constants/projectSettings */ \"./constants/projectSettings.js\");\n/* harmony import */ var _services_extra__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/extra */ \"./services/extra/index.js\");\n/* harmony import */ var _services_extra_basicFunction__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/extra/basicFunction */ \"./services/extra/basicFunction.js\");\n/* harmony import */ var _redux_actions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../redux/actions */ \"./redux/actions/index.js\");\n/* harmony import */ var _services_helpers_product__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../services/helpers/product */ \"./services/helpers/product.js\");\n/* harmony import */ var react_lazy_load_image_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-lazy-load-image-component */ \"react-lazy-load-image-component\");\n/* harmony import */ var react_lazy_load_image_component__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react_lazy_load_image_component__WEBPACK_IMPORTED_MODULE_8__);\nvar _jsxFileName = \"/Users/akshataggarwal/Documents/Coding Files/webd projects/missnew front/components/chatBot/ChatProductCard.js\";\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\nconst basicFunction = new _services_extra_basicFunction__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\n\nclass ChatProductCard extends react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"] {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"addToCart\", product => {\n      const {\n        addToCart,\n        toggleCartBar,\n        isOpen\n      } = this.props;\n      addToCart(product);\n      if (!isOpen) toggleCartBar();\n    });\n\n    _defineProperty(this, \"triggerNext\", e => {\n      const {\n        triggerNextStep\n      } = this.props;\n      triggerNextStep();\n    });\n\n    this.state = {\n      selected: false\n    };\n  }\n\n  render() {\n    const {\n      value: product,\n      countryCode\n    } = this.props.steps.products;\n    if (!product) return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 26\n      }\n    });\n    const productLink = `/shop/${Object(_services_helpers_product__WEBPACK_IMPORTED_MODULE_7__[\"getProductTitle\"])(product).replace(/ /g, \"-\")}`;\n    const productTitle = product.title ? product.title : product.productid && product.productid.producttitle;\n    const productImage = product.featureimage ? product.featureimage : product.productid && product.productid.featurefilepath;\n    const amountObj = Object(_services_extra__WEBPACK_IMPORTED_MODULE_4__[\"getBasicPrice\"])(product);\n    const amount = amountObj.sale_price ? amountObj.sale_price : amountObj.regular_price;\n    const price = basicFunction.currencyWithoutUsd(amount);\n    return __jsx(\"div\", {\n      style: {\n        width: \"100%\",\n        margin: \"auto\"\n      },\n      className: \"product-list-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"product-list-image-wrap mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {\n      href: productLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      className: \"cursor-pointer product-list-image-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      style: {\n        width: \"210px\",\n        height: \"210px\"\n      },\n      className: \"product-list-image-inner-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, __jsx(react_lazy_load_image_component__WEBPACK_IMPORTED_MODULE_8__[\"LazyLoadImage\"], {\n      className: \"product-list-image\",\n      src: _constants_projectSettings__WEBPACK_IMPORTED_MODULE_3__[\"filePath\"] + productImage,\n      alt: productTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }))))), __jsx(\"div\", {\n      className: \"product-list-title-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"product-list-title-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      className: \"product-list-title mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, productTitle)))), __jsx(\"div\", {\n      className: \"chat-product-btn-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {\n      href: productLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      className: \"btn cursor-pointer d-block mb-0 product-list-btn hover-text-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"View details\")), __jsx(\"span\", {\n      onClick: () => {\n        this.addToCart(Object(_services_extra__WEBPACK_IMPORTED_MODULE_4__[\"directAddToCart\"])(product));\n        this.triggerNext();\n      },\n      className: \"c-btn c-btn--dark btn2 cursor-pointer d-block mb-0 product-list-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Add to cart - \", price)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  countryCode: state.location.countryCode,\n  isOpen: state.drawers.isCartOpen,\n  products: state.products.products\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(mapStateToProps, {\n  addToCart: _redux_actions__WEBPACK_IMPORTED_MODULE_6__[\"addToCart\"],\n  toggleCartBar: _redux_actions__WEBPACK_IMPORTED_MODULE_6__[\"toggleCartBar\"]\n})(ChatProductCard));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/chatBot/ChatProductCard.js\n");

/***/ }),

/***/ "./constants/constantMessage.js":
/*!**************************************!*\
  !*** ./constants/constantMessage.js ***!
  \**************************************/
/*! exports provided: firstNameMissingErrMsg, lastNameMissingErrMsg, emailMissingErrMsg, emailNotValidErrMsg, phoneMissingErrMsg, phoneNotValidErrMsg, passwordMissingErrMsg, passwordShortErrMsg, passwordValidErrMsg, onlyDigits, passwordMatchErrMsg, confirmPasswordErrMsg, zipMissingErrMsg, zipValidErrMsg, websiteMissingErrMsg, websiteValidErrMsg, instagramMissingErrMsg, instagramValidErrMsg, faceBookMissingErrMsg, faceBookValidErrMsg, newPasswordSuccessMsg, faxMissingErrMsg, faxValidErrMsg, someThingWrongTryAgain, wrongModalTitle, someThingWrong, invalidCardDetail, invalidExpiryDate, allFieldReq, orderPlacedModalTitle, orderPlacedSuccessfully, addressAdded, addressAddedModalTitle, subscribeFailMsg, oldPasswordRequired, noRatingMsg, contactNumber, loginHeading, loginMsg, userNotActiveMsg, regHeading, regMsg, sendEmailHeading, sendEmailMsg, loginFailMSg, passIncorrect, userNotFound, problemTitle, addToCartMessage, addReviewMessage, withoutLoginReviewMessage, productDetailModalTitle, cancelOrder, cancelSuccess, cancelCancel, warningText, favouritesAlreadyProductIntoCartMessage, emptyCart, profileUpdateMessage, formErrorMessage, msgSent, msgSentTitle, msgFailed, msgFailedTitle, myOrderPageFooterDetails, cardDetailsSave, cardDetailsfail, enableCheckoutCheckboxDetails, shippingAddressDetails, stripePaymentDetails, paymentMethodTollTippMessage, shippingAddressTollTippMessage, footerSubscriptionDetails, footerSubscriptioSuccessHeadingMessage, footerSubscriptioSuccessDetailsMessage, footerSubModalTitle, confirmLogout, checkoutHeaderRightSideIconWarranty, checkoutHeaderRightSideIcondelivery, checkoutHeaderRightSideIconSecurepayment, ambassadorAccountUpdateMessage, ambassadorBankUpdateMessage, ambassadorTaxUpdateMessage, nameMissingErrMsg, currencyMissingErrMsg, currencyValidErrMsg, accountNumberMissingMsg, accountNumberValidMsg, accountNumberConfirmMissingMsg, accountNumberConfirmValidMsg, accountHolderMissingMsg, accountHolderNameValidMsg, accountBankMissingMsg, accountBankValidMsg, businessTypeBankMissingMsg, invalidOldPass, routingTypeMissingMsg, routingTypeValidMsg, drivingLicenseMissingErr, drivingLicenseValidMsg, expireMonthInvalid, expireYearInvalid, cardNumberInvalid, cardDetailsNotMAtch, cardExpireYearRequired, cardExpireMonthRequired, cardNumberRequired, cvvNumberRequired, invalidCVVNumber, invaliddateNumber, addressAddedMsg, cardSubmitSuccessMsg, shippingExtraRate, shippingStaticRate, shippingFreeAfter, billingAddressMsg, shippingAddressMsg, sameShippingMsg, selectCarrierMsg, paymentMethodMsg, reviewOrderMsg, checkoutPageTitle, checkoutPageSubTitle, defaultOrderStatus, defaultStatusInOrder, wrongCardDetails, chooseProducts, writeReview, reviewSuccessMsg, headlineMissing, reviewMissing, comboCatTitle, comboCatDesc, trackPlaceHolder, trackLabel, enterMsg, zipCodeInvalidShippingError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"firstNameMissingErrMsg\", function() { return firstNameMissingErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lastNameMissingErrMsg\", function() { return lastNameMissingErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"emailMissingErrMsg\", function() { return emailMissingErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"emailNotValidErrMsg\", function() { return emailNotValidErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"phoneMissingErrMsg\", function() { return phoneMissingErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"phoneNotValidErrMsg\", function() { return phoneNotValidErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"passwordMissingErrMsg\", function() { return passwordMissingErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"passwordShortErrMsg\", function() { return passwordShortErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"passwordValidErrMsg\", function() { return passwordValidErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onlyDigits\", function() { return onlyDigits; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"passwordMatchErrMsg\", function() { return passwordMatchErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"confirmPasswordErrMsg\", function() { return confirmPasswordErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"zipMissingErrMsg\", function() { return zipMissingErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"zipValidErrMsg\", function() { return zipValidErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"websiteMissingErrMsg\", function() { return websiteMissingErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"websiteValidErrMsg\", function() { return websiteValidErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"instagramMissingErrMsg\", function() { return instagramMissingErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"instagramValidErrMsg\", function() { return instagramValidErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"faceBookMissingErrMsg\", function() { return faceBookMissingErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"faceBookValidErrMsg\", function() { return faceBookValidErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"newPasswordSuccessMsg\", function() { return newPasswordSuccessMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"faxMissingErrMsg\", function() { return faxMissingErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"faxValidErrMsg\", function() { return faxValidErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"someThingWrongTryAgain\", function() { return someThingWrongTryAgain; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrongModalTitle\", function() { return wrongModalTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"someThingWrong\", function() { return someThingWrong; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invalidCardDetail\", function() { return invalidCardDetail; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invalidExpiryDate\", function() { return invalidExpiryDate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"allFieldReq\", function() { return allFieldReq; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"orderPlacedModalTitle\", function() { return orderPlacedModalTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"orderPlacedSuccessfully\", function() { return orderPlacedSuccessfully; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addressAdded\", function() { return addressAdded; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addressAddedModalTitle\", function() { return addressAddedModalTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"subscribeFailMsg\", function() { return subscribeFailMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"oldPasswordRequired\", function() { return oldPasswordRequired; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"noRatingMsg\", function() { return noRatingMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"contactNumber\", function() { return contactNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loginHeading\", function() { return loginHeading; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loginMsg\", function() { return loginMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"userNotActiveMsg\", function() { return userNotActiveMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"regHeading\", function() { return regHeading; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"regMsg\", function() { return regMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sendEmailHeading\", function() { return sendEmailHeading; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sendEmailMsg\", function() { return sendEmailMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loginFailMSg\", function() { return loginFailMSg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"passIncorrect\", function() { return passIncorrect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"userNotFound\", function() { return userNotFound; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"problemTitle\", function() { return problemTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addToCartMessage\", function() { return addToCartMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addReviewMessage\", function() { return addReviewMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withoutLoginReviewMessage\", function() { return withoutLoginReviewMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"productDetailModalTitle\", function() { return productDetailModalTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cancelOrder\", function() { return cancelOrder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cancelSuccess\", function() { return cancelSuccess; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cancelCancel\", function() { return cancelCancel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"warningText\", function() { return warningText; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"favouritesAlreadyProductIntoCartMessage\", function() { return favouritesAlreadyProductIntoCartMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"emptyCart\", function() { return emptyCart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"profileUpdateMessage\", function() { return profileUpdateMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formErrorMessage\", function() { return formErrorMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"msgSent\", function() { return msgSent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"msgSentTitle\", function() { return msgSentTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"msgFailed\", function() { return msgFailed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"msgFailedTitle\", function() { return msgFailedTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"myOrderPageFooterDetails\", function() { return myOrderPageFooterDetails; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cardDetailsSave\", function() { return cardDetailsSave; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cardDetailsfail\", function() { return cardDetailsfail; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enableCheckoutCheckboxDetails\", function() { return enableCheckoutCheckboxDetails; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shippingAddressDetails\", function() { return shippingAddressDetails; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stripePaymentDetails\", function() { return stripePaymentDetails; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"paymentMethodTollTippMessage\", function() { return paymentMethodTollTippMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shippingAddressTollTippMessage\", function() { return shippingAddressTollTippMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"footerSubscriptionDetails\", function() { return footerSubscriptionDetails; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"footerSubscriptioSuccessHeadingMessage\", function() { return footerSubscriptioSuccessHeadingMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"footerSubscriptioSuccessDetailsMessage\", function() { return footerSubscriptioSuccessDetailsMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"footerSubModalTitle\", function() { return footerSubModalTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"confirmLogout\", function() { return confirmLogout; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkoutHeaderRightSideIconWarranty\", function() { return checkoutHeaderRightSideIconWarranty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkoutHeaderRightSideIcondelivery\", function() { return checkoutHeaderRightSideIcondelivery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkoutHeaderRightSideIconSecurepayment\", function() { return checkoutHeaderRightSideIconSecurepayment; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ambassadorAccountUpdateMessage\", function() { return ambassadorAccountUpdateMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ambassadorBankUpdateMessage\", function() { return ambassadorBankUpdateMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ambassadorTaxUpdateMessage\", function() { return ambassadorTaxUpdateMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"nameMissingErrMsg\", function() { return nameMissingErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"currencyMissingErrMsg\", function() { return currencyMissingErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"currencyValidErrMsg\", function() { return currencyValidErrMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"accountNumberMissingMsg\", function() { return accountNumberMissingMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"accountNumberValidMsg\", function() { return accountNumberValidMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"accountNumberConfirmMissingMsg\", function() { return accountNumberConfirmMissingMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"accountNumberConfirmValidMsg\", function() { return accountNumberConfirmValidMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"accountHolderMissingMsg\", function() { return accountHolderMissingMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"accountHolderNameValidMsg\", function() { return accountHolderNameValidMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"accountBankMissingMsg\", function() { return accountBankMissingMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"accountBankValidMsg\", function() { return accountBankValidMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"businessTypeBankMissingMsg\", function() { return businessTypeBankMissingMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invalidOldPass\", function() { return invalidOldPass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"routingTypeMissingMsg\", function() { return routingTypeMissingMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"routingTypeValidMsg\", function() { return routingTypeValidMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drivingLicenseMissingErr\", function() { return drivingLicenseMissingErr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drivingLicenseValidMsg\", function() { return drivingLicenseValidMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"expireMonthInvalid\", function() { return expireMonthInvalid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"expireYearInvalid\", function() { return expireYearInvalid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cardNumberInvalid\", function() { return cardNumberInvalid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cardDetailsNotMAtch\", function() { return cardDetailsNotMAtch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cardExpireYearRequired\", function() { return cardExpireYearRequired; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cardExpireMonthRequired\", function() { return cardExpireMonthRequired; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cardNumberRequired\", function() { return cardNumberRequired; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cvvNumberRequired\", function() { return cvvNumberRequired; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invalidCVVNumber\", function() { return invalidCVVNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invaliddateNumber\", function() { return invaliddateNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addressAddedMsg\", function() { return addressAddedMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cardSubmitSuccessMsg\", function() { return cardSubmitSuccessMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shippingExtraRate\", function() { return shippingExtraRate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shippingStaticRate\", function() { return shippingStaticRate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shippingFreeAfter\", function() { return shippingFreeAfter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"billingAddressMsg\", function() { return billingAddressMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shippingAddressMsg\", function() { return shippingAddressMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sameShippingMsg\", function() { return sameShippingMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"selectCarrierMsg\", function() { return selectCarrierMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"paymentMethodMsg\", function() { return paymentMethodMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reviewOrderMsg\", function() { return reviewOrderMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkoutPageTitle\", function() { return checkoutPageTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkoutPageSubTitle\", function() { return checkoutPageSubTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultOrderStatus\", function() { return defaultOrderStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultStatusInOrder\", function() { return defaultStatusInOrder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrongCardDetails\", function() { return wrongCardDetails; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"chooseProducts\", function() { return chooseProducts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"writeReview\", function() { return writeReview; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reviewSuccessMsg\", function() { return reviewSuccessMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"headlineMissing\", function() { return headlineMissing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reviewMissing\", function() { return reviewMissing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"comboCatTitle\", function() { return comboCatTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"comboCatDesc\", function() { return comboCatDesc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trackPlaceHolder\", function() { return trackPlaceHolder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trackLabel\", function() { return trackLabel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enterMsg\", function() { return enterMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"zipCodeInvalidShippingError\", function() { return zipCodeInvalidShippingError; });\n/* harmony import */ var _projectSettings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./projectSettings */ \"./constants/projectSettings.js\");\n// validation error messages\n// registration\n//first name missing\n\nconst firstNameMissingErrMsg = \"First Name is required\"; //last name missing\n\nconst lastNameMissingErrMsg = \"Last Name is required\"; //email missing\n\nconst emailMissingErrMsg = \"Email is required\"; //email valid\n\nconst emailNotValidErrMsg = \"Email Id is not valid\"; //Phone missing\n\nconst phoneMissingErrMsg = \"Phone is required\"; //Phone Valid\n\nconst phoneNotValidErrMsg = \"Phone number is not valid\"; //Password missing\n\nconst passwordMissingErrMsg = \"Password is required\"; //Password short\n\nconst passwordShortErrMsg = \"Password should be 6 characters\"; //Password Valid\n\nconst passwordValidErrMsg = \"A minimum 6 characters password contains a combination of uppercase and lowercase letter and number\"; //Password match\n\nconst onlyDigits = \"Only Digits\"; //Password match\n\nconst passwordMatchErrMsg = \"Passwords do not match.\"; //Confirm Password match\n\nconst confirmPasswordErrMsg = \"Confirm Password is required\"; //Zip code error match\n\nconst zipMissingErrMsg = \"Zip Code is required\";\nconst zipValidErrMsg = \"Zip Code Not Valid\"; // Website code error match\n\nconst websiteMissingErrMsg = \"Website is required\";\nconst websiteValidErrMsg = \"Website Url is  Not Valid\"; // Instagram code error match\n\nconst instagramMissingErrMsg = \"Instagram is required\";\nconst instagramValidErrMsg = \"Instagram Url is  Not Valid\"; // Facebook code error match\n\nconst faceBookMissingErrMsg = \"Facebook is required\";\nconst faceBookValidErrMsg = \"Facebook Url is  Not Valid\"; // new password message\n\nconst newPasswordSuccessMsg = \"Your password has been updated successfully\";\nconst faxMissingErrMsg = \"Fax Number is required\";\nconst faxValidErrMsg = \"Fax Number is  Not Valid\"; // something wrong\n\nconst someThingWrongTryAgain = \"Something was wrong please try again\"; // something wrong\n\nconst wrongModalTitle = \"Failed\";\nconst someThingWrong = \"Something went wrong\"; // invalid card details\n\nconst invalidCardDetail = \"Invalid Card Details\"; //  invalid expiration date\n\nconst invalidExpiryDate = \"Invalid Expiration date\"; // all field required\n\nconst allFieldReq = \"All fields are require\"; // order placed successfully\n\nconst orderPlacedModalTitle = \"Order Placed\";\nconst orderPlacedSuccessfully = \"Your order was placed successfully\";\nconst addressAdded = \"Your Address has been successfully updated.\";\nconst addressAddedModalTitle = \"Details Updated\"; // subscribe add fail\n\nconst subscribeFailMsg = \"Failed to subscribe this product\"; //Old Password is required\n\nconst oldPasswordRequired = \"Old Password is required\"; //Old Password is required\n\nconst noRatingMsg = \"Please select a star rating\"; //---------------------------------------------------------------------------------------\n// export const projectName = projectName;\n\nconst contactNumber = \"+1.646.367.3725 (USA)\"; // login page message\n\nconst loginHeading = \"Hello\";\nconst loginMsg = ` Welcome to ${_projectSettings__WEBPACK_IMPORTED_MODULE_0__[\"projectName\"]}`;\nconst userNotActiveMsg = \"Your Account is not yet Approved\"; // registration page\n\nconst regHeading = \"Hello\";\nconst regMsg = \" You've been successfully registered\"; // forgot password page\n\nconst sendEmailHeading = \"\";\nconst sendEmailMsg = \"We've emailed you a link to reset your password.\";\nconst loginFailMSg = \"Something's not right with your username or Password\";\nconst passIncorrect = \"Your password is incorrect\";\nconst userNotFound = \"We cannot find an account with that email address\";\nconst problemTitle = \"There was a problem\"; // product detail page\n\nconst addToCartMessage = \"Added to your bag\";\nconst addReviewMessage = \"Review add successfully \";\nconst withoutLoginReviewMessage = \"Please login before review \";\nconst productDetailModalTitle = \"Product Details \"; // my account page\n\nconst cancelOrder = \"Are you sure you want to cancel this order?\";\nconst cancelSuccess = \"Order cancelled successfully.\";\nconst cancelCancel = \"Proceed Order Cancelled Successfully\";\nconst warningText = \"Warning\"; // Favourites page\n\nconst favouritesAlreadyProductIntoCartMessage = \"Product already added in your cart.\";\nconst emptyCart = \"YOUR BAG IS EMPTY\"; // profile Update Page\n\nconst profileUpdateMessage = \"Your account updated successfully . \";\nconst formErrorMessage = \"Something's not right with this form details. \"; // contact page\n\nconst msgSent = \"Thank you for contacting us. We will contact you asap!\";\nconst msgSentTitle = \"Thank you\";\nconst msgFailed = \"There seems to be a problem. Try again later.\";\nconst msgFailedTitle = \"Error\"; // my order page\n\nconst myOrderPageFooterDetails = [{\n  details: \"Find the estimated delivery date for your recent purchase\"\n}, {\n  details: \"Track any returns for your order\"\n}, {\n  details: \"See where the order is being shipped\"\n}]; // payment method page\n\nconst cardDetailsSave = \"Card details updated  successfully\";\nconst cardDetailsfail = \"Card details updated  failed\";\nconst enableCheckoutCheckboxDetails = \"Express checkout allows you to skip the regular checkout process and accelerate right to order review using your saved shipping and payment information.\";\nconst shippingAddressDetails = \"Saved address allow you to check out faster since you won't have to enter in your shipping information each time. You'll be able to select the express checkout option.\";\nconst stripePaymentDetails = \"Saved payment information allows you to check out faster - you won't have to enter in your credit card, gift card, or other payment information each time you checkout. This also allows you to use the express checkout option.\";\nconst paymentMethodTollTippMessage = \"Entering a default payment method here means you won't have to enter a payment method each time you check out . Make sure you fill in all required fields on your\";\nconst shippingAddressTollTippMessage = \"Entering a default shipping address here means you won't have to enter an address each time you check out\"; // footer\n\nconst footerSubscriptionDetails = `I would like to receive communications about ${_projectSettings__WEBPACK_IMPORTED_MODULE_0__[\"projectName\"]} products and services.`;\nconst footerSubscriptioSuccessHeadingMessage = \"Thanks for subscribing\";\nconst footerSubscriptioSuccessDetailsMessage = \"We are always pleased to share our passionate interests with like-minded individuals.\";\nconst footerSubModalTitle = \"Subscribed\"; //checkout Header\n\nconst confirmLogout = \"Confirm logout\";\nconst checkoutHeaderRightSideIconWarranty = \"60 days warranty\";\nconst checkoutHeaderRightSideIcondelivery = \"Global delivery\";\nconst checkoutHeaderRightSideIconSecurepayment = \"Secure payment\"; // ambassador-portal  Page\n\nconst ambassadorAccountUpdateMessage = \"Your Ambassador Portal Account  updated  successfully . \";\nconst ambassadorBankUpdateMessage = \"Your Ambassador Portal Bank Details  updated  successfully . \";\nconst ambassadorTaxUpdateMessage = \"Your Ambassador Portal Tax Details  updated  successfully . \";\nconst nameMissingErrMsg = \"Name is required\";\nconst currencyMissingErrMsg = \"Currency is required\";\nconst currencyValidErrMsg = \"Currency is not valid\";\nconst accountNumberMissingMsg = \"Checking account number is required\";\nconst accountNumberValidMsg = \"Checking account number is not valid\";\nconst accountNumberConfirmMissingMsg = \"Checking account number is required\";\nconst accountNumberConfirmValidMsg = \"Checking account numbers do not match.\";\nconst accountHolderMissingMsg = \"Account Holder Name is required\";\nconst accountHolderNameValidMsg = \"Account Holder Name is not valid\";\nconst accountBankMissingMsg = \"Bank Name is required\";\nconst accountBankValidMsg = \"Bank Name is not valid\";\nconst businessTypeBankMissingMsg = \"Business Type is required\";\nconst invalidOldPass = \"Incorrect Old Password\";\nconst routingTypeMissingMsg = \"Bank routing number is required.\";\nconst routingTypeValidMsg = \"Bank routing number must be exactly nine digits.\";\nconst drivingLicenseMissingErr = \"Driver's license number is required.\";\nconst drivingLicenseValidMsg = \"Driver's license number is not valid.\";\nconst expireMonthInvalid = \"Your card's expiration month is invalid.\";\nconst expireYearInvalid = \"Your card's expiration year is invalid.\";\nconst cardNumberInvalid = \"Your card number is incorrect.\";\nconst cardDetailsNotMAtch = \"Could not find payment information\";\nconst cardExpireYearRequired = \"Expire Year is required\";\nconst cardExpireMonthRequired = \"Expire Month is required\";\nconst cardNumberRequired = \"Card Number is required\";\nconst cvvNumberRequired = \"CvV Number is required\";\nconst invalidCVVNumber = \"Your CVV number is incorrect.\";\nconst invaliddateNumber = \"Your Expiration Date is incorrect.\"; //\n\nconst addressAddedMsg = \"Address Successfully Saved.\"; //\n\nconst cardSubmitSuccessMsg = \"Card Successfully Saved\"; // shipping\n\nconst shippingExtraRate = 5;\nconst shippingStaticRate = 5.95;\nconst shippingFreeAfter = 75;\nconst billingAddressMsg = \"1. Billing Address\";\nconst shippingAddressMsg = \"Shipping Address\";\nconst sameShippingMsg = \"Bill to the same address\";\nconst selectCarrierMsg = \"2. Select your carrier\";\nconst paymentMethodMsg = \"3. Payment Method\";\nconst reviewOrderMsg = \"4. Review Your Order\";\nconst checkoutPageTitle = \"Checkout\";\nconst checkoutPageSubTitle = \"Please Enter Your Details Below to Complete Your Purchase.\"; //\n\nconst defaultOrderStatus = \"Transaction completed - label generated\";\nconst defaultStatusInOrder = \"in process\";\nconst wrongCardDetails = \"Card details not valid\";\nconst chooseProducts = \"Choose a Product\";\nconst writeReview = \"We’d love to hear your feedback!\";\nconst reviewSuccessMsg = \"Thank you for being a customer.\";\nconst headlineMissing = \"Please add a Headline.\";\nconst reviewMissing = \"Please express your views.\"; //\n\nconst comboCatTitle = \"Bundles\";\nconst comboCatDesc = \"Bundles\"; //\n\nconst trackPlaceHolder = \"Enter Your Tracking ID.\";\nconst trackLabel = \"Track Your Order\"; //\n\nconst enterMsg = \"You must be 18 years or older to order CBD products. If you are of legal age click Enter.\";\nconst zipCodeInvalidShippingError = \"Pelase enter a valid zip code .\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb25zdGFudHMvY29uc3RhbnRNZXNzYWdlLmpzPzllZGUiXSwibmFtZXMiOlsiZmlyc3ROYW1lTWlzc2luZ0Vyck1zZyIsImxhc3ROYW1lTWlzc2luZ0Vyck1zZyIsImVtYWlsTWlzc2luZ0Vyck1zZyIsImVtYWlsTm90VmFsaWRFcnJNc2ciLCJwaG9uZU1pc3NpbmdFcnJNc2ciLCJwaG9uZU5vdFZhbGlkRXJyTXNnIiwicGFzc3dvcmRNaXNzaW5nRXJyTXNnIiwicGFzc3dvcmRTaG9ydEVyck1zZyIsInBhc3N3b3JkVmFsaWRFcnJNc2ciLCJvbmx5RGlnaXRzIiwicGFzc3dvcmRNYXRjaEVyck1zZyIsImNvbmZpcm1QYXNzd29yZEVyck1zZyIsInppcE1pc3NpbmdFcnJNc2ciLCJ6aXBWYWxpZEVyck1zZyIsIndlYnNpdGVNaXNzaW5nRXJyTXNnIiwid2Vic2l0ZVZhbGlkRXJyTXNnIiwiaW5zdGFncmFtTWlzc2luZ0Vyck1zZyIsImluc3RhZ3JhbVZhbGlkRXJyTXNnIiwiZmFjZUJvb2tNaXNzaW5nRXJyTXNnIiwiZmFjZUJvb2tWYWxpZEVyck1zZyIsIm5ld1Bhc3N3b3JkU3VjY2Vzc01zZyIsImZheE1pc3NpbmdFcnJNc2ciLCJmYXhWYWxpZEVyck1zZyIsInNvbWVUaGluZ1dyb25nVHJ5QWdhaW4iLCJ3cm9uZ01vZGFsVGl0bGUiLCJzb21lVGhpbmdXcm9uZyIsImludmFsaWRDYXJkRGV0YWlsIiwiaW52YWxpZEV4cGlyeURhdGUiLCJhbGxGaWVsZFJlcSIsIm9yZGVyUGxhY2VkTW9kYWxUaXRsZSIsIm9yZGVyUGxhY2VkU3VjY2Vzc2Z1bGx5IiwiYWRkcmVzc0FkZGVkIiwiYWRkcmVzc0FkZGVkTW9kYWxUaXRsZSIsInN1YnNjcmliZUZhaWxNc2ciLCJvbGRQYXNzd29yZFJlcXVpcmVkIiwibm9SYXRpbmdNc2ciLCJjb250YWN0TnVtYmVyIiwibG9naW5IZWFkaW5nIiwibG9naW5Nc2ciLCJwcm9qZWN0TmFtZSIsInVzZXJOb3RBY3RpdmVNc2ciLCJyZWdIZWFkaW5nIiwicmVnTXNnIiwic2VuZEVtYWlsSGVhZGluZyIsInNlbmRFbWFpbE1zZyIsImxvZ2luRmFpbE1TZyIsInBhc3NJbmNvcnJlY3QiLCJ1c2VyTm90Rm91bmQiLCJwcm9ibGVtVGl0bGUiLCJhZGRUb0NhcnRNZXNzYWdlIiwiYWRkUmV2aWV3TWVzc2FnZSIsIndpdGhvdXRMb2dpblJldmlld01lc3NhZ2UiLCJwcm9kdWN0RGV0YWlsTW9kYWxUaXRsZSIsImNhbmNlbE9yZGVyIiwiY2FuY2VsU3VjY2VzcyIsImNhbmNlbENhbmNlbCIsIndhcm5pbmdUZXh0IiwiZmF2b3VyaXRlc0FscmVhZHlQcm9kdWN0SW50b0NhcnRNZXNzYWdlIiwiZW1wdHlDYXJ0IiwicHJvZmlsZVVwZGF0ZU1lc3NhZ2UiLCJmb3JtRXJyb3JNZXNzYWdlIiwibXNnU2VudCIsIm1zZ1NlbnRUaXRsZSIsIm1zZ0ZhaWxlZCIsIm1zZ0ZhaWxlZFRpdGxlIiwibXlPcmRlclBhZ2VGb290ZXJEZXRhaWxzIiwiZGV0YWlscyIsImNhcmREZXRhaWxzU2F2ZSIsImNhcmREZXRhaWxzZmFpbCIsImVuYWJsZUNoZWNrb3V0Q2hlY2tib3hEZXRhaWxzIiwic2hpcHBpbmdBZGRyZXNzRGV0YWlscyIsInN0cmlwZVBheW1lbnREZXRhaWxzIiwicGF5bWVudE1ldGhvZFRvbGxUaXBwTWVzc2FnZSIsInNoaXBwaW5nQWRkcmVzc1RvbGxUaXBwTWVzc2FnZSIsImZvb3RlclN1YnNjcmlwdGlvbkRldGFpbHMiLCJmb290ZXJTdWJzY3JpcHRpb1N1Y2Nlc3NIZWFkaW5nTWVzc2FnZSIsImZvb3RlclN1YnNjcmlwdGlvU3VjY2Vzc0RldGFpbHNNZXNzYWdlIiwiZm9vdGVyU3ViTW9kYWxUaXRsZSIsImNvbmZpcm1Mb2dvdXQiLCJjaGVja291dEhlYWRlclJpZ2h0U2lkZUljb25XYXJyYW50eSIsImNoZWNrb3V0SGVhZGVyUmlnaHRTaWRlSWNvbmRlbGl2ZXJ5IiwiY2hlY2tvdXRIZWFkZXJSaWdodFNpZGVJY29uU2VjdXJlcGF5bWVudCIsImFtYmFzc2Fkb3JBY2NvdW50VXBkYXRlTWVzc2FnZSIsImFtYmFzc2Fkb3JCYW5rVXBkYXRlTWVzc2FnZSIsImFtYmFzc2Fkb3JUYXhVcGRhdGVNZXNzYWdlIiwibmFtZU1pc3NpbmdFcnJNc2ciLCJjdXJyZW5jeU1pc3NpbmdFcnJNc2ciLCJjdXJyZW5jeVZhbGlkRXJyTXNnIiwiYWNjb3VudE51bWJlck1pc3NpbmdNc2ciLCJhY2NvdW50TnVtYmVyVmFsaWRNc2ciLCJhY2NvdW50TnVtYmVyQ29uZmlybU1pc3NpbmdNc2ciLCJhY2NvdW50TnVtYmVyQ29uZmlybVZhbGlkTXNnIiwiYWNjb3VudEhvbGRlck1pc3NpbmdNc2ciLCJhY2NvdW50SG9sZGVyTmFtZVZhbGlkTXNnIiwiYWNjb3VudEJhbmtNaXNzaW5nTXNnIiwiYWNjb3VudEJhbmtWYWxpZE1zZyIsImJ1c2luZXNzVHlwZUJhbmtNaXNzaW5nTXNnIiwiaW52YWxpZE9sZFBhc3MiLCJyb3V0aW5nVHlwZU1pc3NpbmdNc2ciLCJyb3V0aW5nVHlwZVZhbGlkTXNnIiwiZHJpdmluZ0xpY2Vuc2VNaXNzaW5nRXJyIiwiZHJpdmluZ0xpY2Vuc2VWYWxpZE1zZyIsImV4cGlyZU1vbnRoSW52YWxpZCIsImV4cGlyZVllYXJJbnZhbGlkIiwiY2FyZE51bWJlckludmFsaWQiLCJjYXJkRGV0YWlsc05vdE1BdGNoIiwiY2FyZEV4cGlyZVllYXJSZXF1aXJlZCIsImNhcmRFeHBpcmVNb250aFJlcXVpcmVkIiwiY2FyZE51bWJlclJlcXVpcmVkIiwiY3Z2TnVtYmVyUmVxdWlyZWQiLCJpbnZhbGlkQ1ZWTnVtYmVyIiwiaW52YWxpZGRhdGVOdW1iZXIiLCJhZGRyZXNzQWRkZWRNc2ciLCJjYXJkU3VibWl0U3VjY2Vzc01zZyIsInNoaXBwaW5nRXh0cmFSYXRlIiwic2hpcHBpbmdTdGF0aWNSYXRlIiwic2hpcHBpbmdGcmVlQWZ0ZXIiLCJiaWxsaW5nQWRkcmVzc01zZyIsInNoaXBwaW5nQWRkcmVzc01zZyIsInNhbWVTaGlwcGluZ01zZyIsInNlbGVjdENhcnJpZXJNc2ciLCJwYXltZW50TWV0aG9kTXNnIiwicmV2aWV3T3JkZXJNc2ciLCJjaGVja291dFBhZ2VUaXRsZSIsImNoZWNrb3V0UGFnZVN1YlRpdGxlIiwiZGVmYXVsdE9yZGVyU3RhdHVzIiwiZGVmYXVsdFN0YXR1c0luT3JkZXIiLCJ3cm9uZ0NhcmREZXRhaWxzIiwiY2hvb3NlUHJvZHVjdHMiLCJ3cml0ZVJldmlldyIsInJldmlld1N1Y2Nlc3NNc2ciLCJoZWFkbGluZU1pc3NpbmciLCJyZXZpZXdNaXNzaW5nIiwiY29tYm9DYXRUaXRsZSIsImNvbWJvQ2F0RGVzYyIsInRyYWNrUGxhY2VIb2xkZXIiLCJ0cmFja0xhYmVsIiwiZW50ZXJNc2ciLCJ6aXBDb2RlSW52YWxpZFNoaXBwaW5nRXJyb3IiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDTyxNQUFNQSxzQkFBc0IsR0FBRyx3QkFBL0IsQyxDQUVQOztBQUNPLE1BQU1DLHFCQUFxQixHQUFHLHVCQUE5QixDLENBRVA7O0FBQ08sTUFBTUMsa0JBQWtCLEdBQUcsbUJBQTNCLEMsQ0FDUDs7QUFDTyxNQUFNQyxtQkFBbUIsR0FBRyx1QkFBNUIsQyxDQUVQOztBQUNPLE1BQU1DLGtCQUFrQixHQUFHLG1CQUEzQixDLENBQ1A7O0FBQ08sTUFBTUMsbUJBQW1CLEdBQUcsMkJBQTVCLEMsQ0FFUDs7QUFDTyxNQUFNQyxxQkFBcUIsR0FBRyxzQkFBOUIsQyxDQUVQOztBQUNPLE1BQU1DLG1CQUFtQixHQUFHLGlDQUE1QixDLENBRVA7O0FBQ08sTUFBTUMsbUJBQW1CLEdBQy9CLHFHQURNLEMsQ0FHUDs7QUFDTyxNQUFNQyxVQUFVLEdBQUcsYUFBbkIsQyxDQUVQOztBQUNPLE1BQU1DLG1CQUFtQixHQUFHLHlCQUE1QixDLENBRVA7O0FBQ08sTUFBTUMscUJBQXFCLEdBQUcsOEJBQTlCLEMsQ0FFUDs7QUFDTyxNQUFNQyxnQkFBZ0IsR0FBRyxzQkFBekI7QUFDQSxNQUFNQyxjQUFjLEdBQUcsb0JBQXZCLEMsQ0FFUDs7QUFDTyxNQUFNQyxvQkFBb0IsR0FBRyxxQkFBN0I7QUFDQSxNQUFNQyxrQkFBa0IsR0FBRywyQkFBM0IsQyxDQUVQOztBQUNPLE1BQU1DLHNCQUFzQixHQUFHLHVCQUEvQjtBQUNBLE1BQU1DLG9CQUFvQixHQUFHLDZCQUE3QixDLENBRVA7O0FBQ08sTUFBTUMscUJBQXFCLEdBQUcsc0JBQTlCO0FBQ0EsTUFBTUMsbUJBQW1CLEdBQUcsNEJBQTVCLEMsQ0FFUDs7QUFDTyxNQUFNQyxxQkFBcUIsR0FDakMsNkNBRE07QUFHQSxNQUFNQyxnQkFBZ0IsR0FBRyx3QkFBekI7QUFDQSxNQUFNQyxjQUFjLEdBQUcsMEJBQXZCLEMsQ0FFUDs7QUFDTyxNQUFNQyxzQkFBc0IsR0FBRyxzQ0FBL0IsQyxDQUVQOztBQUNPLE1BQU1DLGVBQWUsR0FBRyxRQUF4QjtBQUNBLE1BQU1DLGNBQWMsR0FBRyxzQkFBdkIsQyxDQUVQOztBQUNPLE1BQU1DLGlCQUFpQixHQUFHLHNCQUExQixDLENBRVA7O0FBQ08sTUFBTUMsaUJBQWlCLEdBQUcseUJBQTFCLEMsQ0FFUDs7QUFDTyxNQUFNQyxXQUFXLEdBQUcsd0JBQXBCLEMsQ0FFUDs7QUFDTyxNQUFNQyxxQkFBcUIsR0FBRyxjQUE5QjtBQUNBLE1BQU1DLHVCQUF1QixHQUFHLG9DQUFoQztBQUNBLE1BQU1DLFlBQVksR0FBRyw2Q0FBckI7QUFDQSxNQUFNQyxzQkFBc0IsR0FBRyxpQkFBL0IsQyxDQUVQOztBQUNPLE1BQU1DLGdCQUFnQixHQUFHLGtDQUF6QixDLENBRVA7O0FBQ08sTUFBTUMsbUJBQW1CLEdBQUcsMEJBQTVCLEMsQ0FFUDs7QUFDTyxNQUFNQyxXQUFXLEdBQUcsNkJBQXBCLEMsQ0FDUDtBQUVBOztBQUNPLE1BQU1DLGFBQWEsR0FBRyx1QkFBdEIsQyxDQUVQOztBQUNPLE1BQU1DLFlBQVksR0FBRyxPQUFyQjtBQUNBLE1BQU1DLFFBQVEsR0FBSSxlQUFjQyw0REFBWSxFQUE1QztBQUNBLE1BQU1DLGdCQUFnQixHQUFHLGtDQUF6QixDLENBRVA7O0FBQ08sTUFBTUMsVUFBVSxHQUFHLE9BQW5CO0FBQ0EsTUFBTUMsTUFBTSxHQUFHLHNDQUFmLEMsQ0FFUDs7QUFDTyxNQUFNQyxnQkFBZ0IsR0FBRyxFQUF6QjtBQUNBLE1BQU1DLFlBQVksR0FBRyxrREFBckI7QUFFQSxNQUFNQyxZQUFZLEdBQ3hCLHNEQURNO0FBRUEsTUFBTUMsYUFBYSxHQUFHLDRCQUF0QjtBQUNBLE1BQU1DLFlBQVksR0FBRyxtREFBckI7QUFFQSxNQUFNQyxZQUFZLEdBQUcscUJBQXJCLEMsQ0FDUDs7QUFDTyxNQUFNQyxnQkFBZ0IsR0FBRyxtQkFBekI7QUFDQSxNQUFNQyxnQkFBZ0IsR0FBRywwQkFBekI7QUFDQSxNQUFNQyx5QkFBeUIsR0FBRyw2QkFBbEM7QUFDQSxNQUFNQyx1QkFBdUIsR0FBRyxrQkFBaEMsQyxDQUVQOztBQUNPLE1BQU1DLFdBQVcsR0FBRyw2Q0FBcEI7QUFDQSxNQUFNQyxhQUFhLEdBQUcsK0JBQXRCO0FBQ0EsTUFBTUMsWUFBWSxHQUFHLHNDQUFyQjtBQUVBLE1BQU1DLFdBQVcsR0FBRyxTQUFwQixDLENBRVA7O0FBQ08sTUFBTUMsdUNBQXVDLEdBQ25ELHFDQURNO0FBR0EsTUFBTUMsU0FBUyxHQUFHLG1CQUFsQixDLENBRVA7O0FBQ08sTUFBTUMsb0JBQW9CLEdBQUcsc0NBQTdCO0FBQ0EsTUFBTUMsZ0JBQWdCLEdBQzVCLGdEQURNLEMsQ0FHUDs7QUFDTyxNQUFNQyxPQUFPLEdBQUcsd0RBQWhCO0FBQ0EsTUFBTUMsWUFBWSxHQUFHLFdBQXJCO0FBQ0EsTUFBTUMsU0FBUyxHQUFHLCtDQUFsQjtBQUNBLE1BQU1DLGNBQWMsR0FBRyxPQUF2QixDLENBRVA7O0FBQ08sTUFBTUMsd0JBQXdCLEdBQUcsQ0FDdkM7QUFBRUMsU0FBTyxFQUFFO0FBQVgsQ0FEdUMsRUFFdkM7QUFBRUEsU0FBTyxFQUFFO0FBQVgsQ0FGdUMsRUFHdkM7QUFBRUEsU0FBTyxFQUFFO0FBQVgsQ0FIdUMsQ0FBakMsQyxDQU1QOztBQUNPLE1BQU1DLGVBQWUsR0FBRyxvQ0FBeEI7QUFDQSxNQUFNQyxlQUFlLEdBQUcsOEJBQXhCO0FBRUEsTUFBTUMsNkJBQTZCLEdBQ3pDLDBKQURNO0FBRUEsTUFBTUMsc0JBQXNCLEdBQ2xDLHlLQURNO0FBRUEsTUFBTUMsb0JBQW9CLEdBQ2hDLGtPQURNO0FBR0EsTUFBTUMsNEJBQTRCLEdBQ3hDLG1LQURNO0FBRUEsTUFBTUMsOEJBQThCLEdBQzFDLDJHQURNLEMsQ0FHUDs7QUFFTyxNQUFNQyx5QkFBeUIsR0FBSSxnREFBK0NuQyw0REFBWSx5QkFBOUY7QUFDQSxNQUFNb0Msc0NBQXNDLEdBQUcsd0JBQS9DO0FBQ0EsTUFBTUMsc0NBQXNDLEdBQ2xELHVGQURNO0FBRUEsTUFBTUMsbUJBQW1CLEdBQUcsWUFBNUIsQyxDQUNQOztBQUVPLE1BQU1DLGFBQWEsR0FBRyxnQkFBdEI7QUFDQSxNQUFNQyxtQ0FBbUMsR0FBRyxrQkFBNUM7QUFDQSxNQUFNQyxtQ0FBbUMsR0FBRyxpQkFBNUM7QUFDQSxNQUFNQyx3Q0FBd0MsR0FBRyxnQkFBakQsQyxDQUVQOztBQUNPLE1BQU1DLDhCQUE4QixHQUMxQywwREFETTtBQUVBLE1BQU1DLDJCQUEyQixHQUN2QywrREFETTtBQUVBLE1BQU1DLDBCQUEwQixHQUN0Qyw4REFETTtBQUdBLE1BQU1DLGlCQUFpQixHQUFHLGtCQUExQjtBQUNBLE1BQU1DLHFCQUFxQixHQUFHLHNCQUE5QjtBQUNBLE1BQU1DLG1CQUFtQixHQUFHLHVCQUE1QjtBQUNBLE1BQU1DLHVCQUF1QixHQUFHLHFDQUFoQztBQUNBLE1BQU1DLHFCQUFxQixHQUFHLHNDQUE5QjtBQUNBLE1BQU1DLDhCQUE4QixHQUMxQyxxQ0FETTtBQUVBLE1BQU1DLDRCQUE0QixHQUN4Qyx3Q0FETTtBQUVBLE1BQU1DLHVCQUF1QixHQUFHLGlDQUFoQztBQUNBLE1BQU1DLHlCQUF5QixHQUFHLGtDQUFsQztBQUNBLE1BQU1DLHFCQUFxQixHQUFHLHVCQUE5QjtBQUNBLE1BQU1DLG1CQUFtQixHQUFHLHdCQUE1QjtBQUNBLE1BQU1DLDBCQUEwQixHQUFHLDJCQUFuQztBQUNBLE1BQU1DLGNBQWMsR0FBRyx3QkFBdkI7QUFFQSxNQUFNQyxxQkFBcUIsR0FBRyxrQ0FBOUI7QUFDQSxNQUFNQyxtQkFBbUIsR0FDL0Isa0RBRE07QUFFQSxNQUFNQyx3QkFBd0IsR0FBRyxzQ0FBakM7QUFDQSxNQUFNQyxzQkFBc0IsR0FBRyx1Q0FBL0I7QUFFQSxNQUFNQyxrQkFBa0IsR0FBRywwQ0FBM0I7QUFDQSxNQUFNQyxpQkFBaUIsR0FBRyx5Q0FBMUI7QUFDQSxNQUFNQyxpQkFBaUIsR0FBRyxnQ0FBMUI7QUFDQSxNQUFNQyxtQkFBbUIsR0FBRyxvQ0FBNUI7QUFDQSxNQUFNQyxzQkFBc0IsR0FBRyx5QkFBL0I7QUFDQSxNQUFNQyx1QkFBdUIsR0FBRywwQkFBaEM7QUFDQSxNQUFNQyxrQkFBa0IsR0FBRyx5QkFBM0I7QUFDQSxNQUFNQyxpQkFBaUIsR0FBRyx3QkFBMUI7QUFDQSxNQUFNQyxnQkFBZ0IsR0FBRywrQkFBekI7QUFDQSxNQUFNQyxpQkFBaUIsR0FBRyxvQ0FBMUIsQyxDQUVQOztBQUNPLE1BQU1DLGVBQWUsR0FBRyw2QkFBeEIsQyxDQUVQOztBQUNPLE1BQU1DLG9CQUFvQixHQUFHLHlCQUE3QixDLENBRVA7O0FBQ08sTUFBTUMsaUJBQWlCLEdBQUcsQ0FBMUI7QUFDQSxNQUFNQyxrQkFBa0IsR0FBRyxJQUEzQjtBQUNBLE1BQU1DLGlCQUFpQixHQUFHLEVBQTFCO0FBRUEsTUFBTUMsaUJBQWlCLEdBQUcsb0JBQTFCO0FBQ0EsTUFBTUMsa0JBQWtCLEdBQUcsa0JBQTNCO0FBQ0EsTUFBTUMsZUFBZSxHQUFHLDBCQUF4QjtBQUNBLE1BQU1DLGdCQUFnQixHQUFHLHdCQUF6QjtBQUNBLE1BQU1DLGdCQUFnQixHQUFHLG1CQUF6QjtBQUNBLE1BQU1DLGNBQWMsR0FBRyxzQkFBdkI7QUFFQSxNQUFNQyxpQkFBaUIsR0FBRyxVQUExQjtBQUNBLE1BQU1DLG9CQUFvQixHQUNoQyw0REFETSxDLENBR1A7O0FBQ08sTUFBTUMsa0JBQWtCLEdBQUcseUNBQTNCO0FBQ0EsTUFBTUMsb0JBQW9CLEdBQUcsWUFBN0I7QUFFQSxNQUFNQyxnQkFBZ0IsR0FBRyx3QkFBekI7QUFFQSxNQUFNQyxjQUFjLEdBQUcsa0JBQXZCO0FBQ0EsTUFBTUMsV0FBVyxHQUFHLGtDQUFwQjtBQUNBLE1BQU1DLGdCQUFnQixHQUFHLGlDQUF6QjtBQUVBLE1BQU1DLGVBQWUsR0FBRyx3QkFBeEI7QUFDQSxNQUFNQyxhQUFhLEdBQUcsNEJBQXRCLEMsQ0FFUDs7QUFDTyxNQUFNQyxhQUFhLEdBQUcsU0FBdEI7QUFDQSxNQUFNQyxZQUFZLEdBQUcsU0FBckIsQyxDQUVQOztBQUNPLE1BQU1DLGdCQUFnQixHQUFHLHlCQUF6QjtBQUNBLE1BQU1DLFVBQVUsR0FBRyxrQkFBbkIsQyxDQUVQOztBQUNPLE1BQU1DLFFBQVEsR0FDcEIsMkZBRE07QUFHQSxNQUFNQywyQkFBMkIsR0FBRyxpQ0FBcEMiLCJmaWxlIjoiLi9jb25zdGFudHMvY29uc3RhbnRNZXNzYWdlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdmFsaWRhdGlvbiBlcnJvciBtZXNzYWdlc1xuLy8gcmVnaXN0cmF0aW9uXG4vL2ZpcnN0IG5hbWUgbWlzc2luZ1xuXG5pbXBvcnQge3Byb2plY3ROYW1lfSBmcm9tIFwiLi9wcm9qZWN0U2V0dGluZ3NcIlxuZXhwb3J0IGNvbnN0IGZpcnN0TmFtZU1pc3NpbmdFcnJNc2cgPSBcIkZpcnN0IE5hbWUgaXMgcmVxdWlyZWRcIjtcblxuLy9sYXN0IG5hbWUgbWlzc2luZ1xuZXhwb3J0IGNvbnN0IGxhc3ROYW1lTWlzc2luZ0Vyck1zZyA9IFwiTGFzdCBOYW1lIGlzIHJlcXVpcmVkXCI7XG5cbi8vZW1haWwgbWlzc2luZ1xuZXhwb3J0IGNvbnN0IGVtYWlsTWlzc2luZ0Vyck1zZyA9IFwiRW1haWwgaXMgcmVxdWlyZWRcIjtcbi8vZW1haWwgdmFsaWRcbmV4cG9ydCBjb25zdCBlbWFpbE5vdFZhbGlkRXJyTXNnID0gXCJFbWFpbCBJZCBpcyBub3QgdmFsaWRcIjtcblxuLy9QaG9uZSBtaXNzaW5nXG5leHBvcnQgY29uc3QgcGhvbmVNaXNzaW5nRXJyTXNnID0gXCJQaG9uZSBpcyByZXF1aXJlZFwiO1xuLy9QaG9uZSBWYWxpZFxuZXhwb3J0IGNvbnN0IHBob25lTm90VmFsaWRFcnJNc2cgPSBcIlBob25lIG51bWJlciBpcyBub3QgdmFsaWRcIjtcblxuLy9QYXNzd29yZCBtaXNzaW5nXG5leHBvcnQgY29uc3QgcGFzc3dvcmRNaXNzaW5nRXJyTXNnID0gXCJQYXNzd29yZCBpcyByZXF1aXJlZFwiO1xuXG4vL1Bhc3N3b3JkIHNob3J0XG5leHBvcnQgY29uc3QgcGFzc3dvcmRTaG9ydEVyck1zZyA9IFwiUGFzc3dvcmQgc2hvdWxkIGJlIDYgY2hhcmFjdGVyc1wiO1xuXG4vL1Bhc3N3b3JkIFZhbGlkXG5leHBvcnQgY29uc3QgcGFzc3dvcmRWYWxpZEVyck1zZyA9XG5cdFwiQSBtaW5pbXVtIDYgY2hhcmFjdGVycyBwYXNzd29yZCBjb250YWlucyBhIGNvbWJpbmF0aW9uIG9mIHVwcGVyY2FzZSBhbmQgbG93ZXJjYXNlIGxldHRlciBhbmQgbnVtYmVyXCI7XG5cbi8vUGFzc3dvcmQgbWF0Y2hcbmV4cG9ydCBjb25zdCBvbmx5RGlnaXRzID0gXCJPbmx5IERpZ2l0c1wiO1xuXG4vL1Bhc3N3b3JkIG1hdGNoXG5leHBvcnQgY29uc3QgcGFzc3dvcmRNYXRjaEVyck1zZyA9IFwiUGFzc3dvcmRzIGRvIG5vdCBtYXRjaC5cIjtcblxuLy9Db25maXJtIFBhc3N3b3JkIG1hdGNoXG5leHBvcnQgY29uc3QgY29uZmlybVBhc3N3b3JkRXJyTXNnID0gXCJDb25maXJtIFBhc3N3b3JkIGlzIHJlcXVpcmVkXCI7XG5cbi8vWmlwIGNvZGUgZXJyb3IgbWF0Y2hcbmV4cG9ydCBjb25zdCB6aXBNaXNzaW5nRXJyTXNnID0gXCJaaXAgQ29kZSBpcyByZXF1aXJlZFwiO1xuZXhwb3J0IGNvbnN0IHppcFZhbGlkRXJyTXNnID0gXCJaaXAgQ29kZSBOb3QgVmFsaWRcIjtcblxuLy8gV2Vic2l0ZSBjb2RlIGVycm9yIG1hdGNoXG5leHBvcnQgY29uc3Qgd2Vic2l0ZU1pc3NpbmdFcnJNc2cgPSBcIldlYnNpdGUgaXMgcmVxdWlyZWRcIjtcbmV4cG9ydCBjb25zdCB3ZWJzaXRlVmFsaWRFcnJNc2cgPSBcIldlYnNpdGUgVXJsIGlzICBOb3QgVmFsaWRcIjtcblxuLy8gSW5zdGFncmFtIGNvZGUgZXJyb3IgbWF0Y2hcbmV4cG9ydCBjb25zdCBpbnN0YWdyYW1NaXNzaW5nRXJyTXNnID0gXCJJbnN0YWdyYW0gaXMgcmVxdWlyZWRcIjtcbmV4cG9ydCBjb25zdCBpbnN0YWdyYW1WYWxpZEVyck1zZyA9IFwiSW5zdGFncmFtIFVybCBpcyAgTm90IFZhbGlkXCI7XG5cbi8vIEZhY2Vib29rIGNvZGUgZXJyb3IgbWF0Y2hcbmV4cG9ydCBjb25zdCBmYWNlQm9va01pc3NpbmdFcnJNc2cgPSBcIkZhY2Vib29rIGlzIHJlcXVpcmVkXCI7XG5leHBvcnQgY29uc3QgZmFjZUJvb2tWYWxpZEVyck1zZyA9IFwiRmFjZWJvb2sgVXJsIGlzICBOb3QgVmFsaWRcIjtcblxuLy8gbmV3IHBhc3N3b3JkIG1lc3NhZ2VcbmV4cG9ydCBjb25zdCBuZXdQYXNzd29yZFN1Y2Nlc3NNc2cgPVxuXHRcIllvdXIgcGFzc3dvcmQgaGFzIGJlZW4gdXBkYXRlZCBzdWNjZXNzZnVsbHlcIjtcblxuZXhwb3J0IGNvbnN0IGZheE1pc3NpbmdFcnJNc2cgPSBcIkZheCBOdW1iZXIgaXMgcmVxdWlyZWRcIjtcbmV4cG9ydCBjb25zdCBmYXhWYWxpZEVyck1zZyA9IFwiRmF4IE51bWJlciBpcyAgTm90IFZhbGlkXCI7XG5cbi8vIHNvbWV0aGluZyB3cm9uZ1xuZXhwb3J0IGNvbnN0IHNvbWVUaGluZ1dyb25nVHJ5QWdhaW4gPSBcIlNvbWV0aGluZyB3YXMgd3JvbmcgcGxlYXNlIHRyeSBhZ2FpblwiO1xuXG4vLyBzb21ldGhpbmcgd3JvbmdcbmV4cG9ydCBjb25zdCB3cm9uZ01vZGFsVGl0bGUgPSBcIkZhaWxlZFwiO1xuZXhwb3J0IGNvbnN0IHNvbWVUaGluZ1dyb25nID0gXCJTb21ldGhpbmcgd2VudCB3cm9uZ1wiO1xuXG4vLyBpbnZhbGlkIGNhcmQgZGV0YWlsc1xuZXhwb3J0IGNvbnN0IGludmFsaWRDYXJkRGV0YWlsID0gXCJJbnZhbGlkIENhcmQgRGV0YWlsc1wiO1xuXG4vLyAgaW52YWxpZCBleHBpcmF0aW9uIGRhdGVcbmV4cG9ydCBjb25zdCBpbnZhbGlkRXhwaXJ5RGF0ZSA9IFwiSW52YWxpZCBFeHBpcmF0aW9uIGRhdGVcIjtcblxuLy8gYWxsIGZpZWxkIHJlcXVpcmVkXG5leHBvcnQgY29uc3QgYWxsRmllbGRSZXEgPSBcIkFsbCBmaWVsZHMgYXJlIHJlcXVpcmVcIjtcblxuLy8gb3JkZXIgcGxhY2VkIHN1Y2Nlc3NmdWxseVxuZXhwb3J0IGNvbnN0IG9yZGVyUGxhY2VkTW9kYWxUaXRsZSA9IFwiT3JkZXIgUGxhY2VkXCI7XG5leHBvcnQgY29uc3Qgb3JkZXJQbGFjZWRTdWNjZXNzZnVsbHkgPSBcIllvdXIgb3JkZXIgd2FzIHBsYWNlZCBzdWNjZXNzZnVsbHlcIjtcbmV4cG9ydCBjb25zdCBhZGRyZXNzQWRkZWQgPSBcIllvdXIgQWRkcmVzcyBoYXMgYmVlbiBzdWNjZXNzZnVsbHkgdXBkYXRlZC5cIjtcbmV4cG9ydCBjb25zdCBhZGRyZXNzQWRkZWRNb2RhbFRpdGxlID0gXCJEZXRhaWxzIFVwZGF0ZWRcIjtcblxuLy8gc3Vic2NyaWJlIGFkZCBmYWlsXG5leHBvcnQgY29uc3Qgc3Vic2NyaWJlRmFpbE1zZyA9IFwiRmFpbGVkIHRvIHN1YnNjcmliZSB0aGlzIHByb2R1Y3RcIjtcblxuLy9PbGQgUGFzc3dvcmQgaXMgcmVxdWlyZWRcbmV4cG9ydCBjb25zdCBvbGRQYXNzd29yZFJlcXVpcmVkID0gXCJPbGQgUGFzc3dvcmQgaXMgcmVxdWlyZWRcIjtcblxuLy9PbGQgUGFzc3dvcmQgaXMgcmVxdWlyZWRcbmV4cG9ydCBjb25zdCBub1JhdGluZ01zZyA9IFwiUGxlYXNlIHNlbGVjdCBhIHN0YXIgcmF0aW5nXCI7XG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBleHBvcnQgY29uc3QgcHJvamVjdE5hbWUgPSBwcm9qZWN0TmFtZTtcbmV4cG9ydCBjb25zdCBjb250YWN0TnVtYmVyID0gXCIrMS42NDYuMzY3LjM3MjUgKFVTQSlcIjtcblxuLy8gbG9naW4gcGFnZSBtZXNzYWdlXG5leHBvcnQgY29uc3QgbG9naW5IZWFkaW5nID0gXCJIZWxsb1wiO1xuZXhwb3J0IGNvbnN0IGxvZ2luTXNnID0gYCBXZWxjb21lIHRvICR7cHJvamVjdE5hbWV9YDtcbmV4cG9ydCBjb25zdCB1c2VyTm90QWN0aXZlTXNnID0gXCJZb3VyIEFjY291bnQgaXMgbm90IHlldCBBcHByb3ZlZFwiO1xuXG4vLyByZWdpc3RyYXRpb24gcGFnZVxuZXhwb3J0IGNvbnN0IHJlZ0hlYWRpbmcgPSBcIkhlbGxvXCI7XG5leHBvcnQgY29uc3QgcmVnTXNnID0gXCIgWW91J3ZlIGJlZW4gc3VjY2Vzc2Z1bGx5IHJlZ2lzdGVyZWRcIjtcblxuLy8gZm9yZ290IHBhc3N3b3JkIHBhZ2VcbmV4cG9ydCBjb25zdCBzZW5kRW1haWxIZWFkaW5nID0gXCJcIjtcbmV4cG9ydCBjb25zdCBzZW5kRW1haWxNc2cgPSBcIldlJ3ZlIGVtYWlsZWQgeW91IGEgbGluayB0byByZXNldCB5b3VyIHBhc3N3b3JkLlwiO1xuXG5leHBvcnQgY29uc3QgbG9naW5GYWlsTVNnID1cblx0XCJTb21ldGhpbmcncyBub3QgcmlnaHQgd2l0aCB5b3VyIHVzZXJuYW1lIG9yIFBhc3N3b3JkXCI7XG5leHBvcnQgY29uc3QgcGFzc0luY29ycmVjdCA9IFwiWW91ciBwYXNzd29yZCBpcyBpbmNvcnJlY3RcIjtcbmV4cG9ydCBjb25zdCB1c2VyTm90Rm91bmQgPSBcIldlIGNhbm5vdCBmaW5kIGFuIGFjY291bnQgd2l0aCB0aGF0IGVtYWlsIGFkZHJlc3NcIjtcblxuZXhwb3J0IGNvbnN0IHByb2JsZW1UaXRsZSA9IFwiVGhlcmUgd2FzIGEgcHJvYmxlbVwiO1xuLy8gcHJvZHVjdCBkZXRhaWwgcGFnZVxuZXhwb3J0IGNvbnN0IGFkZFRvQ2FydE1lc3NhZ2UgPSBcIkFkZGVkIHRvIHlvdXIgYmFnXCI7XG5leHBvcnQgY29uc3QgYWRkUmV2aWV3TWVzc2FnZSA9IFwiUmV2aWV3IGFkZCBzdWNjZXNzZnVsbHkgXCI7XG5leHBvcnQgY29uc3Qgd2l0aG91dExvZ2luUmV2aWV3TWVzc2FnZSA9IFwiUGxlYXNlIGxvZ2luIGJlZm9yZSByZXZpZXcgXCI7XG5leHBvcnQgY29uc3QgcHJvZHVjdERldGFpbE1vZGFsVGl0bGUgPSBcIlByb2R1Y3QgRGV0YWlscyBcIjtcblxuLy8gbXkgYWNjb3VudCBwYWdlXG5leHBvcnQgY29uc3QgY2FuY2VsT3JkZXIgPSBcIkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBjYW5jZWwgdGhpcyBvcmRlcj9cIjtcbmV4cG9ydCBjb25zdCBjYW5jZWxTdWNjZXNzID0gXCJPcmRlciBjYW5jZWxsZWQgc3VjY2Vzc2Z1bGx5LlwiO1xuZXhwb3J0IGNvbnN0IGNhbmNlbENhbmNlbCA9IFwiUHJvY2VlZCBPcmRlciBDYW5jZWxsZWQgU3VjY2Vzc2Z1bGx5XCI7XG5cbmV4cG9ydCBjb25zdCB3YXJuaW5nVGV4dCA9IFwiV2FybmluZ1wiO1xuXG4vLyBGYXZvdXJpdGVzIHBhZ2VcbmV4cG9ydCBjb25zdCBmYXZvdXJpdGVzQWxyZWFkeVByb2R1Y3RJbnRvQ2FydE1lc3NhZ2UgPVxuXHRcIlByb2R1Y3QgYWxyZWFkeSBhZGRlZCBpbiB5b3VyIGNhcnQuXCI7XG5cbmV4cG9ydCBjb25zdCBlbXB0eUNhcnQgPSBcIllPVVIgQkFHIElTIEVNUFRZXCI7XG5cbi8vIHByb2ZpbGUgVXBkYXRlIFBhZ2VcbmV4cG9ydCBjb25zdCBwcm9maWxlVXBkYXRlTWVzc2FnZSA9IFwiWW91ciBhY2NvdW50IHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5IC4gXCI7XG5leHBvcnQgY29uc3QgZm9ybUVycm9yTWVzc2FnZSA9XG5cdFwiU29tZXRoaW5nJ3Mgbm90IHJpZ2h0IHdpdGggdGhpcyBmb3JtIGRldGFpbHMuIFwiO1xuXG4vLyBjb250YWN0IHBhZ2VcbmV4cG9ydCBjb25zdCBtc2dTZW50ID0gXCJUaGFuayB5b3UgZm9yIGNvbnRhY3RpbmcgdXMuIFdlIHdpbGwgY29udGFjdCB5b3UgYXNhcCFcIjtcbmV4cG9ydCBjb25zdCBtc2dTZW50VGl0bGUgPSBcIlRoYW5rIHlvdVwiO1xuZXhwb3J0IGNvbnN0IG1zZ0ZhaWxlZCA9IFwiVGhlcmUgc2VlbXMgdG8gYmUgYSBwcm9ibGVtLiBUcnkgYWdhaW4gbGF0ZXIuXCI7XG5leHBvcnQgY29uc3QgbXNnRmFpbGVkVGl0bGUgPSBcIkVycm9yXCI7XG5cbi8vIG15IG9yZGVyIHBhZ2VcbmV4cG9ydCBjb25zdCBteU9yZGVyUGFnZUZvb3RlckRldGFpbHMgPSBbXG5cdHsgZGV0YWlsczogXCJGaW5kIHRoZSBlc3RpbWF0ZWQgZGVsaXZlcnkgZGF0ZSBmb3IgeW91ciByZWNlbnQgcHVyY2hhc2VcIiB9LFxuXHR7IGRldGFpbHM6IFwiVHJhY2sgYW55IHJldHVybnMgZm9yIHlvdXIgb3JkZXJcIiB9LFxuXHR7IGRldGFpbHM6IFwiU2VlIHdoZXJlIHRoZSBvcmRlciBpcyBiZWluZyBzaGlwcGVkXCIgfSxcbl07XG5cbi8vIHBheW1lbnQgbWV0aG9kIHBhZ2VcbmV4cG9ydCBjb25zdCBjYXJkRGV0YWlsc1NhdmUgPSBcIkNhcmQgZGV0YWlscyB1cGRhdGVkICBzdWNjZXNzZnVsbHlcIjtcbmV4cG9ydCBjb25zdCBjYXJkRGV0YWlsc2ZhaWwgPSBcIkNhcmQgZGV0YWlscyB1cGRhdGVkICBmYWlsZWRcIjtcblxuZXhwb3J0IGNvbnN0IGVuYWJsZUNoZWNrb3V0Q2hlY2tib3hEZXRhaWxzID1cblx0XCJFeHByZXNzIGNoZWNrb3V0IGFsbG93cyB5b3UgdG8gc2tpcCB0aGUgcmVndWxhciBjaGVja291dCBwcm9jZXNzIGFuZCBhY2NlbGVyYXRlIHJpZ2h0IHRvIG9yZGVyIHJldmlldyB1c2luZyB5b3VyIHNhdmVkIHNoaXBwaW5nIGFuZCBwYXltZW50IGluZm9ybWF0aW9uLlwiO1xuZXhwb3J0IGNvbnN0IHNoaXBwaW5nQWRkcmVzc0RldGFpbHMgPVxuXHRcIlNhdmVkIGFkZHJlc3MgYWxsb3cgeW91IHRvIGNoZWNrIG91dCBmYXN0ZXIgc2luY2UgeW91IHdvbid0IGhhdmUgdG8gZW50ZXIgaW4geW91ciBzaGlwcGluZyBpbmZvcm1hdGlvbiBlYWNoIHRpbWUuIFlvdSdsbCBiZSBhYmxlIHRvIHNlbGVjdCB0aGUgZXhwcmVzcyBjaGVja291dCBvcHRpb24uXCI7XG5leHBvcnQgY29uc3Qgc3RyaXBlUGF5bWVudERldGFpbHMgPVxuXHRcIlNhdmVkIHBheW1lbnQgaW5mb3JtYXRpb24gYWxsb3dzIHlvdSB0byBjaGVjayBvdXQgZmFzdGVyIC0geW91IHdvbid0IGhhdmUgdG8gZW50ZXIgaW4geW91ciBjcmVkaXQgY2FyZCwgZ2lmdCBjYXJkLCBvciBvdGhlciBwYXltZW50IGluZm9ybWF0aW9uIGVhY2ggdGltZSB5b3UgY2hlY2tvdXQuIFRoaXMgYWxzbyBhbGxvd3MgeW91IHRvIHVzZSB0aGUgZXhwcmVzcyBjaGVja291dCBvcHRpb24uXCI7XG5cbmV4cG9ydCBjb25zdCBwYXltZW50TWV0aG9kVG9sbFRpcHBNZXNzYWdlID1cblx0XCJFbnRlcmluZyBhIGRlZmF1bHQgcGF5bWVudCBtZXRob2QgaGVyZSBtZWFucyB5b3Ugd29uJ3QgaGF2ZSB0byBlbnRlciBhIHBheW1lbnQgbWV0aG9kIGVhY2ggdGltZSB5b3UgY2hlY2sgb3V0IC4gTWFrZSBzdXJlIHlvdSBmaWxsIGluIGFsbCByZXF1aXJlZCBmaWVsZHMgb24geW91clwiO1xuZXhwb3J0IGNvbnN0IHNoaXBwaW5nQWRkcmVzc1RvbGxUaXBwTWVzc2FnZSA9XG5cdFwiRW50ZXJpbmcgYSBkZWZhdWx0IHNoaXBwaW5nIGFkZHJlc3MgaGVyZSBtZWFucyB5b3Ugd29uJ3QgaGF2ZSB0byBlbnRlciBhbiBhZGRyZXNzIGVhY2ggdGltZSB5b3UgY2hlY2sgb3V0XCI7XG5cbi8vIGZvb3RlclxuXG5leHBvcnQgY29uc3QgZm9vdGVyU3Vic2NyaXB0aW9uRGV0YWlscyA9IGBJIHdvdWxkIGxpa2UgdG8gcmVjZWl2ZSBjb21tdW5pY2F0aW9ucyBhYm91dCAke3Byb2plY3ROYW1lfSBwcm9kdWN0cyBhbmQgc2VydmljZXMuYDtcbmV4cG9ydCBjb25zdCBmb290ZXJTdWJzY3JpcHRpb1N1Y2Nlc3NIZWFkaW5nTWVzc2FnZSA9IFwiVGhhbmtzIGZvciBzdWJzY3JpYmluZ1wiO1xuZXhwb3J0IGNvbnN0IGZvb3RlclN1YnNjcmlwdGlvU3VjY2Vzc0RldGFpbHNNZXNzYWdlID1cblx0XCJXZSBhcmUgYWx3YXlzIHBsZWFzZWQgdG8gc2hhcmUgb3VyIHBhc3Npb25hdGUgaW50ZXJlc3RzIHdpdGggbGlrZS1taW5kZWQgaW5kaXZpZHVhbHMuXCI7XG5leHBvcnQgY29uc3QgZm9vdGVyU3ViTW9kYWxUaXRsZSA9IFwiU3Vic2NyaWJlZFwiO1xuLy9jaGVja291dCBIZWFkZXJcblxuZXhwb3J0IGNvbnN0IGNvbmZpcm1Mb2dvdXQgPSBcIkNvbmZpcm0gbG9nb3V0XCI7XG5leHBvcnQgY29uc3QgY2hlY2tvdXRIZWFkZXJSaWdodFNpZGVJY29uV2FycmFudHkgPSBcIjYwIGRheXMgd2FycmFudHlcIjtcbmV4cG9ydCBjb25zdCBjaGVja291dEhlYWRlclJpZ2h0U2lkZUljb25kZWxpdmVyeSA9IFwiR2xvYmFsIGRlbGl2ZXJ5XCI7XG5leHBvcnQgY29uc3QgY2hlY2tvdXRIZWFkZXJSaWdodFNpZGVJY29uU2VjdXJlcGF5bWVudCA9IFwiU2VjdXJlIHBheW1lbnRcIjtcblxuLy8gYW1iYXNzYWRvci1wb3J0YWwgIFBhZ2VcbmV4cG9ydCBjb25zdCBhbWJhc3NhZG9yQWNjb3VudFVwZGF0ZU1lc3NhZ2UgPVxuXHRcIllvdXIgQW1iYXNzYWRvciBQb3J0YWwgQWNjb3VudCAgdXBkYXRlZCAgc3VjY2Vzc2Z1bGx5IC4gXCI7XG5leHBvcnQgY29uc3QgYW1iYXNzYWRvckJhbmtVcGRhdGVNZXNzYWdlID1cblx0XCJZb3VyIEFtYmFzc2Fkb3IgUG9ydGFsIEJhbmsgRGV0YWlscyAgdXBkYXRlZCAgc3VjY2Vzc2Z1bGx5IC4gXCI7XG5leHBvcnQgY29uc3QgYW1iYXNzYWRvclRheFVwZGF0ZU1lc3NhZ2UgPVxuXHRcIllvdXIgQW1iYXNzYWRvciBQb3J0YWwgVGF4IERldGFpbHMgIHVwZGF0ZWQgIHN1Y2Nlc3NmdWxseSAuIFwiO1xuXG5leHBvcnQgY29uc3QgbmFtZU1pc3NpbmdFcnJNc2cgPSBcIk5hbWUgaXMgcmVxdWlyZWRcIjtcbmV4cG9ydCBjb25zdCBjdXJyZW5jeU1pc3NpbmdFcnJNc2cgPSBcIkN1cnJlbmN5IGlzIHJlcXVpcmVkXCI7XG5leHBvcnQgY29uc3QgY3VycmVuY3lWYWxpZEVyck1zZyA9IFwiQ3VycmVuY3kgaXMgbm90IHZhbGlkXCI7XG5leHBvcnQgY29uc3QgYWNjb3VudE51bWJlck1pc3NpbmdNc2cgPSBcIkNoZWNraW5nIGFjY291bnQgbnVtYmVyIGlzIHJlcXVpcmVkXCI7XG5leHBvcnQgY29uc3QgYWNjb3VudE51bWJlclZhbGlkTXNnID0gXCJDaGVja2luZyBhY2NvdW50IG51bWJlciBpcyBub3QgdmFsaWRcIjtcbmV4cG9ydCBjb25zdCBhY2NvdW50TnVtYmVyQ29uZmlybU1pc3NpbmdNc2cgPVxuXHRcIkNoZWNraW5nIGFjY291bnQgbnVtYmVyIGlzIHJlcXVpcmVkXCI7XG5leHBvcnQgY29uc3QgYWNjb3VudE51bWJlckNvbmZpcm1WYWxpZE1zZyA9XG5cdFwiQ2hlY2tpbmcgYWNjb3VudCBudW1iZXJzIGRvIG5vdCBtYXRjaC5cIjtcbmV4cG9ydCBjb25zdCBhY2NvdW50SG9sZGVyTWlzc2luZ01zZyA9IFwiQWNjb3VudCBIb2xkZXIgTmFtZSBpcyByZXF1aXJlZFwiO1xuZXhwb3J0IGNvbnN0IGFjY291bnRIb2xkZXJOYW1lVmFsaWRNc2cgPSBcIkFjY291bnQgSG9sZGVyIE5hbWUgaXMgbm90IHZhbGlkXCI7XG5leHBvcnQgY29uc3QgYWNjb3VudEJhbmtNaXNzaW5nTXNnID0gXCJCYW5rIE5hbWUgaXMgcmVxdWlyZWRcIjtcbmV4cG9ydCBjb25zdCBhY2NvdW50QmFua1ZhbGlkTXNnID0gXCJCYW5rIE5hbWUgaXMgbm90IHZhbGlkXCI7XG5leHBvcnQgY29uc3QgYnVzaW5lc3NUeXBlQmFua01pc3NpbmdNc2cgPSBcIkJ1c2luZXNzIFR5cGUgaXMgcmVxdWlyZWRcIjtcbmV4cG9ydCBjb25zdCBpbnZhbGlkT2xkUGFzcyA9IFwiSW5jb3JyZWN0IE9sZCBQYXNzd29yZFwiO1xuXG5leHBvcnQgY29uc3Qgcm91dGluZ1R5cGVNaXNzaW5nTXNnID0gXCJCYW5rIHJvdXRpbmcgbnVtYmVyIGlzIHJlcXVpcmVkLlwiO1xuZXhwb3J0IGNvbnN0IHJvdXRpbmdUeXBlVmFsaWRNc2cgPVxuXHRcIkJhbmsgcm91dGluZyBudW1iZXIgbXVzdCBiZSBleGFjdGx5IG5pbmUgZGlnaXRzLlwiO1xuZXhwb3J0IGNvbnN0IGRyaXZpbmdMaWNlbnNlTWlzc2luZ0VyciA9IFwiRHJpdmVyJ3MgbGljZW5zZSBudW1iZXIgaXMgcmVxdWlyZWQuXCI7XG5leHBvcnQgY29uc3QgZHJpdmluZ0xpY2Vuc2VWYWxpZE1zZyA9IFwiRHJpdmVyJ3MgbGljZW5zZSBudW1iZXIgaXMgbm90IHZhbGlkLlwiO1xuXG5leHBvcnQgY29uc3QgZXhwaXJlTW9udGhJbnZhbGlkID0gXCJZb3VyIGNhcmQncyBleHBpcmF0aW9uIG1vbnRoIGlzIGludmFsaWQuXCI7XG5leHBvcnQgY29uc3QgZXhwaXJlWWVhckludmFsaWQgPSBcIllvdXIgY2FyZCdzIGV4cGlyYXRpb24geWVhciBpcyBpbnZhbGlkLlwiO1xuZXhwb3J0IGNvbnN0IGNhcmROdW1iZXJJbnZhbGlkID0gXCJZb3VyIGNhcmQgbnVtYmVyIGlzIGluY29ycmVjdC5cIjtcbmV4cG9ydCBjb25zdCBjYXJkRGV0YWlsc05vdE1BdGNoID0gXCJDb3VsZCBub3QgZmluZCBwYXltZW50IGluZm9ybWF0aW9uXCI7XG5leHBvcnQgY29uc3QgY2FyZEV4cGlyZVllYXJSZXF1aXJlZCA9IFwiRXhwaXJlIFllYXIgaXMgcmVxdWlyZWRcIjtcbmV4cG9ydCBjb25zdCBjYXJkRXhwaXJlTW9udGhSZXF1aXJlZCA9IFwiRXhwaXJlIE1vbnRoIGlzIHJlcXVpcmVkXCI7XG5leHBvcnQgY29uc3QgY2FyZE51bWJlclJlcXVpcmVkID0gXCJDYXJkIE51bWJlciBpcyByZXF1aXJlZFwiO1xuZXhwb3J0IGNvbnN0IGN2dk51bWJlclJlcXVpcmVkID0gXCJDdlYgTnVtYmVyIGlzIHJlcXVpcmVkXCI7XG5leHBvcnQgY29uc3QgaW52YWxpZENWVk51bWJlciA9IFwiWW91ciBDVlYgbnVtYmVyIGlzIGluY29ycmVjdC5cIjtcbmV4cG9ydCBjb25zdCBpbnZhbGlkZGF0ZU51bWJlciA9IFwiWW91ciBFeHBpcmF0aW9uIERhdGUgaXMgaW5jb3JyZWN0LlwiO1xuXG4vL1xuZXhwb3J0IGNvbnN0IGFkZHJlc3NBZGRlZE1zZyA9IFwiQWRkcmVzcyBTdWNjZXNzZnVsbHkgU2F2ZWQuXCI7XG5cbi8vXG5leHBvcnQgY29uc3QgY2FyZFN1Ym1pdFN1Y2Nlc3NNc2cgPSBcIkNhcmQgU3VjY2Vzc2Z1bGx5IFNhdmVkXCI7XG5cbi8vIHNoaXBwaW5nXG5leHBvcnQgY29uc3Qgc2hpcHBpbmdFeHRyYVJhdGUgPSA1O1xuZXhwb3J0IGNvbnN0IHNoaXBwaW5nU3RhdGljUmF0ZSA9IDUuOTU7XG5leHBvcnQgY29uc3Qgc2hpcHBpbmdGcmVlQWZ0ZXIgPSA3NTtcblxuZXhwb3J0IGNvbnN0IGJpbGxpbmdBZGRyZXNzTXNnID0gXCIxLiBCaWxsaW5nIEFkZHJlc3NcIjtcbmV4cG9ydCBjb25zdCBzaGlwcGluZ0FkZHJlc3NNc2cgPSBcIlNoaXBwaW5nIEFkZHJlc3NcIjtcbmV4cG9ydCBjb25zdCBzYW1lU2hpcHBpbmdNc2cgPSBcIkJpbGwgdG8gdGhlIHNhbWUgYWRkcmVzc1wiO1xuZXhwb3J0IGNvbnN0IHNlbGVjdENhcnJpZXJNc2cgPSBcIjIuIFNlbGVjdCB5b3VyIGNhcnJpZXJcIjtcbmV4cG9ydCBjb25zdCBwYXltZW50TWV0aG9kTXNnID0gXCIzLiBQYXltZW50IE1ldGhvZFwiO1xuZXhwb3J0IGNvbnN0IHJldmlld09yZGVyTXNnID0gXCI0LiBSZXZpZXcgWW91ciBPcmRlclwiO1xuXG5leHBvcnQgY29uc3QgY2hlY2tvdXRQYWdlVGl0bGUgPSBcIkNoZWNrb3V0XCI7XG5leHBvcnQgY29uc3QgY2hlY2tvdXRQYWdlU3ViVGl0bGUgPVxuXHRcIlBsZWFzZSBFbnRlciBZb3VyIERldGFpbHMgQmVsb3cgdG8gQ29tcGxldGUgWW91ciBQdXJjaGFzZS5cIjtcblxuLy9cbmV4cG9ydCBjb25zdCBkZWZhdWx0T3JkZXJTdGF0dXMgPSBcIlRyYW5zYWN0aW9uIGNvbXBsZXRlZCAtIGxhYmVsIGdlbmVyYXRlZFwiO1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRTdGF0dXNJbk9yZGVyID0gXCJpbiBwcm9jZXNzXCI7XG5cbmV4cG9ydCBjb25zdCB3cm9uZ0NhcmREZXRhaWxzID0gXCJDYXJkIGRldGFpbHMgbm90IHZhbGlkXCI7XG5cbmV4cG9ydCBjb25zdCBjaG9vc2VQcm9kdWN0cyA9IFwiQ2hvb3NlIGEgUHJvZHVjdFwiO1xuZXhwb3J0IGNvbnN0IHdyaXRlUmV2aWV3ID0gXCJXZeKAmWQgbG92ZSB0byBoZWFyIHlvdXIgZmVlZGJhY2shXCI7XG5leHBvcnQgY29uc3QgcmV2aWV3U3VjY2Vzc01zZyA9IFwiVGhhbmsgeW91IGZvciBiZWluZyBhIGN1c3RvbWVyLlwiO1xuXG5leHBvcnQgY29uc3QgaGVhZGxpbmVNaXNzaW5nID0gXCJQbGVhc2UgYWRkIGEgSGVhZGxpbmUuXCI7XG5leHBvcnQgY29uc3QgcmV2aWV3TWlzc2luZyA9IFwiUGxlYXNlIGV4cHJlc3MgeW91ciB2aWV3cy5cIjtcblxuLy9cbmV4cG9ydCBjb25zdCBjb21ib0NhdFRpdGxlID0gXCJCdW5kbGVzXCI7XG5leHBvcnQgY29uc3QgY29tYm9DYXREZXNjID0gXCJCdW5kbGVzXCI7XG5cbi8vXG5leHBvcnQgY29uc3QgdHJhY2tQbGFjZUhvbGRlciA9IFwiRW50ZXIgWW91ciBUcmFja2luZyBJRC5cIjtcbmV4cG9ydCBjb25zdCB0cmFja0xhYmVsID0gXCJUcmFjayBZb3VyIE9yZGVyXCI7XG5cbi8vXG5leHBvcnQgY29uc3QgZW50ZXJNc2cgPVxuXHRcIllvdSBtdXN0IGJlIDE4IHllYXJzIG9yIG9sZGVyIHRvIG9yZGVyIENCRCBwcm9kdWN0cy4gSWYgeW91IGFyZSBvZiBsZWdhbCBhZ2UgY2xpY2sgRW50ZXIuXCI7XG5cbmV4cG9ydCBjb25zdCB6aXBDb2RlSW52YWxpZFNoaXBwaW5nRXJyb3IgPSBcIlBlbGFzZSBlbnRlciBhIHZhbGlkIHppcCBjb2RlIC5cIjtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./constants/constantMessage.js\n");

/***/ }),

/***/ "./services/extra/allCountry.js":
/*!**************************************!*\
  !*** ./services/extra/allCountry.js ***!
  \**************************************/
/*! exports provided: AllCountryObj, CountryCodes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AllCountryObj\", function() { return AllCountryObj; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CountryCodes\", function() { return CountryCodes; });\nconst AllCountryObj = [{\n  name: \"Afghanistan\",\n  code: \"AF\",\n  region: \"Asia\"\n}, {\n  name: \"Ã…land Islands\",\n  code: \"AX\",\n  region: \"Europe\"\n}, {\n  name: \"Albania\",\n  code: \"AL\",\n  region: \"Europe\"\n}, {\n  name: \"Algeria\",\n  code: \"DZ\"\n}, {\n  name: \"American Samoa\",\n  code: \"AS\"\n}, {\n  name: \"Andorra\",\n  code: \"AD\"\n}, {\n  name: \"Angola\",\n  code: \"AO\"\n}, {\n  name: \"Anguilla\",\n  code: \"AI\"\n}, {\n  name: \"Antarctica\",\n  code: \"AQ\"\n}, {\n  name: \"Antigua and Barbuda\",\n  code: \"AG\"\n}, {\n  name: \"Argentina\",\n  code: \"AR\"\n}, {\n  name: \"Armenia\",\n  code: \"AM\",\n  region: \"Asia\"\n}, {\n  name: \"Aruba\",\n  code: \"AW\"\n}, {\n  name: \"Australia\",\n  code: \"AU\"\n}, {\n  name: \"Austria\",\n  code: \"AT\"\n}, {\n  name: \"Azerbaijan\",\n  code: \"AZ\",\n  region: \"Asia\"\n}, {\n  name: \"Bahamas\",\n  code: \"BS\"\n}, {\n  name: \"Bahrain\",\n  code: \"BH\",\n  region: \"Asia\"\n}, {\n  name: \"Bangladesh\",\n  code: \"BD\",\n  region: \"Asia\"\n}, {\n  name: \"Barbados\",\n  code: \"BB\"\n}, {\n  name: \"Belarus\",\n  code: \"BY\"\n}, {\n  name: \"Belgium\",\n  code: \"BE\"\n}, {\n  name: \"Belize\",\n  code: \"BZ\"\n}, {\n  name: \"Benin\",\n  code: \"BJ\"\n}, {\n  name: \"Bermuda\",\n  code: \"BM\"\n}, {\n  name: \"Bhutan\",\n  code: \"BT\",\n  region: \"Asia\"\n}, {\n  name: \"Bolivia, Plurinational State of\",\n  code: \"BO\"\n}, {\n  name: \"Bonaire, Sint Eustatius and Saba\",\n  code: \"BQ\"\n}, {\n  name: \"Bosnia and Herzegovina\",\n  code: \"BA\"\n}, {\n  name: \"Botswana\",\n  code: \"BW\"\n}, {\n  name: \"Bouvet Island\",\n  code: \"BV\"\n}, {\n  name: \"Brazil\",\n  code: \"BR\"\n}, {\n  name: \"British Indian Ocean Territory\",\n  code: \"IO\"\n}, {\n  name: \"Brunei Darussalam\",\n  code: \"BN\",\n  region: \"Asia\"\n}, {\n  name: \"Bulgaria\",\n  code: \"BG\"\n}, {\n  name: \"Burkina Faso\",\n  code: \"BF\"\n}, {\n  name: \"Burundi\",\n  code: \"BI\"\n}, {\n  name: \"Cambodia\",\n  code: \"KH\",\n  region: \"Asia\"\n}, {\n  name: \"Cameroon\",\n  code: \"CM\"\n}, {\n  name: \"Canada\",\n  code: \"CA\"\n}, {\n  name: \"Cape Verde\",\n  code: \"CV\"\n}, {\n  name: \"Cayman Islands\",\n  code: \"KY\"\n}, {\n  name: \"Central African Republic\",\n  code: \"CF\"\n}, {\n  name: \"Chad\",\n  code: \"TD\"\n}, {\n  name: \"Chile\",\n  code: \"CL\"\n}, {\n  name: \"China\",\n  code: \"CN\",\n  region: \"Asia\"\n}, {\n  name: \"Christmas Island\",\n  code: \"CX\"\n}, {\n  name: \"Cocos (Keeling) Islands\",\n  code: \"CC\"\n}, {\n  name: \"Colombia\",\n  code: \"CO\"\n}, {\n  name: \"Comoros\",\n  code: \"KM\"\n}, {\n  name: \"Congo\",\n  code: \"CG\"\n}, {\n  name: \"Congo, the Democratic Republic of the\",\n  code: \"CD\"\n}, {\n  name: \"Cook Islands\",\n  code: \"CK\"\n}, {\n  name: \"Costa Rica\",\n  code: \"CR\"\n}, {\n  name: \"CÃ´te d'Ivoire\",\n  code: \"CI\"\n}, {\n  name: \"Croatia\",\n  code: \"HR\"\n}, {\n  name: \"Cuba\",\n  code: \"CU\"\n}, {\n  name: \"CuraÃ§ao\",\n  code: \"CW\"\n}, {\n  name: \"Cyprus\",\n  code: \"CY\",\n  region: \"Asia\"\n}, {\n  name: \"Czech Republic\",\n  code: \"CZ\"\n}, {\n  name: \"Denmark\",\n  code: \"DK\"\n}, {\n  name: \"Djibouti\",\n  code: \"DJ\"\n}, {\n  name: \"Dominica\",\n  code: \"DM\"\n}, {\n  name: \"Dominican Republic\",\n  code: \"DO\"\n}, {\n  name: \"Ecuador\",\n  code: \"EC\"\n}, {\n  name: \"Egypt\",\n  code: \"EG\"\n}, {\n  name: \"El Salvador\",\n  code: \"SV\"\n}, {\n  name: \"Equatorial Guinea\",\n  code: \"GQ\"\n}, {\n  name: \"Eritrea\",\n  code: \"ER\"\n}, {\n  name: \"Estonia\",\n  code: \"EE\"\n}, {\n  name: \"Ethiopia\",\n  code: \"ET\"\n}, {\n  name: \"Falkland Islands (Malvinas)\",\n  code: \"FK\"\n}, {\n  name: \"Faroe Islands\",\n  code: \"FO\"\n}, {\n  name: \"Fiji\",\n  code: \"FJ\"\n}, {\n  name: \"Finland\",\n  code: \"FI\"\n}, {\n  name: \"France\",\n  code: \"FR\"\n}, {\n  name: \"French Guiana\",\n  code: \"GF\"\n}, {\n  name: \"French Polynesia\",\n  code: \"PF\"\n}, {\n  name: \"French Southern Territories\",\n  code: \"TF\"\n}, {\n  name: \"Gabon\",\n  code: \"GA\"\n}, {\n  name: \"Gambia\",\n  code: \"GM\"\n}, {\n  name: \"Georgia\",\n  code: \"GE\",\n  region: \"Asia\"\n}, {\n  name: \"Germany\",\n  code: \"DE\"\n}, {\n  name: \"Ghana\",\n  code: \"GH\"\n}, {\n  name: \"Gibraltar\",\n  code: \"GI\"\n}, {\n  name: \"Greece\",\n  code: \"GR\"\n}, {\n  name: \"Greenland\",\n  code: \"GL\"\n}, {\n  name: \"Grenada\",\n  code: \"GD\"\n}, {\n  name: \"Guadeloupe\",\n  code: \"GP\"\n}, {\n  name: \"Guam\",\n  code: \"GU\"\n}, {\n  name: \"Guatemala\",\n  code: \"GT\"\n}, {\n  name: \"Guernsey\",\n  code: \"GG\"\n}, {\n  name: \"Guinea\",\n  code: \"GN\"\n}, {\n  name: \"Guinea-Bissau\",\n  code: \"GW\"\n}, {\n  name: \"Guyana\",\n  code: \"GY\"\n}, {\n  name: \"Haiti\",\n  code: \"HT\"\n}, {\n  name: \"Heard Island and McDonald Islands\",\n  code: \"HM\"\n}, {\n  name: \"Holy See (Vatican City State)\",\n  code: \"VA\"\n}, {\n  name: \"Honduras\",\n  code: \"HN\"\n}, {\n  name: \"Hong Kong\",\n  code: \"HK\"\n}, {\n  name: \"Hungary\",\n  code: \"HU\"\n}, {\n  name: \"Iceland\",\n  code: \"IS\"\n}, {\n  name: \"India\",\n  code: \"IN\",\n  region: \"Asia\"\n}, {\n  name: \"Indonesia\",\n  code: \"ID\",\n  region: \"Asia\"\n}, {\n  name: \"Iran, Islamic Republic of\",\n  code: \"IR\",\n  region: \"Asia\"\n}, {\n  name: \"Iraq\",\n  code: \"IQ\"\n}, {\n  name: \"Ireland\",\n  code: \"IE\"\n}, {\n  name: \"Isle of Man\",\n  code: \"IM\"\n}, {\n  name: \"Israel\",\n  code: \"IL\"\n}, {\n  name: \"Italy\",\n  code: \"IT\"\n}, {\n  name: \"Jamaica\",\n  code: \"JM\"\n}, {\n  name: \"Japan\",\n  code: \"JP\"\n}, {\n  name: \"Jersey\",\n  code: \"JE\"\n}, {\n  name: \"Jordan\",\n  code: \"JO\"\n}, {\n  name: \"Kazakhstan\",\n  code: \"KZ\"\n}, {\n  name: \"Kenya\",\n  code: \"KE\"\n}, {\n  name: \"Kiribati\",\n  code: \"KI\"\n}, {\n  name: \"Korea, Democratic People's Republic of\",\n  code: \"KP\"\n}, {\n  name: \"Korea, Republic of\",\n  code: \"KR\"\n}, {\n  name: \"Kuwait\",\n  code: \"KW\"\n}, {\n  name: \"Kyrgyzstan\",\n  code: \"KG\"\n}, {\n  name: \"Lao People's Democratic Republic\",\n  code: \"LA\"\n}, {\n  name: \"Latvia\",\n  code: \"LV\"\n}, {\n  name: \"Lebanon\",\n  code: \"LB\"\n}, {\n  name: \"Lesotho\",\n  code: \"LS\"\n}, {\n  name: \"Liberia\",\n  code: \"LR\"\n}, {\n  name: \"Libya\",\n  code: \"LY\"\n}, {\n  name: \"Liechtenstein\",\n  code: \"LI\"\n}, {\n  name: \"Lithuania\",\n  code: \"LT\"\n}, {\n  name: \"Luxembourg\",\n  code: \"LU\"\n}, {\n  name: \"Macao\",\n  code: \"MO\"\n}, {\n  name: \"Macedonia, the Former Yugoslav Republic of\",\n  code: \"MK\"\n}, {\n  name: \"Madagascar\",\n  code: \"MG\"\n}, {\n  name: \"Malawi\",\n  code: \"MW\"\n}, {\n  name: \"Malaysia\",\n  code: \"MY\"\n}, {\n  name: \"Maldives\",\n  code: \"MV\"\n}, {\n  name: \"Mali\",\n  code: \"ML\"\n}, {\n  name: \"Malta\",\n  code: \"MT\"\n}, {\n  name: \"Marshall Islands\",\n  code: \"MH\"\n}, {\n  name: \"Martinique\",\n  code: \"MQ\"\n}, {\n  name: \"Mauritania\",\n  code: \"MR\"\n}, {\n  name: \"Mauritius\",\n  code: \"MU\"\n}, {\n  name: \"Mayotte\",\n  code: \"YT\"\n}, {\n  name: \"Mexico\",\n  code: \"MX\"\n}, {\n  name: \"Micronesia, Federated States of\",\n  code: \"FM\"\n}, {\n  name: \"Moldova, Republic of\",\n  code: \"MD\"\n}, {\n  name: \"Monaco\",\n  code: \"MC\"\n}, {\n  name: \"Mongolia\",\n  code: \"MN\"\n}, {\n  name: \"Montenegro\",\n  code: \"ME\"\n}, {\n  name: \"Montserrat\",\n  code: \"MS\"\n}, {\n  name: \"Morocco\",\n  code: \"MA\"\n}, {\n  name: \"Mozambique\",\n  code: \"MZ\"\n}, {\n  name: \"Myanmar\",\n  code: \"MM\"\n}, {\n  name: \"Namibia\",\n  code: \"NA\"\n}, {\n  name: \"Nauru\",\n  code: \"NR\"\n}, {\n  name: \"Nepal\",\n  code: \"NP\"\n}, {\n  name: \"Netherlands\",\n  code: \"NL\"\n}, {\n  name: \"New Caledonia\",\n  code: \"NC\"\n}, {\n  name: \"New Zealand\",\n  code: \"NZ\"\n}, {\n  name: \"Nicaragua\",\n  code: \"NI\"\n}, {\n  name: \"Niger\",\n  code: \"NE\"\n}, {\n  name: \"Nigeria\",\n  code: \"NG\"\n}, {\n  name: \"Niue\",\n  code: \"NU\"\n}, {\n  name: \"Norfolk Island\",\n  code: \"NF\"\n}, {\n  name: \"Northern Mariana Islands\",\n  code: \"MP\"\n}, {\n  name: \"Norway\",\n  code: \"NO\"\n}, {\n  name: \"Oman\",\n  code: \"OM\"\n}, {\n  name: \"Pakistan\",\n  code: \"PK\"\n}, {\n  name: \"Palau\",\n  code: \"PW\"\n}, {\n  name: \"Palestine, State of\",\n  code: \"PS\"\n}, {\n  name: \"Panama\",\n  code: \"PA\"\n}, {\n  name: \"Papua New Guinea\",\n  code: \"PG\"\n}, {\n  name: \"Paraguay\",\n  code: \"PY\"\n}, {\n  name: \"Peru\",\n  code: \"PE\"\n}, {\n  name: \"Philippines\",\n  code: \"PH\"\n}, {\n  name: \"Pitcairn\",\n  code: \"PN\"\n}, {\n  name: \"Poland\",\n  code: \"PL\"\n}, {\n  name: \"Portugal\",\n  code: \"PT\"\n}, {\n  name: \"Puerto Rico\",\n  code: \"PR\"\n}, {\n  name: \"Qatar\",\n  code: \"QA\"\n}, {\n  name: \"RÃ©union\",\n  code: \"RE\"\n}, {\n  name: \"Romania\",\n  code: \"RO\"\n}, {\n  name: \"Russian Federation\",\n  code: \"RU\"\n}, {\n  name: \"Rwanda\",\n  code: \"RW\"\n}, {\n  name: \"Saint BarthÃ©lemy\",\n  code: \"BL\"\n}, {\n  name: \"Saint Helena, Ascension and Tristan da Cunha\",\n  code: \"SH\"\n}, {\n  name: \"Saint Kitts and Nevis\",\n  code: \"KN\"\n}, {\n  name: \"Saint Lucia\",\n  code: \"LC\"\n}, {\n  name: \"Saint Martin (French part)\",\n  code: \"MF\"\n}, {\n  name: \"Saint Pierre and Miquelon\",\n  code: \"PM\"\n}, {\n  name: \"Saint Vincent and the Grenadines\",\n  code: \"VC\"\n}, {\n  name: \"Samoa\",\n  code: \"WS\"\n}, {\n  name: \"San Marino\",\n  code: \"SM\"\n}, {\n  name: \"Sao Tome and Principe\",\n  code: \"ST\"\n}, {\n  name: \"Saudi Arabia\",\n  code: \"SA\"\n}, {\n  name: \"Senegal\",\n  code: \"SN\"\n}, {\n  name: \"Serbia\",\n  code: \"RS\"\n}, {\n  name: \"Seychelles\",\n  code: \"SC\"\n}, {\n  name: \"Sierra Leone\",\n  code: \"SL\"\n}, {\n  name: \"Singapore\",\n  code: \"SG\"\n}, {\n  name: \"Sint Maarten (Dutch part)\",\n  code: \"SX\"\n}, {\n  name: \"Slovakia\",\n  code: \"SK\"\n}, {\n  name: \"Slovenia\",\n  code: \"SI\"\n}, {\n  name: \"Solomon Islands\",\n  code: \"SB\"\n}, {\n  name: \"Somalia\",\n  code: \"SO\"\n}, {\n  name: \"South Africa\",\n  code: \"ZA\"\n}, {\n  name: \"South Georgia and the South Sandwich Islands\",\n  code: \"GS\"\n}, {\n  name: \"South Sudan\",\n  code: \"SS\"\n}, {\n  name: \"Spain\",\n  code: \"ES\"\n}, {\n  name: \"Sri Lanka\",\n  code: \"LK\"\n}, {\n  name: \"Sudan\",\n  code: \"SD\"\n}, {\n  name: \"Suriname\",\n  code: \"SR\"\n}, {\n  name: \"Svalbard and Jan Mayen\",\n  code: \"SJ\"\n}, {\n  name: \"Swaziland\",\n  code: \"SZ\"\n}, {\n  name: \"Sweden\",\n  code: \"SE\"\n}, {\n  name: \"Switzerland\",\n  code: \"CH\"\n}, {\n  name: \"Syrian Arab Republic\",\n  code: \"SY\"\n}, {\n  name: \"Taiwan, Province of China\",\n  code: \"TW\"\n}, {\n  name: \"Tajikistan\",\n  code: \"TJ\"\n}, {\n  name: \"Tanzania, United Republic of\",\n  code: \"TZ\"\n}, {\n  name: \"Thailand\",\n  code: \"TH\"\n}, {\n  name: \"Timor-Leste\",\n  code: \"TL\",\n  region: \"Asia\"\n}, {\n  name: \"Togo\",\n  code: \"TG\"\n}, {\n  name: \"Tokelau\",\n  code: \"TK\"\n}, {\n  name: \"Tonga\",\n  code: \"TO\"\n}, {\n  name: \"Trinidad and Tobago\",\n  code: \"TT\"\n}, {\n  name: \"Tunisia\",\n  code: \"TN\"\n}, {\n  name: \"Turkey\",\n  code: \"TR\"\n}, {\n  name: \"Turkmenistan\",\n  code: \"TM\"\n}, {\n  name: \"Turks and Caicos Islands\",\n  code: \"TC\"\n}, {\n  name: \"Tuvalu\",\n  code: \"TV\"\n}, {\n  name: \"Uganda\",\n  code: \"UG\"\n}, {\n  name: \"Ukraine\",\n  code: \"UA\"\n}, {\n  name: \"United Arab Emirates\",\n  code: \"AE\"\n}, {\n  name: \"United Kingdom\",\n  code: \"GB\"\n}, {\n  name: \"United States\",\n  code: \"US\"\n}, {\n  name: \"United States Minor Outlying Islands\",\n  code: \"UM\"\n}, {\n  name: \"Uruguay\",\n  code: \"UY\"\n}, {\n  name: \"Uzbekistan\",\n  code: \"UZ\"\n}, {\n  name: \"Vanuatu\",\n  code: \"VU\"\n}, {\n  name: \"Venezuela, Bolivarian Republic of\",\n  code: \"VE\"\n}, {\n  name: \"Viet Nam\",\n  code: \"VN\"\n}, {\n  name: \"Virgin Islands, British\",\n  code: \"VG\"\n}, {\n  name: \"Virgin Islands, U.S.\",\n  code: \"VI\"\n}, {\n  name: \"Wallis and Futuna\",\n  code: \"WF\"\n}, {\n  name: \"Western Sahara\",\n  code: \"EH\"\n}, {\n  name: \"Yemen\",\n  code: \"YE\"\n}, {\n  name: \"Zambia\",\n  code: \"ZM\"\n}, {\n  name: \"Zimbabwe\",\n  code: \"ZW\"\n}];\nconst CountryCodes = [\"AF\", \"AX\", \"AL\", \"DZ\", \"AS\", \"AD\", \"AO\", \"AI\", \"AQ\", \"AG\", \"AR\", \"AM\", \"AW\", \"AU\", \"AT\", \"AZ\", \"BS\", \"BH\", \"BD\", \"BB\", \"BY\", \"BE\", \"BZ\", \"BJ\", \"BM\", \"BT\", \"BO\", \"BQ\", \"BA\", \"BW\", \"BV\", \"BR\", \"IO\", \"BN\", \"BG\", \"BF\", \"BI\", \"KH\", \"CM\", \"CA\", \"CV\", \"KY\", \"CF\", \"TD\", \"CL\", \"CN\", \"CX\", \"CC\", \"CO\", \"KM\", \"CG\", \"CD\", \"CK\", \"CR\", \"CI\", \"HR\", \"CU\", \"CW\", \"CY\", \"CZ\", \"DK\", \"DJ\", \"DM\", \"DO\", \"EC\", \"EG\", \"SV\", \"GQ\", \"ER\", \"EE\", \"ET\", \"FK\", \"FO\", \"FJ\", \"FI\", \"FR\", \"GF\", \"PF\", \"TF\", \"GA\", \"GM\", \"GE\", \"DE\", \"GH\", \"GI\", \"GR\", \"GL\", \"GD\", \"GP\", \"GU\", \"GT\", \"GG\", \"GN\", \"GW\", \"GY\", \"HT\", \"HM\", \"VA\", \"HN\", \"HK\", \"HU\", \"IS\", \"IN\", \"ID\", \"IR\", \"IQ\", \"IE\", \"IM\", \"IL\", \"IT\", \"JM\", \"JP\", \"JE\", \"JO\", \"KZ\", \"KE\", \"KI\", \"KP\", \"KR\", \"KW\", \"KG\", \"LA\", \"LV\", \"LB\", \"LS\", \"LR\", \"LY\", \"LI\", \"LT\", \"LU\", \"MO\", \"MK\", \"MG\", \"MW\", \"MY\", \"MV\", \"ML\", \"MT\", \"MH\", \"MQ\", \"MR\", \"MU\", \"YT\", \"MX\", \"FM\", \"MD\", \"MC\", \"MN\", \"ME\", \"MS\", \"MA\", \"MZ\", \"MM\", \"NA\", \"NR\", \"NP\", \"NL\", \"NC\", \"NZ\", \"NI\", \"NE\", \"NG\", \"NU\", \"NF\", \"MP\", \"NO\", \"OM\", \"PK\", \"PW\", \"PS\", \"PA\", \"PG\", \"PY\", \"PE\", \"PH\", \"PN\", \"PL\", \"PT\", \"PR\", \"QA\", \"RE\", \"RO\", \"RU\", \"RW\", \"BL\", \"SH\", \"KN\", \"LC\", \"MF\", \"PM\", \"VC\", \"WS\", \"SM\", \"ST\", \"SA\", \"SN\", \"RS\", \"SC\", \"SL\", \"SG\", \"SX\", \"SK\", \"SI\", \"SB\", \"SO\", \"ZA\", \"GS\", \"SS\", \"ES\", \"LK\", \"SD\", \"SR\", \"SJ\", \"SZ\", \"SE\", \"CH\", \"SY\", \"TW\", \"TJ\", \"TZ\", \"TH\", \"TL\", \"TG\", \"TK\", \"TO\", \"TT\", \"TN\", \"TR\", \"TM\", \"TC\", \"TV\", \"UG\", \"UA\", \"AE\", \"GB\", \"US\", \"UM\", \"UY\", \"UZ\", \"VU\", \"VE\", \"VN\", \"VG\", \"VI\", \"WF\", \"EH\", \"YE\", \"ZM\", \"ZW\"];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./services/extra/allCountry.js\n");

/***/ }),

/***/ "./services/extra/basicFunction.js":
/*!*****************************************!*\
  !*** ./services/extra/basicFunction.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BasicFunction; });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _constants_constantMessage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants/constantMessage */ \"./constants/constantMessage.js\");\n/* harmony import */ var box_dimension_calculator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! box-dimension-calculator */ \"box-dimension-calculator\");\n/* harmony import */ var box_dimension_calculator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(box_dimension_calculator__WEBPACK_IMPORTED_MODULE_2__);\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n // import { referralPresent } from \"../../components\";\n\nconst referralPresent = 25;\n // import { variablePriceSet } from \"./cartHealpers\";\n\nclass BasicFunction {\n  constructor() {\n    _defineProperty(this, \"removeEmpty\", obj => {\n      Object.keys(obj).forEach(key => obj[key] === null && delete obj[key]);\n    });\n\n    _defineProperty(this, \"getSelectedAttributes\", item => {\n      if (item.producttype === \"variable\") return item.attributes.map(el => ({\n        [el.names]: item[el.names].value\n      })).filter(el => el).reduce((a, b) => _objectSpread(_objectSpread({}, a), b), {});\n      return null;\n    });\n\n    _defineProperty(this, \"calculatePrice\", item => {\n      const {\n        saleprice,\n        regularprice,\n        subscribedDiscountPersent,\n        qty: {\n          value\n        },\n        subscribed\n      } = item;\n\n      if (subscribed) {\n        if (saleprice) {\n          const price = parseFloat(saleprice) * parseFloat(value) / parseFloat(subscribedDiscountPersent);\n          return price;\n        } else if (regularprice) {\n          const price = parseFloat(regularprice) * parseFloat(value) / parseFloat(subscribedDiscountPersent);\n          return price;\n        }\n\n        return 0;\n      }\n    });\n\n    _defineProperty(this, \"convertCardErrors\", error => {\n      switch (error) {\n        case \"Your card number is incorrect.\":\n          return _constants_constantMessage__WEBPACK_IMPORTED_MODULE_1__[\"cardNumberInvalid\"];\n\n        case \"Missing required param: card[exp_year].\":\n          return _constants_constantMessage__WEBPACK_IMPORTED_MODULE_1__[\"expireYearInvalid\"];\n\n        case \"Could not find payment information.\":\n          return _constants_constantMessage__WEBPACK_IMPORTED_MODULE_1__[\"cardDetailsNotMAtch\"];\n\n        case \"Your card's expiration year is invalid.\":\n          return _constants_constantMessage__WEBPACK_IMPORTED_MODULE_1__[\"expireYearInvalid\"];\n\n        case \"Your card's expiration month is invalid.\":\n          return _constants_constantMessage__WEBPACK_IMPORTED_MODULE_1__[\"expireMonthInvalid\"];\n\n        default:\n          return _constants_constantMessage__WEBPACK_IMPORTED_MODULE_1__[\"expireMonthInvalid\"];\n      }\n    });\n\n    _defineProperty(this, \"stripeCheckValidation\", paymentDetail => {\n      const {\n        cvNumber,\n        expDate,\n        cardNumber\n      } = paymentDetail;\n\n      if (cvNumber && cvNumber.length <= 2) {\n        return false;\n      }\n\n      if (expDate && expDate.length <= 4) {\n        return false;\n      }\n\n      if (cardNumber && cardNumber.length <= 18) {\n        return false;\n      }\n\n      return true;\n    });\n\n    _defineProperty(this, \"getShippingRates\", rateArr => {\n      if (rateArr.length > 0) {\n        const filteredRates = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.uniqBy(rateArr, function (e) {\n          return e.service;\n        });\n\n        const smallSorted = filteredRates.sort((a, b) => parseFloat(a.rate || 0) - parseFloat(b.rate || 0));\n        const Smallest = smallSorted[0];\n        const Smallest1 = smallSorted[1];\n        const Smallest2 = smallSorted[2];\n        const PriorityRaw = filteredRates.find(el => el.service === \"Priority\");\n        const ExpressRaw = filteredRates.find(el => el.service === \"Express\"); // const standard =\n        //   Smallest.service === \"Priority\" || Smallest.service === \"Express\"\n        //     ? null\n        //     : {\n        //         ...Smallest,\n        //         customName: \"Standard\",\n        //         customRate: parseFloat(Smallest.rate) + shippingExtraRate\n        //       };\n        // const Priority = PriorityRaw\n        //   ? {\n        //       ...PriorityRaw,\n        //       customName: \"Priority\",\n        //       customRate: parseFloat(PriorityRaw.rate) + shippingExtraRate\n        //     }\n        //   : null;\n        // const Express = ExpressRaw\n        //   ? {\n        //       ...ExpressRaw,\n        //       customName: \"Express\",\n        //       customRate: parseFloat(ExpressRaw.rate) + shippingExtraRate\n        //     }\n        //   : null;\n\n        const standard = Smallest && _objectSpread(_objectSpread({}, Smallest), {}, {\n          customName: \"Standard\",\n          customRate: parseFloat(Smallest.rate) + _constants_constantMessage__WEBPACK_IMPORTED_MODULE_1__[\"shippingExtraRate\"]\n        });\n\n        const Priority = Smallest1 && _objectSpread(_objectSpread({}, Smallest1), {}, {\n          customName: \"Priority\",\n          customRate: parseFloat(Smallest1.rate) + _constants_constantMessage__WEBPACK_IMPORTED_MODULE_1__[\"shippingExtraRate\"]\n        });\n\n        const Express = Smallest2 && _objectSpread(_objectSpread({}, Smallest2), {}, {\n          customName: \"Express\",\n          customRate: parseFloat(Smallest2.rate) + _constants_constantMessage__WEBPACK_IMPORTED_MODULE_1__[\"shippingExtraRate\"]\n        });\n\n        return [standard, Priority, Express].filter(el => el);\n      }\n\n      return rateArr; // return [\n      //   {\n      //     carrier: \"Carrier_Not_Found\",\n      //     created_at: new Date(),\n      //     currency: \"USD\",\n      //     mode: \"test\",\n      //     object: \"Rate\",\n      //     customName: \"Standard\",\n      //     rate: shippingStaticRate,\n      //     customRate: shippingStaticRate,\n      //     retail_currency: \"USD\",\n      //   }\n      // ]\n    });\n  }\n\n  dateFun(date) {\n    var d = new Date(date),\n        month = \"\" + (d.getMonth() + 1),\n        day = \"\" + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    return [month, day, year].join(\"/\");\n  }\n\n  dateFun2(date) {\n    var d = new Date(date),\n        month = \"\" + (d.getMonth() + 1),\n        day = \"\" + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    return [month, day, year].join(\"/\");\n  }\n\n  dateTimeAmPm(date) {\n    var d = new Date(date),\n        month = \"\" + (d.getMonth() + 1),\n        day = \"\" + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    const dateis = month + \"/\" + day + \"/\" + year + \" \";\n    var hours = d.getHours();\n    var minutes = d.getMinutes();\n    var ampm = hours >= 12 ? \"PM\" : \"AM\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\n    return dateis + strTime;\n  }\n\n  dateTimeAmPmOld(date) {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    var d = new Date(date),\n        month = \"\" + (d.getMonth() + 1),\n        day = \"\" + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    const monthnameis = monthNames[month - 1];\n    const dateis = monthnameis + \" \" + day + \",\" + year + \" \";\n    var hours = d.getHours();\n    var minutes = d.getMinutes();\n    var ampm = hours >= 12 ? \"PM\" : \"AM\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\n    return dateis + strTime;\n  }\n\n  dateTimeInMonthName(date) {\n    if (!date) return \"-\";\n    const monthNames = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n    var d = new Date(date),\n        month = \"\" + (d.getMonth() + 1),\n        day = \"\" + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    const monthnameis = monthNames[month - 1];\n    const dateis = monthnameis + \" \" + day + \", \" + year + \" \"; //var hours = d.getHours();\n    // var minutes = d.getMinutes();\n    //  hours = hours % 12;\n    //  hours = hours ? hours : 12; // the hour '0' should be '12'\n    // minutes = minutes < 10 ? \"0\" + minutes : minutes;\n\n    return dateis;\n  }\n\n  currancyAdd(number) {\n    if (number >= 0) {\n      return \"$\" + number;\n    } else {\n      return \"-$\" + Math.abs(number);\n    }\n  }\n\n  nombarFormat(nbr) {\n    if (nbr === 0 && nbr === \"\") {\n      return \"0.00\";\n    } else {\n      if (nbr) {\n        var nr = nbr.toFixed(2);\n        nr = nr.toString();\n        var pattern = /(-?\\d+)(\\d{3})/;\n\n        while (pattern.test(nr)) nr = nr.replace(pattern, \"$1,$2\");\n\n        return nr;\n      } else {\n        return 0.0;\n      }\n    }\n  }\n\n  currancyAddWithNumber(numberX) {\n    const number = parseFloat(numberX);\n    const withoutUsd = this.currencyWithoutUsd(number); // return `${withoutUsd} USD`;\n\n    return `${withoutUsd}`;\n  }\n\n  currencyWithoutUsd(numberX) {\n    if (numberX) {\n      let number = parseFloat(numberX);\n      number = number.toFixed(2);\n      var pattern = /(-?\\d+)(\\d{3})/;\n\n      if (number >= 0) {\n        number = number.toString();\n\n        while (pattern.test(number)) number = number.replace(pattern, \"$1,$2\");\n\n        return \"$\" + number;\n      } else {\n        var num = Math.abs(number);\n        num = num.toFixed(2);\n        num = num.toString();\n\n        while (pattern.test(num)) num = num.replace(pattern, \"$1,$2\");\n\n        return \"-$\" + num;\n      }\n    } else {\n      return \"$0.00\";\n    }\n  }\n\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  sliceToNumber(string = 0, digit = 0) {\n    return string.slice(0, digit);\n  }\n\n  timeConverter(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp * 1000); // var months = [\n    //   \"Jan\",\n    //   \"Feb\",\n    //   \"Mar\",\n    //   \"Apr\",\n    //   \"May\",\n    //   \"Jun\",\n    //   \"Jul\",\n    //   \"Aug\",\n    //   \"Sep\",\n    //   \"Oct\",\n    //   \"Nov\",\n    //   \"Dec\"\n    // ];\n    // var year = a.getFullYear();\n    // var month = months[a.getMonth()];\n    // var date = a.getDate();\n\n    var hour = a.getHours();\n    var min = a.getMinutes(); // var sec = a.getSeconds();\n\n    if (min < 10) {\n      min = \"0\" + min;\n    } // var ampm = \"AM\";\n\n\n    var timeis = \"\";\n\n    if (hour <= 12) {\n      timeis = hour + \":\" + min + \"AM\";\n    } else {\n      hour = parseFloat(hour) - 12;\n      timeis = hour + \":\" + min + \"PM\";\n    } //   var res = hour + \":\" + min;\n\n\n    return timeis;\n  }\n\n  currentDate() {\n    var d = new Date();\n    var year = parseInt(d.getYear()) - 100;\n    var month = d.getMonth() + 1;\n    return \"20\" + year + \"/\" + month + \"/\" + d.getDate();\n  }\n\n  currentDateYesterday() {\n    var d = new Date();\n    var year = parseInt(d.getYear()) - 100;\n    var month = d.getMonth() + 1;\n    var yesterday = new Date(d.getTime());\n    yesterday.setDate(d.getDate() - 1);\n    var date = yesterday.getDate();\n    return \"20\" + year + \"/\" + month + \"/\" + date;\n  }\n\n  currentDateBeforeDay(beforeDay) {\n    var d = new Date();\n    var yesterday = new Date(d.getTime());\n    yesterday.setDate(d.getDate() - parseInt(beforeDay));\n    var date = yesterday.getDate();\n    var year = parseInt(yesterday.getYear()) - 100;\n    var month = yesterday.getMonth() + 1;\n    return \"20\" + year + \"/\" + month + \"/\" + date;\n  }\n\n  currentDateBeforeMonth(beforeMonth) {\n    var d = new Date();\n    d.setMonth(d.getMonth() - parseInt(beforeMonth));\n    var month = d.getMonth() + parseInt(1);\n    var year = parseInt(d.getYear()) - 100;\n    return \"20\" + year + \"/\" + month + \"/\" + d.getDate();\n  }\n\n  currentDateBeforeYear(beforeYear) {\n    var d = new Date();\n    var month = d.getMonth() + parseInt(1);\n    var year = parseInt(d.getYear()) - 100;\n    year = year - parseInt(beforeYear);\n    return \"20\" + year + \"/\" + month + \"/\" + d.getDate();\n  }\n\n  graphColorPostion(data) {\n    if (data >= 0) {\n      return \"#1fa764\";\n    } else {\n      return \"#ed5454\";\n    }\n  }\n\n  graphColorFillPostion(data) {\n    if (data >= 0) {\n      return \"#abe5c1\";\n    } else {\n      return \"#ffa1a9\";\n    }\n  }\n\n  stringToArray(str) {\n    var res = str.split(\",\");\n    var newArray = [];\n    res.forEach(character => {\n      if (character === character.toUpperCase()) {\n        if (character.length <= 4) {\n          newArray.push(character);\n        }\n      }\n    });\n    return newArray.slice(0, 10);\n  }\n\n  checkIsUpparCashOrNot(character) {\n    if (character === character.toUpperCase()) {\n      if (character.length <= 4) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  stringCheckResponseInColor(str, spn) {\n    var innerHTML = str;\n    spn = spn.toUpperCase();\n    var index = innerHTML.indexOf(spn);\n\n    if (index >= 0) {\n      innerHTML = innerHTML.substring(0, index) + \"<span className='highlight'>\" + innerHTML.substring(index, index + spn.length) + \"</span>\" + innerHTML.substring(index + spn.length); // return 'ram';\n    }\n\n    return innerHTML;\n  }\n\n  subStrStartEnd(str, starting, ending) {\n    if (str) {\n      return str.substr(starting, ending);\n    } else {\n      return str;\n    }\n  }\n\n  bodyColor() {\n    var currentUrl = window.location.href;\n    var ar = currentUrl.split(\"/\");\n\n    if (ar[3] === \"stocks\") {\n      return \"black\";\n    } else {\n      return \"\";\n    }\n  }\n\n  getParchantage(parValue, totalvalue) {\n    return parseFloat(parValue) * parseFloat(totalvalue) / 100;\n  }\n\n  getUnknownParchantage(parValue, totalvalue) {\n    return parseFloat(parValue) / totalvalue * 100;\n  }\n\n  getMinMaxValue(ar) {\n    /*eslint no-extend-native: [\"error\", { \"exceptions\": [\"Array\"] }]*/\n    if (ar.producttype === \"variable\") {\n      const arr = [];\n      ar.variation.map(key => {\n        arr.push(key.sale_price);\n        return null;\n      });\n\n      Array.prototype.max = function () {\n        return Math.max.apply(null, this);\n      };\n\n      Array.prototype.min = function () {\n        return Math.min.apply(null, this);\n      };\n\n      if (arr.length > 1) {\n        if (arr.min() === arr.max()) {\n          const returnString = \"From $\" + this.nombarFormat(arr.min());\n          return returnString;\n        }\n\n        const returnString = \"From $\" + this.nombarFormat(arr.min()) + \" - $\" + this.nombarFormat(arr.max());\n        return returnString;\n      } else {\n        const returnString = \"From $\" + this.nombarFormat(arr.min());\n        return returnString;\n      }\n    }\n  }\n\n  getMinMaxValue2(ar) {\n    /*eslint no-extend-native: [\"error\", { \"exceptions\": [\"Array\"] }]*/\n    if (ar.producttype === \"variable\") {\n      const arr = [];\n      ar.variation.map(key => {\n        arr.push(key.sale_price);\n        return null;\n      });\n\n      Array.prototype.max = function () {\n        return Math.max.apply(null, this);\n      };\n\n      Array.prototype.min = function () {\n        return Math.min.apply(null, this);\n      };\n\n      if (arr.length > 1) {\n        if (arr.min() === arr.max()) {\n          const returnString = \"$\" + this.nombarFormat(arr.min());\n          return returnString;\n        }\n\n        const returnString = \"$\" + this.nombarFormat(arr.min()) + \" - $\" + this.nombarFormat(arr.max());\n        return returnString;\n      } else {\n        const returnString = \"$\" + this.nombarFormat(arr.min());\n        return returnString;\n      }\n    }\n  }\n\n  getMinMaxValueWithVariation(ar) {\n    if (ar.producttype === \"variable\") {\n      const arr = [];\n      ar.variation.map(key => {\n        arr.push(key.sale_price);\n        return null;\n      });\n\n      Array.prototype.max = function () {\n        return Math.max.apply(null, this);\n      };\n\n      Array.prototype.min = function () {\n        return Math.min.apply(null, this);\n      };\n\n      if (arr.length > 1) {\n        const returnString = \"From $\" + this.nombarFormat(arr.min()) + \" - $\" + this.nombarFormat(arr.max());\n        return returnString;\n      } else {\n        const returnString = \"From $\" + this.nombarFormat(arr.min());\n        return returnString;\n      }\n    } else {\n      if (ar.dsaleprice) {\n        const returnString = \"From $\" + this.nombarFormat(ar.dsaleprice);\n        return returnString;\n      } else {\n        const returnString = \"From $\" + this.nombarFormat(ar.dregularprice);\n        return returnString;\n      }\n    }\n  }\n\n  isLoaded(obj) {\n    return Object.values(obj).every(el => el);\n  }\n\n  removeParams(url, sParam) {\n    url = url.split(\"?\")[0] + \"?\";\n    var sPageURL = decodeURIComponent(window.location.search.substring(1)),\n        sURLVariables = sPageURL.split(\"&\"),\n        sParameterName,\n        i;\n\n    for (i = 0; i < sURLVariables.length; i++) {\n      sParameterName = sURLVariables[i].split(\"=\");\n\n      if (sParameterName[0] !== sParam) {\n        url = url + sParameterName[0] + \"=\" + sParameterName[1] + \"&\";\n      }\n    }\n\n    return url.substring(0, url.length - 1);\n  }\n\n  returnReferringUrl(url) {\n    if (!url) return \"Direct traffic\";\n    if (url.trim() === \"\") return \"Direct traffic\";\n    return url;\n  }\n\n  getDialCode(countryCodeList, countryCode) {\n    var returnCuntryCode = \"\";\n    countryCodeList.forEach(element => {\n      if (element.code === countryCode) {\n        returnCuntryCode = element.dial_code;\n      }\n    });\n    return returnCuntryCode;\n  }\n\n  showExportMsg(shippingType, isSame, billingAddress, shippingAddress) {\n    if (shippingType !== \"express\") return false;\n\n    if (isSame) {\n      if (billingAddress) if (billingAddress.toLowerCase().trim() === \"usa\") {\n        return false;\n      }\n    } else {\n      if (shippingAddress) if (shippingAddress.toLowerCase().trim() === \"usa\") {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  parseOrderProduct(item) {\n    const isCombo = item.combo ? true : false,\n          comboId = item.combo ? item._id : null,\n          productId = item.combo ? null : item.productid._id,\n          productMeta = item.combo ? null : item._id,\n          isSubscribed = item.subscribed ? true : false,\n          subscriptionMeta = item.subscribed ? {\n      duration: item.subscribedTime\n    } : null,\n          itemId = item._id,\n          _id = item._id,\n          qty = item.qty.value,\n          title = item.combo ? item.title : item.productid.producttitle,\n          unitPrice = item.saleprice ? item.saleprice : item.regularprice,\n          subTotal = item.saleprice ? this.multiply(item.saleprice, item.qty.value) : this.multiply(item.regularprice, item.qty.value),\n          attribute = this.getSelectedAttributes(item),\n          height = item.shipping_height,\n          width = item.shipping_width,\n          length = item.shipping_length,\n          volume = item.volume,\n          weight = item.weight;\n    const order = {\n      isCombo,\n      comboId,\n      productId,\n      productMeta,\n      isSubscribed,\n      subscriptionMeta,\n      itemId,\n      _id,\n      qty,\n      unitPrice,\n      subTotal,\n      attribute,\n      width,\n      length,\n      height,\n      title,\n      volume,\n      weight\n    };\n    this.removeEmpty(order);\n    return order;\n  }\n\n  multiply(a, b) {\n    return parseFloat(a) * parseFloat(b);\n  }\n\n  generateOrderNew(stateObj, paymentResponse = \"\", referralId, cart, user, confirmShipRes) {\n    const {\n      service\n    } = confirmShipRes,\n          confirmRest = _objectWithoutProperties(confirmShipRes, [\"service\"]);\n\n    const {\n      paymentMethod\n    } = stateObj;\n    const {\n      items,\n      shippingCharge,\n      subTotal,\n      totalWeight,\n      totalVolume,\n      taxValue,\n      taxPercent,\n      taxCouponDiscount,\n      taxCouponCode\n    } = cart;\n    const orderProducts = items.map(el => this.parseOrderProduct(el));\n    const {\n      height: totalHeight,\n      length: totalLength,\n      width: totalWidth\n    } = this.getHeightWeight(orderProducts);\n\n    const order = _objectSpread({\n      totalVolume,\n      totalWeight,\n      shippingMethod: service,\n      products: orderProducts,\n      countryTax: taxPercent * 100,\n      taxAmount: taxValue || parseFloat(cart.subTotal || 0) * parseFloat(taxPercent || 0) || 0,\n      shippingCharge,\n      userDetails: this.getUserDetails(stateObj).user,\n      orderStatus: _constants_constantMessage__WEBPACK_IMPORTED_MODULE_1__[\"defaultOrderStatus\"],\n      paymentMethod: paymentMethod === \"stripe\" ? \"Authorize\" : paymentMethod,\n      status: _constants_constantMessage__WEBPACK_IMPORTED_MODULE_1__[\"defaultStatusInOrder\"],\n      wholeSubtotal: parseFloat(subTotal.toFixed(2)),\n      wasReferred: referralId ? true : false,\n      referral: referralId ? referralId : null,\n      isCoupon: taxCouponCode ? true : false,\n      couponId: taxCouponCode,\n      couponDisc: taxCouponCode ? taxCouponDiscount : null,\n      grandTotal: this.getGrandTotal(subTotal, taxPercent, shippingCharge, taxCouponDiscount),\n      isGuest: user._id ? false : true,\n      userId: user._id ? user._id : null,\n      userMetaId: user.userMetaId ? user.userMetaId : null,\n      totalHeight,\n      totalWidth,\n      totalLength,\n      refPercentage: referralPresent\n    }, confirmRest);\n\n    this.removeEmpty(order);\n    return order;\n  }\n\n  getDiscount(discount, subTotal) {\n    return discount * subTotal / 100 || 0;\n  }\n\n  getGrandTotal(subTotal, taxPresent, shippingCharge, discount) {\n    const amountWithTax = subTotal + taxPresent * subTotal + shippingCharge;\n    const discountAmount = this.getDiscount(discount, subTotal);\n    const total = parseFloat(amountWithTax || 0) - parseFloat(discountAmount || 0);\n    return parseFloat(total.toFixed(2));\n  }\n\n  getHeightWeight(items) {\n    const height = items.map(el => el.height * parseFloat(el.qty));\n    const width = items.map(el => el.width * parseFloat(el.qty));\n    const length = items.map(el => el.length * parseFloat(el.qty));\n    const shape = {\n      height: height.reduce((a, b) => a + b, 0),\n      width: width.reduce((a, b) => a + b, 0),\n      length: length.reduce((a, b) => a + b, 0)\n    };\n    return shape;\n  }\n\n  generateOrder(stateObj, paymentResponse = \"\", referrer_url_id, cart, user, confirmShipRes) {\n    const {\n      service\n    } = confirmShipRes,\n          confirmRest = _objectWithoutProperties(confirmShipRes, [\"service\"]);\n\n    var transactionId = \"000\";\n    const payType = stateObj.paymentMethod;\n\n    if (stateObj.paymentMethod === \"stripe\" && paymentResponse) {\n      transactionId = paymentResponse;\n    }\n\n    if (stateObj.paymentMethod === \"paypal\" && paymentResponse && paymentResponse.paymentID) {\n      transactionId = paymentResponse.paymentID;\n    } // return false;\n\n\n    const {\n      items,\n      shippingCharge,\n      subTotal,\n      totalWeight,\n      totalVolume,\n      taxValue,\n      taxPercent,\n      taxCouponDiscount,\n      taxCouponCode\n    } = cart;\n    const {\n      billing_first_name,\n      billing_last_name,\n      billing_email_name,\n      billing_phone_name,\n      billing_address_name_01,\n      billing_address_name_02,\n      billing_address_town,\n      shipping_first_name,\n      shipping_last_name,\n      shipping_address_name_01,\n      shipping_address_name_02,\n      shipping_address_town,\n      selectedShippingCity,\n      selectedCity,\n      selectedShippingCountry,\n      selectedCountry,\n      shipping_zip_code,\n      billing_zip_code,\n      sameShipping\n    } = stateObj;\n    let order = {};\n    let country = \"\";\n\n    if (selectedShippingCountry) {\n      country = selectedShippingCountry;\n    } else if (selectedCountry) {\n      country = selectedCountry || \"\";\n    }\n\n    let state = \"\";\n\n    if (selectedShippingCity) {\n      state = selectedShippingCity;\n    } else if (selectedCity) {\n      state = selectedCity || \"\";\n    }\n\n    let zipcode = \"\";\n\n    if (shipping_zip_code) {\n      zipcode = shipping_zip_code;\n    } else if (billing_zip_code) {\n      zipcode = billing_zip_code;\n    }\n\n    order.orderproduct = items.map(el => {\n      // console.log({el})\n      // this.parseOrderProduct(el);\n      // console.log({\n      //   checkOrder: this.parseOrderProduct(el)\n      // })\n      // return this.parseOrderProduct(el)\n      let returnItem = {\n        productmetaid: el._id,\n        proucttitle: el.combo ? el.title : el.productid.producttitle,\n        quantity: el.qty.value,\n        singleprice: el.saleprice ? el.saleprice : el.regularprice,\n        subtotal: 0,\n        orderdate: Date(),\n        country,\n        isguest:  true || false,\n        subscribed: el.subscribed,\n        subscribedDiscountPersent: el.subscribedDiscountPersent\n      };\n      let subtotal = parseInt(returnItem.quantity || 1) * parseInt(returnItem.singleprice || 1);\n      let attribute = {};\n\n      if (el.producttype === \"variable\") {\n        el.attributes.map((item, index) => {\n          attribute = _objectSpread(_objectSpread({}, attribute), {}, {\n            [item.names]: el[item.names].value\n          });\n          return null;\n        });\n      }\n\n      returnItem = _objectSpread(_objectSpread({}, returnItem), {}, {\n        subtotal,\n        attribute\n      });\n      return _objectSpread({}, returnItem);\n    });\n    let shippingAddress = `${shipping_first_name} ${shipping_last_name}, ${shipping_address_name_01} ${shipping_address_name_02} ${shipping_address_town} `;\n    let billingAddress = `${billing_first_name} ${billing_last_name}, ${billing_address_name_01} ${billing_address_name_02} ${billing_address_town} `;\n    const TaxgrandTotalWithTax = subTotal + taxPercent * subTotal + shippingCharge;\n    const discount = taxCouponDiscount * subTotal / 100;\n\n    if (user._id) {\n      const userid = user._id;\n      order.userid = userid;\n    }\n\n    order.grandtotal = parseFloat(TaxgrandTotalWithTax || 0) - parseFloat(discount || 0);\n    order.coupondisc = taxCouponDiscount;\n    order.couponid = taxCouponCode;\n    order.country = country;\n    order.offerprice = 100;\n    order.shippingmethod = service || \"Express shipping\" || \"Normal shipping\";\n    order.wholesubtotal = subTotal;\n    order.shippingcharge = shippingCharge || 0;\n    order.paymentmethod = payType;\n    order.ordernote = \"Make it quick\";\n    order.status = \"in process\";\n    order.paymentstatus = \"Done\";\n    order.transactionid = transactionId;\n    order.country_tax = taxPercent * 100;\n    order.totalweight = totalWeight;\n    order.totalvolume = totalVolume;\n    order.taxamount = taxValue;\n    order.userdetails = {\n      country,\n      firstname: billing_first_name,\n      lastname: billing_last_name,\n      email: billing_email_name,\n      shippingaddress: sameShipping ? billingAddress : shippingAddress,\n      billingaddress: billingAddress,\n      extraaddress: \"jdjdjd\",\n      city: shipping_address_town ? shipping_address_town : billing_address_town,\n      state,\n      zipcode,\n      phonenumber: billing_phone_name\n    };\n    order.orderstatus = \"Not delivered\";\n\n    if (referrer_url_id) {\n      order.wasreferred = true;\n      order.referral = referrer_url_id;\n    }\n\n    return _objectSpread(_objectSpread({}, order), confirmRest);\n  }\n\n  getUserDetails(stateObj) {\n    const {\n      billing_first_name,\n      billing_last_name,\n      billing_email_name,\n      billing_phone_name,\n      billing_address_name_01,\n      billing_address_name_02,\n      billing_address_town,\n      shipping_first_name,\n      shipping_last_name,\n      shipping_address_name_01,\n      shipping_address_name_02,\n      shipping_address_town,\n      selectedShippingCity,\n      selectedCity,\n      selectedShippingCountry,\n      selectedCountry,\n      shipping_zip_code,\n      billing_zip_code,\n      sameShipping\n    } = stateObj;\n    const shippingAddress = `${shipping_first_name} ${shipping_last_name}, ${shipping_address_name_01} ${shipping_address_name_02} ${shipping_address_town} `;\n    const billingAddress = `${billing_first_name} ${billing_last_name}, ${billing_address_name_01} ${billing_address_name_02} ${billing_address_town} `;\n    const user = {\n      firstname: billing_first_name,\n      lastname: billing_last_name,\n      email: billing_email_name,\n      shippingaddress: sameShipping ? billingAddress : shippingAddress,\n      billingaddress: billingAddress,\n      phonenumber: billing_phone_name,\n      country: this.getOneValid(selectedShippingCountry, selectedCountry),\n      zipcode: this.getOneValid(shipping_zip_code, billing_zip_code),\n      state: this.getOneValid(selectedShippingCity, selectedCity)\n    };\n    return {\n      user,\n      shippingAddress,\n      billingAddress\n    };\n  }\n\n  getOneValid(a, b) {\n    if (a && a.trim()) return a;\n    if (b && b.trim()) return b;\n    return \"\";\n  }\n\n  checkProductInWishList(list = [], product_id) {\n    var flag = false; // console.log(list)\n    // console.log(product_id)\n\n    if (list.length > 0) {\n      list.forEach((itm, i) => {\n        if (itm.productid === product_id) {\n          flag = i;\n        }\n      });\n    }\n\n    return flag;\n  }\n\n  getSingleElementByMultipleObject(arrayData, f) {\n    const result = arrayData.reduce(function (r, a) {\n      r[a.carrier] = r[a.carrier] || [];\n      r[a.carrier].push(a);\n      return r;\n    }, {});\n    return result;\n  }\n\n  shippingStringRate(key) {\n    if (key && key.est_delivery_days) {\n      return \" in \" + key.est_delivery_days + \" Days .\";\n    } else {\n      return \" in - Days .\";\n    }\n  }\n\n  cartHeightWidhtCalculation(item) {\n    var height = 0;\n    var width = 0;\n    var length = 0;\n    var weight = 0;\n\n    if (item.length > 0) {\n      item.forEach(itm => {\n        height = height + itm.shipping_height;\n        width = width + itm.shipping_width;\n        length = length + itm.shipping_length;\n        weight = weight + itm.weight;\n      });\n    }\n\n    return {\n      height,\n      width,\n      length,\n      weight\n    };\n  }\n\n  cartHeightWidhtCalculation2(itemA) {\n    var height = 0;\n    var width = 0;\n    var length = 0;\n    var weight = 0;\n\n    function flatten(arr) {\n      return arr.reduce(function (flat, toFlatten) {\n        return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n      }, []);\n    }\n\n    const item = flatten(itemA.map(el => {\n      const qty = el.qty ? el.qty.value ? parseInt(el.qty.value) : 1 : 1;\n      if (qty > 1) return new Array(qty).fill(el);\n      return el;\n    }));\n\n    const getGreater = (a, b) => {\n      if (a > b) return a;\n      return b;\n    };\n\n    if (item.length > 0) {\n      item.forEach(itm => {\n        // height = getGreater(height, itm.shipping_height);\n        // width = width + itm.shipping_width;\n        // length = getGreater(length, itm.shipping_length);\n        weight = weight + itm.weight;\n      });\n    }\n\n    const itemsB = itemA.map(el => ({\n      h: el.shipping_height,\n      l: el.shipping_length,\n      w: el.shipping_width,\n      qty: el.qty.value\n    }));\n    const itemsC = [].concat.apply([], itemsB);\n    const itemsD = Object(box_dimension_calculator__WEBPACK_IMPORTED_MODULE_2__[\"combineLoop\"])(itemsC)[0];\n    return {\n      height: itemsD.h,\n      width: itemsD.w,\n      length: itemsD.l,\n      weight\n    };\n  }\n\n  exportToJson(objectData, fileName = \"export\") {\n    let filename = `${fileName}.json`;\n    let contentType = \"application/json;charset=utf-8;\";\n\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(objectData)))], {\n        type: contentType\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(objectData));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  }\n\n  qtyList(qty = 10) {\n    const quantity = parseFloat(qty) > 10 ? parseFloat(qty) : 10;\n    const temp = new Array(quantity).fill(\"\");\n    const newarray = temp.map((el, index) => ({\n      label: index + 1,\n      value: index + 1\n    }));\n    return newarray;\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./services/extra/basicFunction.js\n");

/***/ }),

/***/ "./services/extra/cartHealpers.js":
/*!****************************************!*\
  !*** ./services/extra/cartHealpers.js ***!
  \****************************************/
/*! exports provided: getItemTotal, returnSubTotal, returnUnSubscribeTotal, getTotalWeight, getTotalVolume, getTotalVariation, variablePriceSet, changeCartItemVariation, verifyProduct, addItem, setSlugInCart, modifyProduct, removeItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getItemTotal\", function() { return getItemTotal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"returnSubTotal\", function() { return returnSubTotal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"returnUnSubscribeTotal\", function() { return returnUnSubscribeTotal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTotalWeight\", function() { return getTotalWeight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTotalVolume\", function() { return getTotalVolume; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTotalVariation\", function() { return getTotalVariation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"variablePriceSet\", function() { return variablePriceSet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"changeCartItemVariation\", function() { return changeCartItemVariation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"verifyProduct\", function() { return verifyProduct; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addItem\", function() { return addItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSlugInCart\", function() { return setSlugInCart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"modifyProduct\", function() { return modifyProduct; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeItem\", function() { return removeItem; });\n/* harmony import */ var _productHelpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./productHelpers */ \"./services/extra/productHelpers.js\");\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nconst getItemTotal = item => {\n  if (item) {\n    if (item.saleprice) return parseFloat(item.saleprice) * parseFloat(item.qty.value);else if (item.regularprice) return parseFloat(item.regularprice) * parseFloat(item.qty.value);\n  }\n\n  return 0;\n};\nconst returnSubTotal = items => {\n  // amount =\n  return items.map(el => {\n    if (el) {\n      if (el.saleprice) {\n        if (el.subscribed) {\n          const totalPrice = parseFloat(el.saleprice) * parseFloat(el.qty.value);\n          const disc = totalPrice * el.subscribedDiscountPersent / 100;\n          return parseFloat(totalPrice) - parseFloat(disc);\n        } else {\n          return parseFloat(el.saleprice) * parseFloat(el.qty.value);\n        }\n      } else if (el.regularprice) if (el.subscribed) {\n        const totalPrice = parseFloat(el.regularprice) * parseFloat(el.qty.value);\n        const disc = totalPrice * el.subscribedDiscountPersent / 100;\n        return parseFloat(totalPrice) - parseFloat(disc);\n      } else {\n        return parseFloat(el.regularprice) * parseFloat(el.qty.value);\n      }\n    }\n\n    return 0;\n  }).reduce((a, b) => a + b, 0);\n};\nconst returnUnSubscribeTotal = items => {\n  return items.filter(el => !el.subscribed).map(el => {\n    if (el) {\n      if (el.saleprice) return parseFloat(el.saleprice) * parseFloat(el.qty.value);else if (el.regularprice) return parseFloat(el.regularprice) * parseFloat(el.qty.value);\n    }\n\n    return 0;\n  }).reduce((a, b) => a + b, 0);\n};\nconst getTotalWeight = items => {\n  return items.filter(el => el.weight).map(el => el.weight * parseFloat(el.qty.value)).reduce((a, b) => a + b, 0);\n};\nconst getTotalVolume = items => {\n  // return items\n  //   .filter(el => el.shipping_height && el.shipping_length && el.shipping_width)\n  //   .map(el => el.shipping_height * el.shipping_length * el.shipping_width)\n  //   .reduce((a, b) => a + b, 0);\n  return items.filter(el => el.volume).map(el => el.volume * parseFloat(el.qty.value)).reduce((a, b) => a + b, 0);\n};\nconst getTotalVariation = item => {\n  if (!item.attributes) return [];\n  return item.attributes.map(el => el ? el.names : null).filter(el => el);\n};\nconst variablePriceSet = productItem => {\n  if (productItem) {\n    let tempVariable = _objectSpread({}, productItem);\n\n    if (productItem.producttype === \"variable\") {\n      // if (productItem.size && productItem.extract_flavor) {\n      const notNullVariation = productItem.variation.filter(el => el !== null);\n      productItem.attributes.filter(el => el !== null).map(el => el.names);\n      const varCheck = productItem.attributes.filter(el => el !== null).map(attr => {\n        return {\n          key: attr.names,\n          value: productItem[attr.names] ? productItem[attr.names].value : productItem[attr.names]\n        };\n      });\n      let matchedVariable = null;\n\n      if (!varCheck.some(vEl => vEl.value === null || vEl.value === undefined)) {\n        matchedVariable = notNullVariation.find(varEl => {\n          let matchArr = [];\n          varCheck.map(vEl => {\n            matchArr.push(varEl[vEl.key] === vEl.value);\n            return null;\n          });\n          return !matchArr.includes(false);\n        });\n\n        if (matchedVariable) {\n          tempVariable = _objectSpread(_objectSpread({}, productItem), {}, {\n            regularprice: matchedVariable.regular_price,\n            saleprice: matchedVariable.sale_price\n          });\n        } else {\n          tempVariable = _objectSpread(_objectSpread({}, productItem), {}, {\n            regularprice: productItem.dregularprice,\n            saleprice: productItem.dsaleprice\n          });\n        }\n      }\n    } else {\n      if (productItem.producttype === \"simple\" || productItem.combo) {\n        tempVariable = _objectSpread(_objectSpread({}, productItem), {}, {\n          regularprice: productItem.dregularprice,\n          saleprice: productItem.dsaleprice\n        });\n      }\n    }\n\n    return tempVariable;\n  }\n};\nconst changeCartItemVariation = (varValue, names, item, indexingNo, list) => {\n  if (names === \"qty\") {\n    return {\n      approve: false,\n      update: {\n        oldItem: item,\n        newItem: _objectSpread(_objectSpread({}, item), {}, {\n          [names]: varValue\n        }),\n        remove: null\n      }\n    };\n  } else {\n    const totalVariation = getTotalVariation(item);\n    const foundItem = list.find((el, index) => {\n      const innerFlag = totalVariation.map(varEl => {\n        if (el[varEl]) {\n          if (varEl === names) {\n            return el[varEl].value === varValue.value;\n          }\n\n          return el[varEl].value === item[varEl].value;\n        } else {\n          return null;\n        }\n      }).filter(el => el !== null);\n      return el.productid._id === item.productid._id && innerFlag.every(el => el) && index !== indexingNo;\n    });\n\n    if (foundItem !== undefined && foundItem !== null) {\n      const totalQty = parseInt(foundItem.qty.value) + parseInt(item.qty.value);\n      const qty = {\n        label: totalQty.toString(),\n        value: totalQty.toString()\n      };\n\n      if (item.subscribed || foundItem.subscribed) {\n        return {\n          approve: true,\n          update: {\n            oldItem: foundItem,\n            newItem: _objectSpread(_objectSpread({}, foundItem), {}, {\n              [names]: varValue,\n              qty,\n              subscribed: true,\n              subscribedDiscountPersent: item.subscribedDiscountPersent,\n              subscribedTime: item.subscribedTime\n            }),\n            remove: item\n          }\n        };\n      } else {\n        return {\n          approve: false,\n          update: {\n            oldItem: foundItem,\n            newItem: _objectSpread(_objectSpread({}, foundItem), {}, {\n              [names]: varValue,\n              qty\n            }),\n            remove: item\n          }\n        };\n      }\n    } else {\n      return {\n        approve: false,\n        update: {\n          oldItem: item,\n          newItem: _objectSpread(_objectSpread({}, item), {}, {\n            [names]: varValue\n          }),\n          remove: null\n        }\n      };\n    }\n  }\n};\nconst verifyProduct = (productItem, items = []) => {\n  const totalVariation = getTotalVariation(productItem);\n  const foundItem = items.find(el => {\n    const innerFlag = totalVariation.map(varEl => {\n      if (el[varEl]) {\n        return el[varEl].value === productItem[varEl].value;\n      } else {\n        return null;\n      }\n    }).filter(el => el !== null).every(el => el);\n    if (!innerFlag) return innerFlag;\n    if (el.combo && productItem.combo) return el._id === productItem._id;\n    if (el.combo) return el._id === productItem.productid._id;\n    if (productItem.combo) return el.productid._id === productItem._id;\n    return el.productid._id === productItem.productid._id;\n  });\n\n  if (foundItem !== undefined && foundItem !== null) {\n    const totalQty = parseInt(foundItem.qty.value) + parseInt(productItem.qty.value);\n    const qty = {\n      label: totalQty,\n      value: totalQty\n    };\n\n    const tempNewItem = _objectSpread(_objectSpread({}, foundItem), {}, {\n      subscribed: productItem.subscribed\n    });\n\n    if (productItem.subscribed) {\n      const {\n        subscribed,\n        subscribedDiscountPersent,\n        subscribedTime\n      } = productItem;\n      return {\n        found: foundItem,\n        item: _objectSpread(_objectSpread({}, foundItem), {}, {\n          qty: qty,\n          subscribed,\n          subscribedDiscountPersent,\n          subscribedTime\n        })\n      };\n    } else if (foundItem.subscribed) {\n      const {\n        subscribedDiscountPersent,\n        subscribedTime\n      } = tempNewItem,\n            newItem = _objectWithoutProperties(tempNewItem, [\"subscribedDiscountPersent\", \"subscribedTime\"]);\n\n      return {\n        found: foundItem,\n        item: _objectSpread({}, newItem)\n      };\n    }\n\n    return {\n      found: foundItem,\n      item: _objectSpread(_objectSpread({}, foundItem), {}, {\n        qty: qty,\n        subscribed: productItem.subscribed\n      })\n    };\n  }\n\n  return {\n    found: null,\n    item: _objectSpread({}, productItem)\n  };\n};\nconst addItem = (state, newItem) => {\n  const {\n    found,\n    item\n  } = verifyProduct(newItem, state.items);\n\n  if (found) {\n    return modifyProduct(found, item, state);\n  }\n\n  const newItems = [...state.items, newItem];\n  return _objectSpread(_objectSpread({}, state), {}, {\n    items: newItems,\n    subTotal: returnSubTotal(newItems) || 0,\n    unSubscribeProductAmount: returnUnSubscribeTotal(newItems) || 0,\n    totalWeight: getTotalWeight(newItems),\n    totalVolume: getTotalVolume(newItems)\n  });\n};\nconst setSlugInCart = cart => {\n  return _objectSpread(_objectSpread({}, cart), {}, {\n    items: cart.items ? cart.items.map(el => Object(_productHelpers__WEBPACK_IMPORTED_MODULE_0__[\"addSlugToProduct\"])(el)) : []\n  });\n};\nconst modifyProduct = (oldItem, newItem, state) => {\n  const NewItems = state.items.map(el => {\n    if (el._id === newItem._id) {\n      if (el === oldItem) {\n        return variablePriceSet(newItem);\n      }\n    }\n\n    return el;\n  });\n\n  if (oldItem !== newItem) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      items: [...NewItems],\n      subTotal: returnSubTotal(NewItems) || 0,\n      unSubscribeProductAmount: returnUnSubscribeTotal(NewItems) || 0,\n      totalWeight: getTotalWeight(NewItems),\n      totalVolume: getTotalVolume(NewItems)\n    });\n  }\n\n  return state;\n};\nconst removeItem = (state, item) => {\n  const newItems = [...state.items.filter(el => el !== item)];\n  return _objectSpread(_objectSpread({}, state), {}, {\n    items: newItems,\n    subTotal: returnSubTotal(newItems) || 0,\n    unSubscribeProductAmount: returnUnSubscribeTotal(newItems) || 0,\n    totalWeight: getTotalWeight(newItems),\n    totalVolume: getTotalVolume(newItems)\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./services/extra/cartHealpers.js\n");

/***/ }),

/***/ "./services/extra/countrySelectorOption.js":
/*!*************************************************!*\
  !*** ./services/extra/countrySelectorOption.js ***!
  \*************************************************/
/*! exports provided: countries, city_states */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"countries\", function() { return countries; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"city_states\", function() { return city_states; });\nlet countries = Object();\ncountries[\"Africa\"] = \"Algeria|Angola|Benin|Botswana|Burkina Faso|Burundi|Cameroon|Cape Verde|Central African Republic|Chad|Comoros|Congo, Dem.|Congo, Rep.|Djibouti|Egypt|Equatorial Guinea|Eritrea|Ethiopia|Gabon|Gambia|Ghana|Guinea|Guinea-Bissau|Kenya|Lesotho|Liberia|Libya|Madagascar|Malawi|Mali|Mauritania|Mauritius|Morocco|Mozambique|Namibia|Niger|Nigeria|Rwanda|Sao Tome/Principe|Senegal|Seychelles|Sierra Leone|Somalia|South Africa|Sudan|Swaziland|Tanzania|Togo|Tunisia|Uganda|Zambia|Zimbabwe\";\ncountries[\"Antarctica\"] = \"Amundsen-Scott\";\ncountries[\"Asia\"] = \"Bangladesh|Bhutan|Brunei|Burma (Myanmar)|Cambodia|China|East Timor|India|Indonesia|Japan|Kazakhstan|Korea (north)|Korea (south)|Laos|Malaysia|Maldives|Mongolia|Nepal|Philippines|Russian Federation|Singapore|Sri Lanka|Taiwan|Thailand|Vietnam\";\ncountries[\"Australia/Oceania\"] = \"Australia|Fiji|Kiribati|Micronesia|Nauru|New Zealand|Palau|Papua New Guinea|Samoa|Tonga|Tuvalu|Vanuatu\";\ncountries[\"Caribbean\"] = \"Anguilla|Antigua/Barbuda|Aruba|Bahamas|Barbados|Cozumel|Cuba|Dominica|Dominican Republic|Grenada|Guadeloupe|Haiti|Jamaica|Martinique|Montserrat|Netherlands Antilles|Puerto Rico|St. Barts|St. Kitts/Nevis|St. Lucia|St. Martin/Sint Maarten|St Vincent/Grenadines|San Andres|Trinidad/Tobago|Turks and Caicos Islands|Virgin Islands\";\ncountries[\"Central America\"] = \"Belize|Costa Rica|El Salvador|Guatemala|Honduras|Nicaragua|Panama\";\ncountries[\"Europe\"] = \"Albania|Andorra|Austria|Belarus|Belgium|Bosnia-Herzegovina|Bulgaria|Croatia|Czech Republic|Denmark|Estonia|Finland|France|Georgia|Germany|Greece|Hungary|Iceland|Ireland|Italy|Latvia|Liechtenstein|Lithuania|Luxembourg|Macedonia|Malta|Moldova|Monaco|Netherlands|Norway|Poland|Portugal|Romania|San Marino|Serbia/Montenegro (Yugoslavia)|Slovakia|Slovenia|Spain|Sweden|Switzerland|Ukraine|United Kingdom|Vatican City\";\ncountries[\"Islands\"] = \"Arctic Ocean|Atlantic Ocean (North)|Atlantic Ocean (South)|Assorted|Caribbean Sea|Greek Isles|Indian Ocean|Mediterranean Sea|Oceania|Pacific Ocean (North)|Pacific Ocean (South)\";\ncountries[\"Middle East\"] = \"Afghanistan|Armenia|Azerbaijan|Bahrain|Cyprus|Iran|Iraq|Israel|Jordan|Kuwait|Kyrgyzstan|Lebanon|Oman|Pakistan|Qatar|Saudi Arabia|Syria|Tajikistan|Turkey|Turkmenistan|United Arab Emirates|Uzbekistan|Yemen\";\ncountries[\"North America\"] = \"Bermuda|Canada|Greenland|Mexico|United States\";\ncountries[\"South America\"] = \"Argentina|Bolivia|Brazil|Chile|Colombia|Ecuador|Guyana|Paraguay|Peru|Suriname|Uruguay|Venezuela\"; ////////////////////////////////////////////////////////////////////////////\n\nlet city_states = Object(); //Africa\n\ncity_states[\"Algeria\"] = \"Algiers|Adrar|Ain Defla|Ain Temouchent|Alger|Annaba|Batna|Bechar|Bejaia|Biskra|Blida|Bordj Bou Arreridj|Bouira|Boumerdes|Chlef|Constantine|Djelfa|El Bayadh|El Oued|El Tarf|Ghardaia|Guelma|Illizi|Jijel|Khenchela|Laghouat|Mascara|Medea|Mila|Mostaganem|M'Sila | Naama | Oran | Ouargla | Oum el Bouaghi | Relizane | Saida | Setif | Sidi Bel Abbes | Skikda | Souk Ahras | Tamanghasset | Tebessa | Tiaret | Tindouf | Tipaza | Tissemsilt | Tizi Ouzou | Tlemcen \";\ncity_states[\"Angola\"] = \"Luanda|Bengo|Benguela|Bie|Cabinda|Cuando Cubango|Cuanza Norte|Cuanza Sul|Cunene|Huambo|Huila|Lunda Norte|Lunda Sul|Malanje|Moxico|Namibe|Uige|Zaire\";\ncity_states[\"Benin\"] = \"Porto-Novo|Alibori|Atakora|Atlantique|Borgou|Collines|Couffo|Donga|Littoral|Mono|Oueme|Plateau|Zou\";\ncity_states[\"Botswana\"] = \"Gaborone|Central|Chobe|Francistown|Ghanzi|Kgalagadi|Kgatleng|Kweneng|Lobatse|Ngamiland|North-East|Selebi-Pikwe|South-East|Southern\";\ncity_states[\"Burkina Faso\"] = \"Ouagadougou|Bale|Bam|Banwa|Bazega|Bougouriba|Boulgou|Boulkiemde|Comoe|Ganzourgou|Gnagna|Gourma|Houet|Ioba|Kadiogo|Kenedougou|Komandjari|Kompienga|Kossi|Koupelogo|Kouritenga|Kourweogo|Leraba|Loroum|Mouhoun|Nahouri|Namentenga|Nayala|Naumbiel|Oubritenga|Oudalan|Passore|Poni|Samentenga|Sanguie|Seno|Sissili|Soum|Sourou|Tapoa|Tuy|Yagha|Yatenga|Ziro|Zondomo|Zoundweogo\";\ncity_states[\"Burundi\"] = \"|Bujumbura|Bubanza|Bujumbura|Bururi|Cankuzo|Cibitoke|Gitega|Karuzi|Kayanza|Kirundo|Makamba|Muramvya|Muyinga|Mwaro|Ngozi|Rutana|Ruyigi\";\ncity_states[\"Cameroon\"] = \"Yaounde|Adamaoua|Centre|Est|Extreme-Nord|Littoral|Nord|Nord-Ouest|Ouest|Sud|Sud-Ouest\";\ncity_states[\"Cape Verde\"] = \"Praia|Boa Vista|Brava|Calheta|Maio|Mosteiros|Paul|Porto Novo|Ribeira Grande|Sal|Santa Catarina|Santa Cruz|Sao Domingos|Sao Nicolau|Sao Filipe|Sao Vicente|Tarrafal\";\ncity_states[\"Central African Republic\"] = \"Bangui|Bamingui-Bangoran|Basse-Kotto|Gribingui|Haute-Kotto|Haute-Sangha|Haut-Mbomou|Kemo-Gribingui|Lobaye|Mbomou|Nana-Mambere|Ombella-Mpoko|Ouaka|Ouham|Ouham-Pende|Sangha|Vakaga\";\ncity_states[\"Chad\"] = \"N'Djamena | Assongha | Baguirmi | Bahr El Gazal | Bahr Koh | Batha Oriental | Batha Occidental | Biltine | Borkou | Dababa | Ennedi | Guera | Hadjer Lamis | Kabia | Kanem | Lac | Lac Iro | Logone Occidental | Logone Oriental | Mandoul | Mayo - Boneye | Mayo - Dallah | Monts de Lam | Ouaddai | Salamat | Sila | Tandjile Oriental | Tandjile Occidental | Tibesti \";\ncity_states[\"Congo, Dem.\"] = \"Kinshasa|Bandundu|Bas-Congo|Equateur|Kasai-Occidental|Kasai-Oriental|Katanga|Maniema|Nord-Kivu|Orientale|Sud-Kivu\";\ncity_states[\"Congo, Rep.\"] = \"Brazzaville|Bouenza|Cuvette|Kouilou|Lekoumou|Likouala|Niari|Plateaux|Pool|Sangha\";\ncity_states[\"Djibouti\"] = \"Djibouti|'Ali Sabih | Dikhil | Obock | Tadjoura \";\ncity_states[\"Egypt\"] = \"Cairo|Ad Daqahliyah|Al Bahr al Ahmar|Al Buhayrah|Al Fayyum|Al Gharbiyah|Al Iskandariyah|Al Isma'iliyah | Al Jizah | Al Minufiyah | Al Minya | Al Qahirah | Al Qalyubiyah | Al Wadi al Jadid | Ash Sharqiyah | As Suways | Aswan | Asyut | Bani Suwayf | Bur Sa'id|Dumyat|Janub Sina' | Kafr ash Shaykh | Matruh | Qina | Shamal Sina'|Suhaj\";\ncity_states[\"Equatorial Guinea\"] = \"Malabo|Annobon|Bioko Norte|Bioko Sur|Centro Sur|Kie-Ntem|Litoral|Wele-Nzas\";\ncity_states[\"Eritrea\"] = \"Asmara|Central|Anelba|Southern Red Sea|Northern Red Sea|Southern|Gash-Barka\";\ncity_states[\"Ethiopia\"] = \"Addis Ababa|Adis Abeba (Addis Ababa)|Afar|Amara|Binshangul Gumuz|Dire Dawa|Gambela Hizboch|Hareri Hizb|Oromiya|Sumale (Somali)|Tigray|YeDebub Biheroch Bihereseboch...\";\ncity_states[\"Gabon\"] = \"Libreville\";\ncity_states[\"Gambia\"] = \"Estuaire|Haut-Ogooue|Moyen-Ogooue|Ngounie|Nyanga|Ogooue-Ivindo|Ogooue-Lolo|Ogooue-Maritime|Woleu-Ntem\";\ncity_states[\"Ghana\"] = \"Accra|Ashanti|Brong-Ahafo|Central|Eastern|Northern|Upper East|Upper West|Volta|Western\";\ncity_states[\"Guinea\"] = \"Conakry|Beyla|Boffa|Boke|Coyah|Dabola|Dalaba|Dinguiraye|Dubreka|Faranah|Forecariah|Fria|Gaoual|Gueckedou|Kankan|Kerouane|Kindia|Kissidougou|Koubia|Koundara|Kouroussa|Labe|Lelouma|Lola|Macenta|Mali|Mamou|Mandiana|Nzerekore|Pita|Siguiri|Telimele|Tougue|Yomou\";\ncity_states[\"Guinea-Bissau\"] = \"Bissau|Bafata|Biombo|Bolama/Bijagos|Cacheu|Gabu|Oio|Quinara|Tombali\";\ncity_states[\"Kenya\"] = \"Nairobi|Central|Coast|Eastern|Nairobi Area|North Eastern|Nyanza|Rift Valley|Western\";\ncity_states[\"Lesotho\"] = \"Maseru|Berea|Butha-Buthe|Leribe|Mafeteng|Mohales Hoek|Mokhotlong|Qacha's Nek | Quthing | Thaba - Tseka \";\ncity_states[\"Liberia\"] = \"Monrovia|Bomi|Bong|Gparbolu|Grand Bassa|Grand Cape Mount|Grand Gedeh|Grand Kru|Lofa|Margibi|Maryland|Montserrado|Nimba|River Cess|River Gee|Sinoe\";\ncity_states[\"Libya\"] = \"Tripoli|Ajdabiya|Al 'Aziziyah | Al Fatih | Al Jabal al Akhdar | Al Jufrah | Al Khums | Al Kufrah | An Nuqat al Khams | Ash Shati'|Awbari|Az Zawiyah|Banghazi|Darnah|Ghadamis|Gharyan|Misratah|Murzuq|Sabha|Sawfajjin|Surt|Tarabulus|Tarhunah|Tubruq|Yafran|Zlitan\";\ncity_states[\"Madagascar\"] = \"Antananarivo|Antsiranana|Fianarantsoa|Mahajanga|Toamasina|Toliara\";\ncity_states[\"Malawi\"] = \"Lilongwe|Balaka|Blantyre|Chikwawa|Chiradzulu|Chitipa|Dedza|Dowa|Karonga|Kasungu|Likoma|Machinga (Kasupe)|Mangochi|Mchinji|Mulanje|Mwanza|Mzimba|Ntcheu|Nkhata Bay|Nkhotakota|Nsanje|Ntchisi|Phalombe|Rumphi|Salima|Thyolo|Zomba\";\ncity_states[\"Mali\"] = \"Bamako|Gao|Kayes|Kidal|Koulikoro|Mopti|Segou|Sikasso|Tombouctou\";\ncity_states[\"Mauritania\"] = \"Nouakchott|Adrar|Assaba|Brakna|Dakhlet Nouadhibou|Gorgol|Guidimaka|Hodh Ech Chargui|Hodh El Gharbi|Inchiri|Tagant|Tiris Zemmour|Trarza\";\ncity_states[\"Mauritius\"] = \"Port Louis|Agalega Islands|Black River|Cargados Carajos Shoals|Flacq|Grand Port|Moka|Pamplemousses|Plaines Wilhems|Riviere du Rempart|Rodrigues|Savanne\";\ncity_states[\"Morocco\"] = \"Rabat|Ad Dakhla (Oued Eddahab)|Agadir|Al Hoceima|Azilal|Beni Mellal|Ben Slimane|Boujdour|Boulemane|Casablanca|Chaouen|El Jadida|El Kelaa des Sraghna|Er Rachidia|Essaouira|Es Smara|Fes|Figuig|Guelmim|Ifrane|Kenitra|Khemisset|Khenifra|Khouribga|Laayoune|Larache|Marrakech|Meknes|Nador|Ouarzazate|Oujda|Safi|Settat|Sidi Kacem|Tanger|Tan-Tan|Taounate|Taroudannt|Tata|Taza|Tetouan|Tiznit\";\ncity_states[\"Mozambique\"] = \"Maputo|Cabo Delgado|Gaza|Inhambane|Manica|Maputo|Nampula|Niassa|Sofala|Tete|Zambezia\";\ncity_states[\"Namibia\"] = \"Windhoek|Caprivi|Erongo|Hardap|Karas|Khomas|Kunene|Ohangwena|Okavango|Omaheke|Omusati|Oshana|Oshikoto|Otjozondjupa\";\ncity_states[\"Niger\"] = \"Niamey|Agadez|Diffa|Dosso|Maradi|Tahoua|Tillaberi|Zinder\";\ncity_states[\"Nigeria\"] = \"Abuja|Abia|Adamawa|Akwa Ibom|Anambra|Bauchi|Bayelsa|Benue|Borno|Cross River|Delta|Ebonyi|Edo|Ekiti|Enugu|Gombe|Imo|Jigawa|Kaduna|Kano|Katsina|Kebbi|Kogi|Kwara|Lagos|Nassarawa|Niger|Ogun|Ondo|Osun|Oyo|Plateau|Rivers|Sokoto|Taraba|Yobe|Zamfara\";\ncity_states[\"Rwanda\"] = \"Kigali|Butare|Byumba|Cyangugu|Gikongoro|Gisenyi|Gitarama|Kibungo|Kibuye|Ruhengeri|Umutara\";\ncity_states[\"Sao Tome/Principe\"] = \"Sao Tome|Principe\";\ncity_states[\"Senegal\"] = \"Dakar|Diourbel|Fatick|Kaolack|Kolda|Louga|Matam|Saint-Louis|Tambacounda|Thies|Ziguinchor\";\ncity_states[\"Seychelles\"] = \"Victoria|Anse aux Pins|Anse Boileau|Anse Etoile|Anse Louis|Anse Royale|Baie Lazare|Baie Sainte Anne|Beau Vallon|Bel Air|Bel Ombre|Cascade|Glacis|Grand'Anse(on Mahe) | Grand' Anse (on Praslin)|La Digue|La Riviere Anglaise|Mont Buxton|Mont Fleuri|Plaisance|Pointe La Rue|Port Glaud|Saint Louis|Takamaka\";\ncity_states[\"Sierra Leone\"] = \"Freetown|Eastern|Northern|Southern|Western\";\ncity_states[\"Somalia\"] = \"Mogadishu|Awdal|Bakool|Banaadir|Bari|Bay|Galguduud|Gedo|Hiiraan|Jubbada Dhexe|Jubbada Hoose|Mudug|Nugaal|Sanaag|Shabeellaha Dhexe|Shabeellaha Hoose|Sool|Togdheer|Woqooyi Galbeed\";\ncity_states[\"South Africa\"] = \"Pretoria|Eastern Cape|Free State|Gauteng|KwaZulu-Natal|Mpumalanga|North-West|Northern Cape|Northern Province/Limpopo|Western Cape\";\ncity_states[\"Sudan\"] = \"Khartoum|A'ali an Nil | Al Bahr al Ahmar | Al Buhayrat | Al Jazirah | Al Khartum | Al Qadarif | Al Wahdah | An Nil al Abyad | An Nil al Azraq | Ash Shamaliyah | Bahr al Jabal | Gharb al Istiwa'iyah|Gharb Bahr al Ghazal|Gharb Darfur|Gharb Kurdufan|Janub Darfur|Janub Kurdufan|Junqali|Kassala|Nahr an Nil|Shamal Bahr al Ghazal|Shamal Darfur|Shamal Kurdufan|Sharq al Istiwa'iyah | Sinnar | Warab \";\ncity_states[\"Swaziland\"] = \"Lobamba/Mbabane|Hhohho|Lubombo|Manzini|Shiselweni\";\ncity_states[\"Tanzania\"] = \"Dodoma|Arusha|Dar es Salaam|Iringa|Kagera|Kigoma|Kilimanjaro|Lindi|Mara|Mbeya|Morogoro|Mtwara|Mwanza|Pemba North|Pemba South|Pwani|Rukwa|Ruvuma|Shinyanga|Singida|Tabora|Tanga|Zanzibar Central/South|Zanzibar North|Zanzibar Urban/West\";\ncity_states[\"Togo\"] = \"Lome|De La Kara|Des Plateaux|Des Savanes|Centrale|Maritime\";\ncity_states[\"Tunisia\"] = \"Tunis|Ariana|Beja|Ben Arous|Bizerte|El Kef|Gabes|Gafsa|Jendouba|Kairouan|Kasserine|Kebili|Mahdia|Medenine|Monastir|Nabeul|Sfax|Sidi Bou Zid|Siliana|Sousse|Tataouine|Tozeur|Zaghouan\";\ncity_states[\"Uganda\"] = \"Kampala|Adjumani|Apac|Arua|Bugiri|Bundibugyo|Bushenyi|Busia|Gulu|Hoima|Iganga|Jinja|Kabale|Kabarole|Kaberamaido|Kalangala|Kamuli|Kamwenge|Kanungu|Kapchorwa|Kasese|Katakwi|Kayunga|Kibale|Kiboga|Kisoro|Kitgum|Kotido|Kumi|Kyenjojo|Lira|Luwero|Masaka|Masindi|Mayngc|Mbale|Mbarara|Moroto|Moyo|Mpigi|Mubende|Mukono|Nakapiripiti|Nakasongola|Nebbi|Ntungamo|Pader|Pallisa|Rakai|Rukungiri|Sembabule|Sironko|Soroti|Tororo|Wakiso|Yumbe\";\ncity_states[\"Zambia\"] = \"Lusaka|Central|Copperbelt|Eastern|Luapula|Lusaka|Northern|North-Western|Southern|Western\";\ncity_states[\"Zimbabwe\"] = \"Harare|Bulawayo|Manicaland|Mashonaland Central|Mashonaland East|Mashonaland West|Masvingo|Matabeleland North|Matabeleland South|Midlands\"; //Asia\n\ncity_states[\"Bangladesh\"] = \"Dhaka|Barisal|Chittagong|Khulna|Rajshahi|Sylhet\";\ncity_states[\"Bhutan\"] = \"Thimphu|Bumthang|Chhukha|Chirang|Dagana|Gasa|Geylegphug|Ha|Lhuntshi|Mongar|Paro|Pemagatsel|Punakha|Samchi|Samdrup Jongkhar|Shemgang|Tashigang|Tongsa|Wangdi Phodrang|Yangtse\";\ncity_states[\"Brunei\"] = \"Bandar Seri Begawan|Belait|Brunei/Muara|Temburong|Tutong\";\ncity_states[\"Burma (Myanmar)\"] = \"Rangoon|Ayeyarwady|Bago|Chin|Kachin|Kayin|Kayah|Magway|Mandalay|Mon|Rakhine|Sagaing|Shan|Tanintharyi|Yangon\";\ncity_states[\"Cambodia\"] = \"Phnom Penh|Banteay Mean Cheay|Batdambang|Kampong Cham|Kampong Chhnang|Kampong Spoe|Kampong Thum|Kampot|Kandal|Kaoh Kong|Keb|Kracheh|Mondol Kiri|Otdar Mean Cheay|Pailin|Pouthisat|Preah Seihanu (Sihanoukville)|Preah Vihear|Prey Veng|Rotanah Kiri|Siem Reab|Stoeng Treng|Svay Rieng|Takev\";\ncity_states[\"China\"] = \"Beijing|Anhui|Chongqing|Fujian|Gansu|Guangdong|Guangxi|Guizhou|Hainan|Hebei|Heilongjiang|Henan|Hubei|Hunan|Jiangsu|Jiangxi|Jilin|Liaoning|Nei Mongol|Ningxia|Qinghai|Shaanxi|Shandong|Shanghai|Shanxi|Sichuan|Tianjin|Xinjiang|Xizang (Tibet)|Yunnan|Zhejiang\";\ncity_states[\"East Timor\"] = \"Dili|Aileu|Ainaro|Baucau|Bobonaro (Maliana)|Cova-Lima (Suai)|Ermera|Lautem (Los Palos)|Liquica|Manatuto|Manufahi (Same)|Oecussi (Ambeno)|Viqueque\";\ncity_states[\"India\"] = \"New Delhi|Andaman/Nicobar Islands|Andhra Pradesh|Arunachal Pradesh|Assam|Bihar|Chandigarh|Chhattisgarh|Dadra/Nagar Haveli|Daman/Diu|Goa|Gujarat|Haryana|Himachal Pradesh|Jammu/Kashmir|Jharkhand|Karnataka|Kerala|Lakshadweep|Madhya Pradesh|Maharashtra|Manipur|Meghalaya|Mizoram|Nagaland|Orissa|Pondicherry|Punjab|Rajasthan|Sikkim|Tamil Nadu|Tripura|Uttaranchal|Uttar Pradesh|West Bengal\";\ncity_states[\"Indonesia\"] = \"Jakarta|Aceh|Bali|Banten|Bengkulu|Gorontalo|Jakarta Raya|Jambi|Jawa Barat|Jawa Tengah|Jawa Timur|Kalimantan Barat|Kalimantan Selatan|Kalimantan Tengah|Kalimantan Timur|Kepulauan Bangka Belitung|Lampung|Maluku|Maluku Utara|Nusa Tenggara Barat|Nusa Tenggara Timur|Papua|Riau|Sulawesi Selatan|Sulawesi Tengah|Sulawesi Tenggara|Sulawesi Utara|Sumatera Barat|Sumatera Selatan|Sumatera Utara|Yogyakarta\";\ncity_states[\"Japan\"] = \"Tokyo|Aichi|Akita|Aomori|Chiba|Ehime|Fukui|Fukuoka|Fukushima|Gifu|Gumma|Hiroshima|Hokkaido|Hyogo|Ibaraki|Ishikawa|Iwate|Kagawa|Kagoshima|Kanagawa|Kochi|Kumamoto|Kyoto|Mie|Miyagi|Miyazaki|Nagano|Nagasaki|Nara|Niigata|Oita|Okayama|Okinawa|Osaka|Saga|Saitama|Shiga|Shimane|Shizuoka|Tochigi|Tokushima|Tokyo|Tottori|Toyama|Wakayama|Yamagata|Yamaguchi|Yamanashi\";\ncity_states[\"Kazakhstan\"] = \"Astana|Almaty|Almaty|Aqmola|Aqtobe|Astana|Atyrau|Batys Qazaqstan|Bayqongyr|Mangghystau|Ongtustik Qazaqstan|PavLodar|Qaraghandy|Qostanay|Qyzylorda|Shyghys Qazaqstan|Soltustik Qazaqstan|Zhambyl\";\ncity_states[\"Korea (north)\"] = \"P'yongyang | Chagang - do |Hamgyong - bukto | Hamgyong - namdo | Hwanghae - bukto | Hwanghae - namdo | Kaesong - si | Kangwon - do |Najin Sonbong - si | Namp'o-si|P'yongan -bukto | P'yongan-namdo|P'  yongyang - si | Yanggang - do \";\ncity_states[\"Korea (south)\"] = \"Seoul|Cheju-do|Cholla-bukto|Cholla-namdo|Ch'ungch'ong-bukto|Ch'ungch'ong-namdo|Inch'on - gwangyoksi | Kangwon - do |Kwangju - gwangyoksi | Kyonggi - do |Kyongsang - bukto | Kyongsang - namdo | Pusan - gwangyoksi | Soul - t'ukpyolsi|Taegu-gwangyoksi|Taejon-gwangyoksi|Ulsan-gwangyoksi\";\ncity_states[\"Laos\"] = \"Vientiane|Attapu|Bokeo|Bolikhamxai|Champasak|Houaphan|Khammouan|Louangnamtha|Louangphabang|Oudomxai|Phongsali|Salavan|Savannakhet|Viangchan|Viangchan|Xaignabouli|Xaisomboun|Xekong|Xiangkhoang\";\ncity_states[\"Malaysia\"] = \"Kuala Lumpur|Johor|Kedah|Kelantan|Labuan|Melaka|Negeri Sembilan|Pahang|Perak|Perlis|Pulau Pinang|Putrajaya|Sabah|Sarawak|Selangor|Terengganu|Wilayah Persekutuan\";\ncity_states[\"Maldives\"] = \"Maale|Alifu|Baa|Dhaalu|Faafu|Gaafu Alifu|Gaafu Dhaalu|Gnaviyani|Haa Alifu|Haa Dhaalu|Kaafu|Laamu|Lhaviyani|Meemu|Noonu|Raa|Seenu|Shaviyani|Thaa|Vaavu\";\ncity_states[\"Mongolia\"] = \"Ulaanbaatar|Arhangay|Bayanhongor|Bayan-Olgiy|Bulgan|Darhan Uul|Dornod|Dornogovi|Dundgovi|Dzavhan|Govi-Altay|Govi-Sumber|Hentiy|Hovd|Hovsgol|Omnogovi|Orhon|Ovorhangay|Selenge|Suhbaatar|Tov|Uvs\";\ncity_states[\"Nepal\"] = \"Kathmandu|Bagmati|Bheri|Dhawalagiri|Gandaki|Janakpur|Karnali|Kosi|Lumbini|Mahakali|Mechi|Narayani|Rapti|Sagarmatha|Seti\";\ncity_states[\"Philippines\"] = \"Manila|Oriental|North Cotabato|Northern Samar|Nueva Ecija|Nueva Vizcaya|Olongapo|Ormoc|Oroquieta|Ozamis|Pagadian|Palawan|Palayan|Pampanga|Pangasinan|Pasay|Puerto Princesa|Quezon|Quezon City|Quirino|Rizal|Romblon|Roxas|Samar|San Carlos (Negros Occidental)|San Carlos (Pangasinan)|San Jose|San Pablo|Silay|Siquijor|Sorsogon|South Cotabato|Southern Leyte|Sultan Kudarat|Sulu|Surigao|Surigao del Norte|Surigao del Sur|Tacloban|Tagaytay|Tagbilaran|Tangub|Tarlac|Tawi-Tawi|Toledo|Trece Martires|Zambales|Zamboanga|Zamboanga del Norte|Zamboanga del Sur\";\ncity_states[\"Russian Federation\"] = \"Moskva (Moscow)|Adygeya (Maykop)|Aginskiy Buryatskiy (Aginskoye)|Altay (Gorno-Altaysk)|Altayskiy (Barnaul)|Amurskaya (Blagoveshchensk)|Arkhangel'skaya | Astrakhanskaya | Bashkortostan(Ufa) | Belgorodskaya | Bryanskaya | Buryatiya(Ulan - Ude) | Chechnya(Groznyy) | Chelyabinskaya | Chitinskaya | Chukotskiy(Anadyr')|Chuvashiya (Cheboksary)|Dagestan (Makhachkala)|Evenkiyskiy (Tura)|Ingushetiya (Nazran') | Irkutskaya | Ivanovskaya | Kabardino - Balkariya(Nal'chik)|Kaliningradskaya|Kalmykiya (Elista)|Kaluzhskaya|Kamchatskaya (Petropavlovsk-Kamchatskiy)|Karachayevo-Cherkesiya (Cherkessk)|Kareliya (Petrozavodsk)|Kemerovskaya|Khabarovskiy|Khakasiya (Abakan)|Khanty-Mansiyskiy (Khanty-Mansiysk)|Kirovskaya|Komi (Syktyvkar)|Koryakskiy (Palana)|Kostromskaya|Krasnodarskiy|Krasnoyarskiy|Kurganskaya|Kurskaya|Leningradskaya|Lipetskaya|Magadanskaya|Mariy-El (Yoshkar-Ola)|Mordoviya (Saransk)|Moskovskaya|Murmanskaya|Nenetskiy (Nar'yan - Mar) | Nizhegorodskaya | Novgorodskaya | Novosibirskaya | Omskaya | Orenburgskaya | Orlovskaya(Orel) | Penzenskaya | Permskaya | Komi - Permyatskiy(Kudymkar) | Primorskiy(Vladivostok) | Pskovskaya | Rostovskaya | Ryazanskaya | Sakha(Yakutiya) | Sakhalinskaya(Yuzhno - Sakhalinsk) | Samarskaya | Sankt - Peterburg(Saint Petersburg) | Saratovskaya | Severnaya Osetiya - Alaniya[North Ossetia](Vladikavkaz) | Smolenskaya | Stavropol'skiy|Sverdlovskaya (Yekaterinburg)|Tambovskaya|Tatarstan (Kazan') | Taymyrskiy(Dudinka) | Tomskaya | Tul'skaya|Tverskaya|Tyumenskaya|Tyva (Kyzyl)|Udmurtiya (Izhevsk)|Ul'yanovskaya | Ust'-Ordynskiy Buryatskiy (Ust' - Ordynskiy) | Vladimirskaya | Volgogradskaya | Vologodskaya | Voronezhskaya | Yamalo - Nenetskiy(Salekhard) | Yaroslavskaya | Yevreyskaya \";\ncity_states[\"Singapore\"] = \"\";\ncity_states[\"Sri Lanka\"] = \"Colombo|Central|North Central|Northern|Eastern|North Western|Sabaragamuwa|Southern|Uva|Western\";\ncity_states[\"Taiwan\"] = \"Taipei|Chang-hua|Chia-i|Chi-lung|Chung-hsing-hsin-ts'un | Hsin - chu | Hua - lien | I - lan | Kao - hsiung | Miao - li | Nan - t'ou|P'eng - hu | P'ing-tung|T'ai - chung | T'ai-nan|T'ai - pei | T'ai-tung|T'ao - yuan / Yun - lin \";\ncity_states[\"Thailand\"] = \"Bangkok|Amnat Charoen|Ang Thong|Buriram|Chachoengsao|Chai Nat|Chaiyaphum|Chanthaburi|Chiang Mai|Chiang Rai|Chon Buri|Chumphon|Kalasin|Kamphaeng Phet|Kanchanaburi|Khon Kaen|Krabi|Lampang|Lamphun|Loei|Lop Buri|Mae Hong Son|Maha Sarakham|Mukdahan|Nakhon Nayok|Nakhon Pathom|Nakhon Phanom|Nakhon Ratchasima|Nakhon Sawan|Nakhon Si Thammarat|Nan|Narathiwat|Nong Bua Lamphu|Nong Khai|Nonthaburi|Pathum Thani|Pattani|Phangnga|Phatthalung|Phayao|Phetchabun|Phetchaburi|Phichit|Phitsanulok|Phra Nakhon Si Ayutthaya|Phrae|Phuket|Prachin Buri|Prachuap Khiri Khan|Ranong|Ratchaburi|Rayong|Roi Et|Sa Kaeo|Sakon Nakhon|Samut Prakan|Samut Sakhon|Samut Songkhram|Sara Buri|Satun|Sing\";\ncity_states[\"Vietnam\"] = \"Hanoi|An Giang|Bac Giang|Bac Kan|Bac Lieu|Bac Ninh|Ba Ria-Vung Tau|Ben Tre|Binh Dinh|Binh Duong|Binh Phuoc|Binh Thuan|Ca Mau|Can Tho|Cao Bang|Dac Lak|Da Nang|Dong Nai|Dong Thap|Gia Lai|Ha Giang|Hai Duong|Hai Phong|Ha Nam|Ha Noi|Ha Tay|Ha Tinh|Hoa Binh|Ho Chi Minh|Hung Yen|Khanh Hoa|Kien Giang|Kon Tum|Lai Chau|Lam Dong|Lang Son|Lao Cai|Long An|Nam Dinh|Nghe An|Ninh Binh|Ninh Thuan|Phu Tho|Phu Yen|Quang Binh|Quang Nam|Quang Ngai|Quang Ninh|Quang Tri|Soc Trang|Son La|Tay Ninh|Thai Binh|Thai Nguyen|Thanh Hoa|Thua Thien-Hue|Tien Giang|Tra Vinh|Tuyen Quang|Vinh Long|Vinh Phuc|Yen Bai\"; //Australia-Oceania\n\ncity_states[\"Australia\"] = \"Canberra|Australian Capital Territory|New South Wales|Northern Territory|Queensland|South Australia|Tasmania|Victoria|Western Australia\";\ncity_states[\"Fiji\"] = \"Suva|Central|Eastern|Northern|Rotuma|Western\";\ncity_states[\"Kiribati\"] = \"Tarawa|Abaiang|Abemama|Aranuka|Arorae|Banaba|Beru|Butaritari|Gilberts (Central)|Gilberts (Northern)|Gilberts (Southern)|Kanton|Kiritimati|Kuria|Line Islands|Maiana|Makin|Marakei|Nikunau|Nonouti|Onotoa|Phoenix Islands|Tabiteuea|Tabuaeran|Tamana|Teraina\";\ncity_states[\"Micronesia\"] = \"Palikir|Chuuk (Truk)|Kosrae|Pohnpei|Yap\";\ncity_states[\"Nauru\"] = \"Yaren|Aiwo|Anabar|Anetan|Anibare|Baiti|Boe|Buada|Denigomodu|Ewa|Ijuw|Meneng|Nibok|Uaboe\";\ncity_states[\"New Zealand\"] = \"Wellington|Akaroa|Amuri|Ashburton|Auckland|Banks Peninsula|Bay of Islands|Bay of Plenty|Bruce|Buller|Canterbury|Carterton|Chatham Islands|Cheviot|Christchurch|Clifton|Clutha|Cook|Dannevirke|Dunedin|Egmont|Eketahuna|Ellesmere|Eltham|Eyre|Far North|Featherston|Franklin|Gisborne|Golden Bay|Gore|Great Barrier Island|Grey|Hamilton|Hastings|Hauraki Plains|Hawera|Hawke's Bay | Heathcote | Hikurangi | Hobson | Hokianga | Horowhenua | Hurunui | Hutt | Inangahua | Inglewood | Invercargill | Kaikoura | Kaipara | Kairanga | Kapiti Coast | Kawerau | Kiwitea | Lake | Mackenzie | Malvern | Manaia | Manawatu | Mangonui | Maniototo | Manukau | Marlborough | Masterton | Matamata | Matamata Piako | Mount Herbert | Napier | Nelson | Nelson | New Plymouth | Northland | North Shore | Ohinemuri | Opotiki | Oroua | Otago | Otamatea | Otorohanga | Oxford | Palmerston North | Pahiatua | Papakura | Paparua | Patea | Piako | Pohangina | Porirua | Queenstown Lakes | Raglan | Rangiora | Rangitikei | Rodney | Rotorua | Ruapehu | Runanga | Saint Kilda | Selwyn | Silverpeaks | Southland | South Taranaki | South Waikato | South Wairarapa | Stewart Island | Stratford | Strathallan | Taranaki | Tararua | Tasman | Taumarunui | Taupo | Tauranga | Thames Coromandel | Timaru | Tuapeka | Upper Hutt | Vincent | Waiapu | Waiheke | Waihemo | Waikato | Waikohu | Waimairi | Waimarino | Waimate | Waimate West | Waimea | Waipa | Waipawa | Waipukurau | Wairarapa South | Wairewa | Wairoa | Waitakere | Waitaki | Waitomo | Waitotara | Wallace | Wanganui | Wanganui - Manawatu | Waverley | West Coast | Western Bay of Plenty | Westland | Whakatane | Whangarei | Whangaroa | Woodville \";\ncity_states[\"Palau\"] = \"Koror|Aimeliik|Airai|Angaur|Hatobohei|Kayangel|Melekeok|Ngaraard|Ngarchelong|Ngardmau|Ngatpang|Ngchesar|Ngeremlengui|Ngiwal|Peleliu|Sonsoral\";\ncity_states[\"Papua New Guinea\"] = \"Port Moresby|Bougainville|Central|Chimbu|Eastern Highlands|East New Britain|East Sepik|Enga|Gulf|Madang|Manus|Milne Bay|Morobe|National Capital|New Ireland|Northern|Sandaun|Southern Highlands|Western|Western Highlands|West New Britain\";\ncity_states[\"Samoa\"] = \"Apia|A'ana | Aiga - i - le - Tai | Atua | Fa'asaleleaga|Gaga'emauga | Gagaifomauga | Palauli | Satupa'itea|Tuamasaga|Va'a - o - Fonoti | Vaisigano \";\ncity_states[\"Tonga\"] = \"Nuku'alofa | Ha'apai|Tongatapu|Vava'u \";\ncity_states[\"Tuvalu\"] = \"Fongafale\";\ncity_states[\"Vanuatu\"] = \"Port-Vila|Malampa|Penama|Sanma|Shefa|Tafea|Torba\"; //Caribbean\n\ncity_states[\"Anguilla\"] = \"The Valley\";\ncity_states[\"Antigua/Barbuda\"] = \"Saint John|Barbuda|Redonda|Saint George|Saint Mary|Saint Paul|Saint Peter|Saint Philip\";\ncity_states[\"Aruba\"] = \"Oranjestad\";\ncity_states[\"Bahamas\"] = \"Nassau|Acklins/Crooked Islands|Bimini|Cat Island|Exuma|Freeport|Fresh Creek|Governor's Harbour | Green Turtle Cay | Harbour Island | High Rock | Inagua | Kemps Bay | Long Island | Marsh Harbour | Mayaguana | New Providence | Nichollstown / Berry Islands | Ragged Island | Rock Sound | Sandy Point | San Salvador / Rum Cay \";\ncity_states[\"Barbados\"] = \"Bridgetown|Christ Church|Saint Andrew|Saint George|Saint James|Saint John|Saint Joseph|Saint Lucy|Saint Michael|Saint Peter|Saint Philip|Saint Thomas\";\ncity_states[\"Cuba\"] = \"Havana|Camaguey|Ciego de Avila|Cienfuegos|Ciudad de La Habana|Granma|Guantanamo|Holguin|Isla de la Juventud|La Habana|Las Tunas|Matanzas|Pinar del Rio|Sancti Spiritus|Santiago de Cuba|Villa Clara\";\ncity_states[\"Dominica\"] = \"Roseau|Saint Andrew|Saint David|Saint George|Saint John|Saint Joseph|Saint Luke|Saint Mark|Saint Patrick|Saint Paul|Saint Peter\";\ncity_states[\"Dominican Republic\"] = \"|anto Domingo|Azua|Baoruco|Barahona|Dajabon|Distrito Nacional|Duarte|Elias Pina|El Seibo|Espaillat|Hato Mayor|Independencia|La Altagracia|La Romana|La Vega|Maria Trinidad Sanchez|Monsenor Nouel|Monte Cristi|Monte Plata|Pedernales|Peravia|Puerto Plata|Salcedo|Samana|Sanchez Ramirez|San Cristobal|San Juan|San Pedro de Macoris|Santiago|Santiago Rodriguez|Valverde\";\ncity_states[\"Grenada\"] = \"Saint George's | Carriacou / Petit Martinique | Saint Andrew | Saint David | Saint John | Saint Mark | Saint Patrick \";\ncity_states[\"Guadeloupe\"] = \"Basse-Terre\";\ncity_states[\"Haiti\"] = \"Port-au-Prince|Artibonite|Centre|Grand 'Anse | Nord | Nord - Est | Nord - Ouest | Ouest | Sud | Sud - Est \";\ncity_states[\"Jamaica\"] = \"Kingston|Clarendon|Hanover|Manchester|Portland|Saint Andrew|Saint Ann|Saint Catherine|Saint Elizabeth|Saint James|Saint Mary|Saint Thomas|Trelawny|Westmoreland\";\ncity_states[\"Martinique\"] = \"Fort-de-France\";\ncity_states[\"Montserrat\"] = \"Brades Estate|Plymouth|Saint Anthony|Saint Georges|Saint Peter\";\ncity_states[\"Netherlands Antilles\"] = \"Willemstad\";\ncity_states[\"Puerto Rico\"] = \"San Juan|Adjuntas|Aguada|Aguadilla|Aguas Buenas|Aibonito|Anasco|Arecibo|Arroyo|Barceloneta|Barranquitas|Bayamon|Cabo Rojo|Caguas|Camuy|Canovanas|Carolina|Catano|Cayey|Ceiba|Ciales|Cidra|Coamo|Comerio|Corozal|Culebra|Dorado|Fajardo|Florida|Guanica|Guayama|Guayanilla|Guaynabo|Gurabo|Hatillo|Hormigueros|Humacao|Isabela|Jayuya|Juana Diaz|Juncos|Lajas|Lares|Las Marias|Las Piedras|Loiza|Luquillo|Manati|Maricao|Maunabo|Mayaguez|Moca|Morovis|Naguabo|Naranjito|Orocovis|Patillas|Penuelas|Ponce|Quebradillas|Rincon|Rio Grande|Sabana Grande|Salinas|San German|San Lorenzo|San Sebastian|Santa Isabel|Toa Alta|Toa Baja|Trujillo Alto|Utuado|Vega Alta|Vega Baja|Vieques|Villalba|Yabucoa|Yauco\";\ncity_states[\"St. Barts\"] = \"\";\ncity_states[\"St. Kitts/Nevis\"] = \"Basseterre|Christ Church Nichola Town|St. Anne Sandy Point|St. George Basseterre|St. George Gingerland|St. James Windward|St. John Capesterre|St. John Figtree|St. Mary Cayon|St. Paul Capesterre|St. Paul Charlestown|St. Peter Basseterre|St. Thomas Lowland|St. Thomas Middle Island|Trinity Palmetto Point\";\ncity_states[\"St. Lucia\"] = \"Castries|Anse-la-Raye|Castries|Choiseul|Dauphin|Dennery|Gros-Islet|Laborie|Micoud|Praslin|Soufriere|Vieux-Fort\";\ncity_states[\"St. Martin/Sint Maarten\"] = \"\";\ncity_states[\"St Vincent/Grenadines\"] = \"|Kingstown|Charlotte|Grenadines|Saint Andrew|Saint David|Saint George|Saint Patrick\";\ncity_states[\"San Andres\"] = \"\";\ncity_states[\"Trinidad/Tobago\"] = \"Port-of-Spain|Arima|Caroni|Mayaro|Nariva|Saint Andrew|Saint David|Saint George|Saint Patrick|San Fernando|Tobago|Victoria\";\ncity_states[\"Turks and Caicos Islands\"] = \"Grand Turk (Cockburn Town)\";\ncity_states[\"Virgin Islands\"] = \"Charlotte Amalie\"; //Central America\n\ncity_states[\"Belize\"] = \"Belmopan|Belize|Cayo|Corozal|Orange Walk|Stann Creek|Toledo\";\ncity_states[\"Costa Rica\"] = \"San Jose|Alajuela|Cartago|Guanacaste|Heredia|Limon|Puntarenas\";\ncity_states[\"El Salvador\"] = \"San Salvador|Ahuachapan|Cabanas|Chalatenango|Cuscatlan|La Libertad|La Paz|La Union|Morazan|San Miguel|Santa Ana|San Vicente|Sonsonate|Usulutan\";\ncity_states[\"Guatemala\"] = \"Guatemala|Alta Verapaz|Baja Verapaz|Chimaltenango|Chiquimula|El Progreso|Escuintla|Guatemala|Huehuetenango|Izabal|Jalapa|Jutiapa|Peten|Quetzaltenango|Quiche|Retalhuleu|Sacatepequez|San Marcos|Santa Rosa|Solola|Suchitepequez|Totonicapan|Zacapa\";\ncity_states[\"Honduras\"] = \"Tegucigalpa|Atlantida|Choluteca|Colon|Comayagua|Copan|Cortes|El Paraiso|Francisco Morazan|Gracias a Dios|Intibuca|Islas de la Bahia|La Paz|Lempira|Ocotepeque|Olancho|Santa Barbara|Valle|Yoro\";\ncity_states[\"Nicaragua\"] = \"Managua|Boaco|Carazo|Chinandega|Chontales|Esteli|Granada|Jinotega|Leon|Madriz|Managua|Masaya|Matagalpa|Nueva Segovia|Rio San Juan|Rivas|Atlantico Norte|Atlantico Sur\";\ncity_states[\"Panama\"] = \"|Panama|Bocas del Toro|Chiriqui|Cocle|Colon|Darien|Herrera|Los Santos|San Blas|Veraguas\"; //Europe\n\ncity_states[\"Albania\"] = \"Tirana|Berat|Bulqize|Delvine|Devoll|Diber|Durres|Elbasan|Fier|Gjirokaster|Gramsh|Has|Kavaje|Kolonje|Korce|Kruje|Kucove|Kukes|Kurbin|Lezhe|Librazhd|Lushnje|Malesi e Madhe|Mallakaster|Mat|Mirdite|Peqin|Permet|Pogradec|Puke|Sarande|Shkoder|Skrapar|Tepelene|Tirane|Tropoje|Vlore\";\ncity_states[\"Andorra\"] = \"Andorra la Vella|Canillo|Encamp|La Massana|Escaldes-Engordany|Ordino|Sant Julia de Loria\";\ncity_states[\"Austria\"] = \"Vienna|Burgenland|Kaernten|Niederoesterreich|Oberoesterreich|Salzburg|Steiermark|Tirol|Vorarlberg|Wien\";\ncity_states[\"Belarus\"] = \"Minsk|Brest|Homyel' | Horad Minsk | Hrodna | Mahilyow | Vitsyebsk \";\ncity_states[\"Belgium\"] = \"Brussels|Antwerpen|Brabant Wallon|Brussels (Bruxelles)|Hainaut|Liege|Limburg|Luxembourg|Namur|Oost-Vlaanderen|Vlaams-Brabant|West-Vlaanderen\";\ncity_states[\"Bosnia/Herzegovina\"] = \"Sarajevo\";\ncity_states[\"Bulgaria\"] = \"Sofiya|Blagoevgrad|Burgas|Dobrich|Gabrovo|Khaskovo|Kurdzhali|Kyustendil|Lovech|Montana|Pazardzhik|Pernik|Pleven|Plovdiv|Razgrad|Ruse|Shumen|Silistra|Sliven|Smolyan|Sofiya-Grad|Stara Zagora|Turgovishte|Varna|Veliko Turnovo|Vidin|Vratsa|Yambol\";\ncity_states[\"Croatia\"] = \"Zagreb|Bjelovarsko-Bilogorska|Brodsko-Posavska|Dubrovacko-Neretvanska|Istarska|Karlovacka|Koprivnicko-Krizevacka|Krapinsko-Zagorska|Licko-Senjska|Medimurska|Osjecko-Baranjska|Pozesko-Slavonska|Primorsko-Goranska|Sibensko-Kninska|Sisacko-Moslavacka|Splitsko-Dalmatinska|Varazdinska|Viroviticko-Podravska|Vukovarsko-Srijemska|Zadarska|Zagrebacka\";\ncity_states[\"Czech Republic\"] = \"Prague (Praha)|Jihocesky|Jihomoravsky|Karlovarsky|Kralovehradecky|Liberecky|Moravskoslezsky|Olomoucky|Pardubicky|Plzensky|Stredocesky|Ustecky|Vysocina|Zlinsky\";\ncity_states[\"Denmark\"] = \"Copenhagen (Kobenhavn)|Arhus|Bornholm|Fredericksberg|Frederiksborg|Fyn|Kobenhavns|Nordjylland|Ribe|Ringkobing|Roskilde|Sonderjylland|Storstrom|Vejle|Vestsjalland|Viborg\";\ncity_states[\"Estonia\"] = \"Harjumaa (Tallinn)|Hiiumaa (Kardla)|Ida-Virumaa (Johvi)|Jarvamaa (Paide)|Jogevamaa (Jogeva)|Laanemaa (Haapsalu)|Laane-Virumaa (Rakvere)|Parnumaa (Parnu)|Polvamaa (Polva)|Raplamaa (Rapla)|Saaremaa (Kuressaare)|Tartumaa (Tartu)|Valgamaa (Valga)|Viljandimaa (Viljandi)|Vorumaa (Voru)\";\ncity_states[\"Finland\"] = \"Helsinki|Aland|Etela-Suomen Laani|Ita-Suomen Laani|Lansi-Suomen Laani|Lappi|Oulun Laani\";\ncity_states[\"France\"] = \"Paris|Alsace|Aquitaine|Auvergne|Basse-Normandie|Bourgogne|Bretagne|Centre|Champagne-Ardenne|Corse|Franche-Comte|Haute-Normandie|Ile-de-France|Languedoc-Roussillon|Limousin|Lorraine|Midi-Pyrenees|Nord-Pas-de-Calais|Pays de la Loire|Picardie|Poitou-Charentes|Provence-Alpes-Cote d'Azur | Rhone - Alpes \";\ncity_states[\"Georgia\"] = \"T'bilisi | Bat'umi|Chiat'ura | Gori | Guria | Imereti | Kakheti | K'ut'aisi | Kvemo Kartli | Mtskheta - Mtianeti | P'ot'i | Racha - Lechkhumi / Kvemo Svaneti | Rust'avi|Samegrelo/Zemo Svaneti|Samtskhe-Javakheti|Shida Kartli|Sokhumi|Tqibuli|Tsqaltubo|Zugdidi\";\ncity_states[\"Germany\"] = \"Berlin|Baden-Wuerttemberg|Bayern|Berlin|Brandenburg|Bremen|Hamburg|Hessen|Mecklenburg-Vorpommern|Niedersachsen|Nordrhein-Westfalen|Rheinland-Pfalz|Saarland|Sachsen|Sachsen-Anhalt|Schleswig-Holstein|Thueringen\";\ncity_states[\"Greece\"] = \"Athens|Agion Oros (Mt. Athos)|Achaia|Aitolia kai Akarmania|Argolis|Arkadia|Arta|Attiki|Chalkidiki|Chanion|Chios|Dodekanisos|Drama|Evros|Evrytania|Evvoia|Florina|Fokidos|Fthiotis|Grevena|Ileia|Imathia|Ioannina|Irakleion|Karditsa|Kastoria|Kavala|Kefallinia|Kerkyra|Kilkis|Korinthia|Kozani|Kyklades|Lakonia|Larisa|Lasithi|Lefkas|Lesvos|Magnisia|Messinia|Pella|Pieria|Preveza|Rethynnis|Rodopi|Samos|Serrai|Thesprotia|Thessaloniki|Trikala|Voiotia|Xanthi|Zakynthos\";\ncity_states[\"Hungary\"] = \"Budapest|Bacs-Kiskun|Baranya|Bekes|Bekescsaba|Borsod-Abauj-Zemplen|Csongrad|Debrecen|Dunaujvaros|Eger|Fejer|Gyor|Gyor-Moson-Sopron|Hajdu-Bihar|Heves|Hodmezovasarhely|Jasz-Nagykun-Szolnok|Kaposvar|Kecskemet|Komarom-Esztergom|Miskolc|Nagykanizsa|Nograd|Nyiregyhaza|Pecs|Pest|Somogy|Sopron|Szabolcs-Szatmar-Bereg|Szeged|Szekesfehervar|Szolnok|Szombathely|Tatabanya|Tolna|Vas|Veszprem|Veszprem|Zala|Zalaegerszeg\";\ncity_states[\"Iceland\"] = \"Reykjavik|Akranes|Akureyri|Arnessysla|Austur-Bardhastrandarsysla|Austur-Hunavatnssysla|Austur-Skaftafellssysla|Borgarfjardharsysla|Dalasysla|Eyjafjardharsysla|Gullbringusysla|Hafnarfjordhur|Husavik|Isafjordhur|Keflavik|Kjosarsysla|Kopavogur|Myrasysla|Neskaupstadhur|Nordhur-Isafjardharsysla|Nordhur-Mulasys-la|Nordhur-Thingeyjarsysla|Olafsfjordhur|Rangarvallasysla|Saudharkrokur|Seydhisfjordhur|Siglufjordhur|Skagafjardharsysla|Snaefellsnes-og Hnappadalssysla|Strandasysla|Sudhur-Mulasysla|Sudhur-Thingeyjarsysla|Vesttmannaeyjar|Vestur-Bardhastrandarsysla|Vestur-Hunavatnssysla|Vestur-Isafjardharsysla|Vestur-Skaftafellssysla\";\ncity_states[\"Ireland\"] = \"Dublin|Carlow|Cavan|Clare|Cork|Donegal|Galway|Kerry|Kildare|Kilkenny|Laois|Leitrim|Limerick|Longford|Louth|Mayo|Meath|Monaghan|Offaly|Roscommon|Sligo|Tipperary|Waterford|Westmeath|Wexford|Wicklow\";\ncity_states[\"Italy\"] = \"Rome|Abruzzi|Basilicata|Calabria|Campania|Emilia-Romagna|Friuli-Venezia Giulia|Lazio|Liguria|Lombardia|Marche|Molise|Piemonte|Puglia|Sardegna|Sicilia|Toscana|Trentino-Alto Adige|Umbria|Valle d'Aosta | Veneto \";\ncity_states[\"Latvia\"] = \"Riga|Aizkraukles|Aluksnes|Balvu|Bauskas|Cesu|Daugavpils|Daugavpils|Dobeles|Gulbenes|Jekabpils|Jelgava|Jelgavas|Jurmala|Kraslavas|Kuldigas|Liepaja|Liepajas|Limbazu|Ludzas|Madonas|Ogres|Preilu|Rezekne|Rezeknes|Riga|Rigas|Saldus|Talsu|Tukuma|Valkas|Valmieras|Ventspils|Ventspils\";\ncity_states[\"Liechtenstein\"] = \"Vaduz|Balzers|Eschen|Gamprin|Mauren|Planken|Ruggell|Schaan|Schellenberg|Triesen|Triesenberg\";\ncity_states[\"Lithuania\"] = \"Vilnius|Alytaus|Kauno|Klaipedos|Marijampoles|Panevezio|Siauliu|Taurages|Telsiu|Utenos\";\ncity_states[\"Luxembourg\"] = \"Luxembourg|Diekirch|Grevenmacher\";\ncity_states[\"Macedonia\"] = \"Skopje|Aracinovo|Bac|Belcista|Berovo|Bistrica|Bitola|Blatec|Bogdanci|Bogomila|Bogovinje|Bosilovo|Brvenica|Cair|Capari|Caska|Cegrane|Centar|Centar Zupa|Cesinovo|Cucer-Sandevo|Debar|Delcevo|Delogozdi|Demir Hisar|Demir Kapija|Dobrusevo|Dolna Banjica|Dolneni|Dorce Petrov|Drugovo|Dzepciste|Gazi Baba|Gevgelija|Gostivar|Gradsko|Ilinden|Izvor|Jegunovce|Kamenjane|Karbinci|Karpos|Kavadarci|Kicevo|Kisela Voda|Klecevce|Kocani|Konce|Kondovo|Konopiste|Kosel|Kratovo|Kriva Palanka|Krivogastani|Krusevo|Kuklis|Kukurecani|Kumanovo|Labunista|Lipkovo|Lozovo|Lukovo|Makedonska Kamenica|Makedonski Brod|Mavrovi Anovi|Meseista|Miravci|Mogila|Murtino|Negotino|Negotino-Polosko|Novaci|Novo Selo|Oblesevo|Ohrid|Orasac|Orizari|Oslomej|Pehcevo|Petrovec|Plasnica|Podares|Prilep|Probistip|Radovis|Rankovce|Resen|Rosoman|Rostusa|Samokov|Saraj|Sipkovica|Sopiste|Sopotnica|Srbinovo|Star Dojran|Staravina|Staro Nagoricane|Stip|Struga|Strumica|Studenicani|Suto Orizari|Sveti Nikole|Tearce|Tetovo|Topolcani|Valandovo|Vasilevo|Velesta|Veles|Vevcani|Vinica|Vitoliste|Vranestica|Vrapciste|Vratnica|Vrutok|Zajas|Zelenikovo|Zeleno|Zitose|Zletovo|Zrnovci\";\ncity_states[\"Malta\"] = \"Valletta\";\ncity_states[\"Moldova\"] = \"Chisinau|Balti|Cahul|Chisinau|Chisinau|Edinet|Gagauzia|Lapusna|Orhei|Soroca|Stinga Nistrului|Tighina|Ungheni\";\ncity_states[\"Monaco\"] = \"Monaco|Fontvieille|La Condamine|Monaco-Ville|Monte-Carlo\";\ncity_states[\"Netherlands\"] = \"Amsterdam|The Hague|Drenthe|Flevoland|Friesland|Gelderland|Groningen|Limburg|Noord-Brabant|Noord-Holland|Overijssel|Utrecht|Zeeland|Zuid-Holland\";\ncity_states[\"Norway\"] = \"Oslo|Akershus|Aust-Agder|Buskerud|Finnmark|Hedmark|Hordaland|More og Romsdal|Nordland|Nord-Trondelag|Oppland|Ostfold|Rogaland|Sogn og Fjordane|Sor-Trondelag|Telemark|Troms|Vest-Agder|Vestfold\";\ncity_states[\"Poland\"] = \"Warsaw|Dolnoslaskie|Kujawsko-Pomorskie|Lodzkie|Lubelskie|Lubuskie|Malopolskie|Mazowieckie|Opolskie|Podkarpackie|Podlaskie|Pomorskie|Slaskie|Swietokrzyskie|Warminsko-Mazurskie|Wielkopolskie|Zachodniopomorskie\";\ncity_states[\"Portugal\"] = \"Lisbon|Aveiro|Acores (Azores)|Beja|Braga|Braganca|Castelo Branco|Coimbra|Evora|Faro|Guarda|Leiria|Lisboa|Madeira|Portalegre|Porto|Santarem|Setubal|Viana do Castelo|Vila Real|Viseu\";\ncity_states[\"Romania\"] = \"Bucharest (Bucuresti)|Alba|Arad|Arges|Bacau|Bihor|Bistrita-Nasaud|Botosani|Braila|Brasov|Buzau|Calarasi|Caras-Severin|Cluj|Constanta|Covasna|Dimbovita|Dolj|Galati|Gorj|Giurgiu|Harghita|Hunedoara|Ialomita|Iasi|Ilfov|Maramures|Mehedinti|Mures|Neamt|Olt|Prahova|Salaj|Satu Mare|Sibiu|Suceava|Teleorman|Timis|Tulcea|Vaslui|Vilcea|Vrancea\";\ncity_states[\"San Marino\"] = \"San Marino|Acquaviva|Borgo Maggiore|Chiesanuova|Domagnano|Faetano|Fiorentino|Monte Giardino|Serravalle\";\ncity_states[\"Serbia/Montenegro (Yugoslavia)\"] = \"Belgrade|Kosovo|Montenegro|Serbia|Vojvodina\";\ncity_states[\"Slovakia\"] = \"Bratislava|Banskobystricky|Kosicky|Nitriansky|Presovsky|Trenciansky|Trnavsky|Zilinsky\";\ncity_states[\"Slovenia\"] = \"Ljubljana|Ajdovscina|Beltinci|Bled|Bohinj|Borovnica|Bovec|Brda|Brezice|Brezovica|Cankova-Tisina|Celje|Cerklje na Gorenjskem|Cerknica|Cerkno|Crensovci|Crna na Koroskem|Crnomelj|Destrnik-Trnovska Vas|Divaca|Dobrepolje|Dobrova-Horjul-Polhov Gradec|Dol pri Ljubljani|Domzale|Dornava|Dravograd|Duplek|Gorenja Vas-Poljane|Gorisnica|Gornja Radgona|Gornji Grad|Gornji Petrovci|Grosuplje|Hodos Salovci|Hrastnik|Hrpelje-Kozina|Idrija|Ig|Ilirska Bistrica|Ivancna Gorica|Izola|Jesenice|Jursinci|Kamnik|Kanal|Kidricevo|Kobarid|Kobilje|Kocevje|Komen|Koper|Kozje|Kranj|Kranjska Gora|Krsko|Kungota|Kuzma|Lasko|Lenart|Lendava|Litija|Ljubno|Ljutomer|Logatec|Loska Dolina|Loski Potok|Luce|Lukovica|Majsperk|Maribor|Medvode|Menges|Metlika|Mezica|Miren-Kostanjevica|Mislinja|Moravce|Moravske Toplice|Mozirje|Murska Sobota|Muta|Naklo|Nazarje|Nova Gorica|Novo Mesto|Odranci|Ormoz|Osilnica|Pesnica|Piran|Pivka|Podcetrtek|Podvelka-Ribnica|Postojna|Preddvor|Ptuj|Puconci|Race-Fram|Radece|Radenci|Radlje ob Dravi|Radovljica|Ravne-Prevalje|Ribnica|Rogasevci|Rogaska Slatina|Rogatec|Ruse|Semic|Sencur|Sentilj|Sentjernej|Sentjur pri Celju|Sevnica|Sezana|Skocjan|Skofja Loka|Skofljica|Slovenj Gradec|Slovenska Bistrica|Slovenske Konjice|Smarje pri Jelsah|Smartno ob Paki|Sostanj|Starse|Store|Sveti Jurij|Tolmin|Trbovlje|Trebnje|Trzic|Turnisce|Velenje|Velike Lasce|Videm|Vipava|Vitanje|Vodice|Vojnik|Vrhnika|Vuzenica|Zagorje ob Savi|Zalec|Zavrc|Zelezniki|Ziri|Zrece\";\ncity_states[\"Spain\"] = \"Madrid|Andalucia|Aragon|Asturias|Baleares (Balearic Islands)|Ceuta|Canarias (Canary Islands)|Cantabria|Castilla-La Mancha|Castilla y Leon|Cataluna|Communidad Valencian|Extremadura|Galicia|La Rioja|Melilla|Murcia|Navarra|Pais Vasco (Basque Country)\";\ncity_states[\"Sweden\"] = \"|Stockholm|Blekinge|Dalarnas|Gavleborgs|Gotlands|Hallands|Jamtlands|Jonkopings|Kalmar|Kronobergs|Norrbottens|Orebro|Ostergotlands|Skane|Sodermanlands|Uppsala|Varmlands|Vasterbottens|Vasternorrlands|Vastmanlands|Vastra Gotalands\";\ncity_states[\"Switzerland\"] = \"Bern|Aargau|Appenzell Ausser-Rhoden|Appenzell Inner-Rhoden|Basel-Landschaft|Basel-Stadt|Fribourg|Geneve|Glarus|Graubunden|Jura|Luzern|Neuchatel|Nidwalden|Obwalden|Sankt Gallen|Schaffhausen|Schwyz|Solothurn|Thurgau|Ticino|Uri|Valais|Vaud|Zug|Zurich\";\ncity_states[\"Ukraine\"] = \"Kiev (Kyyiv)|Cherkas'ka(Cherkasy) | Chernihivs'ka (Chernihiv)|Chernivets'ka(Chernivtsi) | Dnipropetrovs'ka (Dnipropetrovs'k) | Donets'ka (Donets'k) | Ivano - Frankivs'ka (Ivano-Frankivs'k) | Izmail(Izmayl) | Kharkivs'ka (Kharkiv)|Khersons'ka(Kherson) | Khmel'nyts'ka(Khmel'nyts'kyy) | Kirovohrads'ka (Kirovohrad)|Luhans'ka(Luhans'k)|L' vivs'ka (L'  viv) | Mykolayivs'ka (Mykolayiv)|Odes'ka(Odesa) | Poltavs'ka (Poltava)|Avtonomna Respublika Krym|Rivnens'ka(Rivne) | Sevastopol'|Sums'ka(Sumy) | Ternopil's'ka(Ternopil')|Vinnyts' ka(Vinnytsya) | Volyns'ka (Luts'k) | Zakarpats'ka (Uzhhorod)|Zaporiz'ka(Zaporizhzhya) | Zhytomyrs'ka (Zhytomyr)\";\ncity_states[\"United Kingdom\"] = \"-----ENGLAND:-----|Barking/Dagenham|Barnet|Barnsley|Bath/North East Somerset|Bedfordshire|Bexley|Birmingham|Blackburn with Darwen|Blackpool|Bolton|Bournemouth|Bracknell Forest|Bradford|Brent|Brighton/Hove|City of Bristol|Bromley|Buckinghamshire|Bury|Calderdale|Cambridgeshire|Camden|Cheshire|Cornwall|Coventry|Croydon|Cumbria|Darlington|Derby|Derbyshire|Devon|Doncaster|Dorset|Dudley|Durham|Ealing|East Riding of Yorkshire|East Sussex|Enfield|Essex|Gateshead|Gloucestershire|Greenwich|Hackney|Halton|Hammersmith/Fulham|Hampshire|Haringey|Harrow|Hartlepool|Havering|Herefordshire|Hertfordshire|Hillingdon|Hounslow|Isle of Wight|Islington|Kensington/Chelsea|Kent|City of Kingston upon Hull|Kingston upon Thames|Kirklees|Knowsley|Lambeth|Lancashire|Leeds|Leicester|Leicestershire|Lewisham|Lincolnshire|Liverpool|City of London|Luton|Manchester|Medway|Merton|Middlesbrough|Milton Keynes|Newcastle upon Tyne|Newham|Norfolk|Northamptonshire|North East Lincolnshire|North Lincolnshire|North Somerset|North Tyneside|Northumberl/|North Yorkshire|Nottingham|Nottinghamshire|Oldham|Oxfordshire|Peterborough|Plymouth|Poole|Portsmouth|Reading|Redbridge|Redcar/Clevel/|Richmond upon Thames|Rochdale|Rotherham|Rutl/|Salford|Shropshire|S/well|Sefton|Sheffield|Slough|Solihull|Somerset|Southampton|Southend-on-Sea|South Gloucestershire|South Tyneside|Southwark|Staffordshire|St. Helens|Stockport|Stockton-on-Tees|Stoke-on-Trent|Suffolk|Sunderl/|Surrey|Sutton|Swindon|Tameside|Telford/Wrekin|Thurrock|Torbay|Tower Hamlets|Trafford|Wakefield|Walsall|Waltham Forest|W/sworth|Warrington|Warwickshire|West Berkshire|Westminster|West Sussex|Wigan|Wiltshire|Windsor/Maidenhead|Wirral|Wokingham|Wolverhampton|Worcestershire|York|-----NORTHERN IRELAND:-----|Antrim|County Antrim|Ards|Armagh|County Armagh|Ballymena|Ballymoney|Banbridge|Belfast|Carrickfergus|Castlereagh|Coleraine|Cookstown|Craigavon|Down|County Down|Dungannon|Fermanagh|County Fermanagh|Larne|Limavady|Lisburn|County Londonderry|Derry|Magherafelt|Moyle|Newry/Mourne|Newtownabbey|North Down|Omagh|Strabane|County Tyrone|-----SCOTLAND:-----|Aberdeen City|Aberdeenshire|Angus|Argyll/Bute|The Scottish Borders|Clackmannanshire|Dumfries/Galloway|Dundee City|East Ayrshire|East Dunbartonshire|East Lothian|East Renfrewshire|City of Edinburgh|Falkirk|Fife|Glasgow City|Highland|Inverclyde|Midlothian|Moray|North Ayrshire|North Lanarkshire|Orkney Islands|Perth/Kinross|Renfrewshire|Shetland Islands|South Ayrshire|South Lanarkshire|Stirling|West Dunbartonshire|Eilean Siar (Western Isles)|West Lothian|-----WALES-----:|Isle of Anglesey|Blaenau Gwent|Bridgend|Caerphilly|Cardiff|Ceredigion|Carmarthenshire|Conwy|Denbighshire|Flintshire|Gwynedd|Merthyr Tydfil|Monmouthshire|Neath Port Talbot|Newport|Pembrokeshire|Powys|Rhondda Cynon Taff|Swansea|Torfaen|The Vale of Glamorgan|Wrexham\";\ncity_states[\"Vatican City\"] = \"\"; //Islands\n\ncity_states[\"Arctic Ocean\"] = \"Franz Josef Land|Svalbard\";\ncity_states[\"Atlantic Ocean (North)\"] = \"Alderney|Azores|Baixo|Belle-Ile|Bermuda|Bioko|Block|Boa Vista|Borduy|Bugio|Canary Islands|Cape Breton|Cape Verde Islands|Channel Islands|Corvo|Deer Isle|Eysturoy|Faeroe Islands|Fago|Faial|Flores|Fuerteventura|Fugloy|Gomera|Graciosa|Gran Canaria|Grand Manan|Grande|Greenland|Guernsey|Hebrides|Herm|Hestur|Hierro|Iceland|Iles De La Madeleine|Ile de Noirmoutier|Ile de'Re | Ile d' Ol‚ron|Ile d'Yeu | Ilhas Desertas | Ireland | Isle au Haut | Isle of Lewis | Isle of Mull | Isle of Skye | Jersey | Kalsoy | Koltur | Kunoy | Lanzarote | La Palma | Litla Dimun | Long Island | Jan Mayen | Madeira Islands | Maio | Martha's Vineyard|Matinicus|Monhegan|Mount Desert|Mykines|Nantucket Island|Newfoundland|Nolsoy|Orkney Islands|Pico|Porto Santo|Prince Edward Island|St. Peter/St. Paul Rocks|St.-Pierre/Miquelon|Praia|Sable Island|Sal|Sandoy|Santo Antao|Santa Maria|Sao Jorge|Sao Miguel|Sao Nicolau|Sao Tiago|Sao Tome/Principe|Sao Vicente|Sark|Scilly Isles|Shetland Islands|Skuvoy|Stora Dimun|Streymoy|Sumba|Svinoy|Swans|Tenerife|Terceira|Uist Islands|Vagar|Viday|Vinalhaven\";\ncity_states[\"Atlantic Ocean (South)\"] = \"Amsterdam|Andaman Islands|Annobon|Ascension|Bouvet|Falkland Islands|Gough|Martin Vas Islands|Nightingale|St. Helena|Shag/Black Rocks|South Georgia|South Orkney Islands|South Sandwich Islands|Traversay|Trindade|Tristan da Cunha\";\ncity_states[\"Assorted\"] = \"Akimiski|Aland|Alcatraz|Apostle Islands|Baffin|Banka|Banks|Beaver|Belcher Islands|Belitung|Borneo|Bornholm|Brac|Coats|Cres|Devon|East Frisian Islands|Ellesmere|Fyn|Galveston|Gotland|Groote Eylandt|Hiiumaa|Hong Kong Island|Hong Kong SAR|Ile d'Anticosti | Ile d' Orleans|Isla de Ometepe|Isla Del Ray|Isle of Man|Isle of Wight|Isle Royale|Jutland|Key Largo|Key West|King William|Krek|Langeland|Lantau|Lolland|Lundy|Mackinac|Madeleine Islands|Manhattan Island|Manitoulin|Marsh|Matagorda|Melville|North Hero|Oland|Paracel Islands|Pelee|Prince Charles|Prince of Wales|Queen Elizabeth Islands|Saaremaa|Sjaelland|Somerset|Southhampton|South Hero|Spratley Islands|Sulawesi|Victoria|Washington|Wellesley Islands\";\ncity_states[\"Caribbean Sea\"] = \"Abaco (great)|Abaco (little)|Acklins|Andros|Anegada|Anguilla|Antigua|Aruba|Bahamas|Barbados|Barbuda|Bimini Islands|Bonaire|Caicos Islands|Cat|Cayman Brac|Cayman Islands|Cozumel|Crooked|Cuba|Curacao|Dominica|Exuma|Grand Bahama|Grand Cayman|Grand Turk|Greater Antilles|Great Inagua|Grenada|Guadeloupe|Hispaniola (Haiti/DOR)|Isla de Margarita|Isla Mujeres|Isla La Tortuga|Isle of Youth|Jamaica|Lesser Antilles|Little Cayman|Little Inagua|Long|Marie-Galante|Martinique|Mayaguana|Montserrat|Navassa|Nevis|New Providence|Providencia|Puerto Rico|Roatan|Rum Cay|St. Barts|St. Croix|St. Eustatius|St. John|St. Kitts|St. Lucia|St. Martin/Sint Maartan|St. Thomas|St Vincent and the Grenadines|Saba|San Blas Islands|San Salvador|San Andres|Santa Catilina (St. Catherine)|Tobago|Tortola|Trinidad|Virgin Gorda|West Indies\";\ncity_states[\"Greek Isles\"] = \"Aegina|Alonissos|Amorgos|Andros|Angistri|Astipalea|Carpathos|Cephalonia|Chios (Hios)|Corfu|Cos (Kos)|Crete (Kriti)|Cyclades Islands|Dodecanese Islands|Dokos|Eubaea (Evia)|Evia|Hydra|Ikaria|Ionian Islands|Ios|Ithaca|Kea|Kefalonia|Kefalos|Kalimnos|Kassos|Kithnos|Kos|Kythnos|Kythria|Lefkada|Lemnos|Leros|Lesvos|Leucas|Limnos|Lipsi|Los|Melos|Mykonos|Naxos|Nisyros|Paros|Patmos|Poros|Pothia|Rhodes (Rodos)|Salamina|Samos|Samothrace|Santorini|Serifos|Seriphos|Sifnos|Sikinos|Skiros|Skiathos|Skopelos|Skyros|Spetses|Sporades Islands|Syros|Tenos (Tinos)|Thassos|Tzia|Zakinthos|Zante\";\ncity_states[\"Indian Ocean\"] = \"Addu Atoll|Agalega Islands|Amsterdam|Andaman Islands|Anjouan (Nzwani)|Ari Atoll|Ashmore/Cartier Islands|Bali|Barrow|Bathurst|Bompoka|Cape Barren|Car Nicobar|Chagos Archipelago|Christmas|Comoros|Crozet Islands|Danger|Diego Garcia|Eagle Islands|Egmont Islands|Faadhippolhu Atoll|Felidhoo Atoll|Flinders|Goidhoo Atoll|Grand Comore (Njazidja)|Great Nicobar|Hadhdhunmathee|Heard|Huvadhoo Atoll|Ihavandhippolhu Atoll|Java|Kangaroo|Katchall|Keeling Islands (Cocos)|King|Kolhumadulu Atoll|Lakshadweep Islands|Little Andaman|Little Nicobar|Lower Andaman|Maalhosmadulu Atoll|Maamakunudhoo Atoll|Madagascar|Mahe|Maldives|Male'Atoll | Mauritius | Mayotte | McDonald Islands | Melville | Middle Andaman | Miladhunmafulu Atoll | Moheli(Mwali) | Molaku Atoll | Nancowry | Nelsons Island | Nias | Nicobar Islands | Nilandhoo Atoll | North Andaman | Peros Banhos | Phuket | Prince Edward Islands | Reunion | Rodrigues | St.Paul | Salomon Islands | Seychelles | Shag | Siberut | Simeulue | Sipura | Socotra | Sumatra | Sri Lanka | Tarasa Dwip | Tasmania | Thiladhunmathee Atoll | Three Brothers | Timor | Tromelin | Zanzibar \";\ncity_states[\"Mediterranean Sea\"] = \"Aeolian Islands|Alboran|Balearic Islands|Cabrera|Capraia|Capri|Corse (Corsica)|Cyprus|Elba|Formentera|Gozo|Ibiza (Ivisa)|Iles d'Hyeres | Jalitah | Lampedusa | Lipari Islands | Mallorca(Majorca) | Malta | Maltese Islands | Menorca(Minorca) | Pantelleria | Ponziane | Salina | Sant' Antioca|San Pietro|Sardinia (Sardegna)|Sicily (Sicilia)|Stromboli|Vulcano|Zembra\";\ncity_states[\"Oceania\"] = \"Abaiang|Admiralty Islands|Aitutaki|Alofi|Ambrym|American Samoa|Antipodes|Atafu Atoll|Atiu|Auckland Islands|Aunu'u | Austral Islands | Banaba | Bega | Bora Bora | Bougainville | Bounty Islands | Campbell | Chatham Islands | Choiseul | Cook Islands | Coral Sea Islands | Efate | Elao | Erromango | Espiritu Santo | ' Eua|Faioa|Fakaofo Atoll|Fatu Hiva|Fiji|French Polynesia|Funafuti Atoll|Futuna|Gambier Islands|Gau|Gilbert Islands|Gizo|Grand Terre|Great Barrier Reef|Guadacanal|Ha'apai Island Group | Hatutu | Hiva Oa | Horne Islands | Huahine | Isle of Pines | Kadavu | Karkar | Kioa | Kiribati | Kiritamati | Koro | Lakeba | Lau Group | Lifou | Line Islands | Loyalty Islands | Malaita | Malekula | Malolo | Mangaia | Manihiki | Manu'a Group|Manuae|Mare|Marquises Islands|Mata Utu|Matuku|Mauke|Maupiti|Melanesia|Mitiaro|Moala|Mohotani|Moorea|Nairai|Nanumea Atoll|Nassau|Nauru|Naviti|Nepean|New Britain|New Caledonia|New Georgia Islands|New Guinea|New Ireland|Niuafo'ou | Niuas Islands | Niuatoputapu | Niue | Niulakita Atoll | Nomuka Island Group | Norfolk Islands | Nukuaeta | Nukufetau Atoll | Nuku Hiva | Nukulaelae Atoll | Nukunono Atoll | Ofu | Olasega | Ono | Ouvea | Ovalau | Palmerston | Pangai | Penrhyn | Philip | Phoenix Islands | Pitcairn | Pitt Island | Polynesia | Pukapuka | Rabi | Raiatea | Rakahanga | Rangiroa | Rarotonga | Rotuma | Samao | San Cristobal | Santa Cruz Islands | Santa Isabel | Savai'i|Society Islands|Solomon Islands|Stewart|Suwarrow|Tabuaeran|Tahaa|Tahiti|Tahuata|Taiohae|Tanna|Tarawa|Tasmania|Tau|Taveuni|Tetiaroa|Tokelau|Tonga|Tongatapu|Totoya|Tuamotu Islands|Tubuai|Tupai|Tutuila|Tuvalu|Ua Huka|Ua Pou|Hiva Oa|Upolu|'Uta Vava'u|Uvea|Vaiaku|Vanua Balavu|Vanua Levu|Vanuatu|Vatulele|Vava'u Island Group | Vita Levu | Wallis Islands | Wallis and Futuna | Waya | Yasawa | Yasawa Group \";\ncity_states[\"Pacific Ocean (North)\"] = \"Aleutian Islands|Alexander Islands|Andreanof Islands|Babelthuap|Baker|Bikini|Bohol|Bonin Islands|Cabras|Caroline Islands|Cebu|Channel Islands (US)|Cheju Do|Chuuk|Diomede Islands|Guam|Hainan|Hawaii (big island)|Hawaiian Islands|Hokkaido|Honshu|Howland|Jaluit Atoll|Japan|Johnston Atoll|Kahoolawe|Kauai|Kodiak|Kosrae|Kwajalein Atoll|Kyushu|Lanai|Lifou|Loyalty Islands|Luzon|Maloelap Atoll|Majuro Atoll|Mare|Marshall Islands|Maui|Micronesia|Midway Islands|Mili Atoll|Mindanao|Mindoro|Molakai|Niihau|Near Islands|Negros|Northern Marianas|Nunivak|Oahu|Okinawa|Ostrov Sakhalin|Pagan|Palau|Palawan|Palmyra Atoll|Panay|Philippines|Pohnpei|Queen Charlotte Islands|Rat|Rongelap Atoll|St. Lawrence|St. Matthew|St. Paul|Saipan|Samar|San Clemente|San Miguel|San Nicolas|Santa Catalina|Santa Cruz|Santa Rosa|Shikoku|Taiwan|Tinian|Vancouver|Volcano Islands|Wake Island|Yap\";\ncity_states[\"Pacific Ocean (South)\"] = \"Easter|Galapogos Islands|Juan Fernandez Islands|Isla Espanola|Isla Fernandina|Isla Genovesa|Isla Isabella|Isla Marchena|Isla Pinta|Isla Puna|Isla San Cristobal|Isla San Salvador|Isla Santa Cruz|Isla Santa Maria|Robinson Crusoe|San Felix|Santa Clara\"; //Middle East\n\ncity_states[\"Afghanistan\"] = \"Kabul|Badakhshan|Badghis|Baghlan|Balkh|Bamian|Farah|Faryab|Ghazni|Ghowr|Helmand|Herat|Jowzjan|Kabol|Kandahar|Kapisa|Khowst|Konar|Kondoz|Laghman|Lowgar|Nangarhar|Nimruz|Nurestan|Oruzgan|Paktia|Paktika|Parvan|Samangan|Sar-e Pol|Takhar|Vardak|Zabol\";\ncity_states[\"Armenia\"] = \"Yerevan|Aragatsotn|Ararat|Armavir|Geghark'unik'|Kotayk' | Lorri | Shirak | Syunik'|Tavush|Vayots'Dzor \";\ncity_states[\"Azerbaijan\"] = \"Baku (Baki)|Abseron|Agcabadi|Agdam|Agdas|Agstafa|Agsu|Ali Bayramli|Astara|Balakan|Barda|Beylaqan|Bilasuvar|Cabrayil|Calilabad|Daskasan|Davaci|Fuzuli|Gadabay|Ganca|Goranboy|Goycay|Haciqabul|Imisli|Ismayilli|Kalbacar|Kurdamir|Lacin|Lankaran|Lankaran|Lerik|Masalli|Mingacevir|Naftalan|Naxcivan|Neftcala|Oguz|Qabala|Qax|Qazax|Qobustan|Quba|Qubadli|Qusar|Saatli|Sabirabad|Saki|Saki|Salyan|Samaxi|Samkir|Samux|Siyazan|Sumqayit|Susa|Susa|Tartar|Tovuz|Ucar|Xacmaz|Xankandi|Xanlar|Xizi|Xocali|Xocavand|Yardimli|Yevlax|Yevlax|Zangilan|Zaqatala|Zardab\";\ncity_states[\"Bahrain\"] = \"Manama|Al Hadd|Al Manamah|Al Mintaqah al Gharbiyah|Al Mintaqah al Wusta|Al Mintaqah ash Shamaliyah|Al Muharraq|Ar Rifa'wa al Mintaqah al Janubiyah | Jidd Hafs | Madinat Hamad | Madinat'Isa|Juzur Hawar|Sitrah\";\ncity_states[\"Cyprus\"] = \"Nicosia|Famagusta|Kyrenia|Larnaca|Limassol|Paphos\";\ncity_states[\"Iran\"] = \"Tehran|Ardabil|Azarbayjan-e Gharbi|Azarbayjan-e Sharqi|Bushehr|Chahar Mahall va Bakhtiari|Esfahan|Fars|Gilan|Golestan|Hamadan|Hormozgan|Ilam|Kerman|Kermanshah|Khorasan|Khuzestan|Kohkiluyeh va Buyer Ahmad|Kordestan|Lorestan|Markazi|Mazandaran|Qazvin|Qom|Semnan|Sistan va Baluchestan|Yazd|Zanjan\";\ncity_states[\"Iraq\"] = \"Baghdad|Al Anbar|Al Basrah|Al Muthanna|Al Qadisiyah|An Najaf|Arbil|As Sulaymaniyah|At Ta'mim | Babil | Dahuk | Dhi Qar | Diyala | Karbala'|Maysan|Ninawa|Salah ad Din|Wasit\";\ncity_states[\"Israel\"] = \"Jerusalem|Central|Haifa|Northern|Southern|Tel Aviv\";\ncity_states[\"Jordan\"] = \"Amman|Ajlun|Al 'Aqabah | Al Balqa'|Al Karak|Al Mafraq|At Tafilah|Az Zarqa | Irbid | Jarash | Ma'an|Madaba\";\ncity_states[\"Kuwait\"] = \"Kuwait|Al Ahmadi|Al Farwaniyah|Al 'Asimah | Al Jahra'|Hawalli\";\ncity_states[\"Kyrgyzstan\"] = \"Bishkek Shaary|Batken Oblasty|Chuy Oblasty (Bishkek)|Jalal-Abad Oblasty|Naryn Oblasty|Osh Oblasty|Talas Oblasty|Ysyk-Kol Oblasty (Karakol)\";\ncity_states[\"Lebanon\"] = \"Beirut|Beyrouth|Beqaa|Liban-Nord|Liban-Sud|Mont-Liban|Nabatiye\";\ncity_states[\"Oman\"] = \"Muscat|Ad Dakhiliyah|Al Batinah|Al Wusta|Ash Sharqiyah|Az Zahirah|Musandam|Zufar\";\ncity_states[\"Pakistan\"] = \"Islamabad|Balochistan|Federally Administered Tribal Areas|North-West Frontier Province|Punjab|Sindh\";\ncity_states[\"Qatar\"] = \"Doha|Ad Dawhah|Al Ghuwayriyah|Al Jumayliyah|Al Khawr|Al Wakrah|Ar Rayyan|Jarayan al Batinah|Madinat ash Shamal|Umm Salal\";\ncity_states[\"Saudi Arabia\"] = \"Riyadh|Al Bahah|Al Hudud ash Shamaliyah|Al Jawf|Al Madinah|Al Qasim|Ar Riyad|Ash Sharqiyah (Eastern Province)|'Asir | Ha'il|Jizan|Makkah|Najran|Tabuk\";\ncity_states[\"Syria\"] = \"Damascus|Al Hasakah|Al Ladhiqiyah|Al Qunaytirah|Ar Raqqah|As Suwayda' | Dar'a|Dayr az Zawr|Dimashq|Halab|Hamah|Hims|Idlib|Rif Dimashq|Tartus\";\ncity_states[\"Tajikistan\"] = \"Dushanbe|Viloyati Mukhtori Kuhistoni Badakhshon|Viloyati Khatlon|Viloyati Sughd\";\ncity_states[\"Turkey\"] = \"Ankara|Adana|Adiyaman|Afyon|Agri|Aksaray|Amasya|Antalya|Ardahan|Artvin|Aydin|Balikesir|Bartin|Batman|Bayburt|Bilecik|Bingol|Bitlis|Bolu|Burdur|Bursa|Canakkale|Cankiri|Corum|Denizli|Diyarbakir|Duzce|Edirne|Elazig|Erzincan|Erzurum|Eskisehir|Gaziantep|Giresun|Gumushane|Hakkari|Hatay|Icel|Igdir|Isparta|Istanbul|Izmir|Kahramanmaras|Karabuk|Karaman|Kars|Kastamonu|Kayseri|Kilis|Kirikkale|Kirklareli|Kirsehir|Kocaeli|Konya|Kutahya|Malatya|Manisa|Mardin|Mugla|Mus|Nevsehir|Nigde|Ordu|Osmaniye|Rize|Sakarya|Samsun|Sanliurfa|Siirt|Sinop|Sirnak|Sivas|Tekirdag|Tokat|Trabzon|Tunceli|Usak|Van|Yalova|Yozgat|Zonguldak  Buri|Sisaket|Songkhla|Sukhothai|Suphan Buri|Surat Thani|Surin|Tak|Trang|Trat|Ubon Ratchathani|Udon Thani|Uthai Thani|Uttaradit|Yala|Yasothon\";\ncity_states[\"Turkmenistan\"] = \"Ashgabat|Ahal Welayaty|Balkan Welayaty|Dasoguz Welayaty|Labap Welayaty|Mary Welayaty\";\ncity_states[\"United Arab Emirates\"] = \"Abu Dhabi|Abu Zaby (Abu Dhabi)|'Ajman | Al Fujayrah | Ash Shariqah(Sharjah) | Dubayy(Dubai) | Ra's al Khaymah|Umm al Qaywayn\";\ncity_states[\"Uzbekistan\"] = \"Tashkent (Toshkent)|Andijon Viloyati|Buxoro Viloyati|Farg'ona Viloyati | Jizzax Viloyati | Namangan Viloyati | Navoiy Viloyati | Qashqadaryo Viloyati(Qarshi) | Qaraqalpog'iston Respublikasi|Samarqand Viloyati|Sirdaryo Viloyati (Guliston)|Surxondaryo Viloyati (Termiz)|Toshkent Shahri|Toshkent Viloyati|Xorazm Viloyati (Urganch)\";\ncity_states[\"Yemen\"] = \"Sanaa|Abyan|'Adan | Al Bayda'|Al Hudaydah|Al Jawf|Al Mahrah|Al Mahwit|Dhamar|Hadramawt|Hajjah|Ibb|Lahij|Ma'rib | Sa'dah|San'a'|Shabwah|Ta'izz \"; //North America\n\ncity_states[\"Bermuda\"] = \"Hamilton|Devonshire|Hamilton|Hamilton|Paget|Pembroke|Saint George|Saint George's | Sandys | Smith's|Southampton|Warwick\";\ncity_states[\"Canada\"] = \"Ottawa|Alberta|British Columbia|Manitoba|New Brunswick|Newfoundland and Labrador|Northwest Territories|Nova Scotia|Nunavut|Ontario|Prince Edward Island|Quebec|Saskatchewan|Yukon Territory\";\ncity_states[\"Caribbean\"] = \"\";\ncity_states[\"Greenland\"] = \"Nuuk (Godthab)|Avannaa (Nordgronland)|Tunu (Ostgronland)|Kitaa (Vestgronland)\";\ncity_states[\"Mexico\"] = \"Mexico (Distrito Federal)|Aguascalientes|Baja California|Baja California Sur|Campeche|Chiapas|Chihuahua|Coahuila de Zaragoza|Colima|Durango|Guanajuato|Guerrero|Hidalgo|Jalisco|Michoacan de Ocampo|Morelos|Nayarit|Nuevo Leon|Oaxaca|Puebla|Queretaro de Arteaga|Quintana Roo|San Luis Potosi|Sinaloa|Sonora|Tabasco|Tamaulipas|Tlaxcala|Veracruz-Llave|Yucatan|Zacatecas\";\ncity_states[\"United States\"] = \"Washington DC|Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Georgia|Kentucky|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusets|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming\"; //South America\n\ncity_states[\"Argentina\"] = \"Buenos Aires|Catamarca|Chaco|Chubut|Cordoba|Corrientes|Entre Rios|Formosa|Jujuy|La Pampa|La Rioja|Mendoza|Misiones|Neuquen|Rio Negro|Salta|San Juan|San Luis|Santa Cruz|Santa Fe|Santiago del Estero|Tucuman\";\ncity_states[\"Bolivia\"] = \"La Paz|Sucre|Chuquisaca|Cochabamba|Beni|Oruro|Pando|Potosi|Santa Cruz|Tarija\";\ncity_states[\"Brazil\"] = \"Brasilia|Acre|Alagoas|Amapa|Amazonas|Bahia|Ceara|Distrito Federal|Espirito Santo|Goias|Maranhao|Mato Grosso|Mato Grosso do Sul|Minas Gerais|Para|Paraiba|Parana|Pernambuco|Piaui|Rio de Janeiro|Rio Grande do Norte|Rio Grande do Sul|Rondonia|Roraima|Santa Catarina|Sao Paulo|Sergipe|Tocantins\";\ncity_states[\"Chile\"] = \"Santiago|Antofagasta|Araucania|Atacama|Bio-Bio|Coquimbo|Los Lagos|Maule|Tarapaca|Valparaiso\";\ncity_states[\"Colombia\"] = \"Bogota|Amazonas|Antioquia|Arauca|Atlantico|Bolivar|Boyaca|Caldas|Caqueta|Casanare|Cauca|Cesar|Choco|Cordoba|Cundinamarca|Guainia|Guaviare|Huila|La Guajira|Magdalena|Meta|Narino|Norte de Santander|Putumayo|Quindio|Risaralda|San Andres/Providencia|Santander|Sucre|Tolima|Valle del Cauca|Vaupes|Vichada\";\ncity_states[\"Ecuador\"] = \"Quito|Azuay|Bolivar|Canar|Carchi|Chimborazo|Cotopaxi|El Oro|Esmeraldas|Galapagos|Guayas|Imbabura|Loja|Los Rios|Manabi|Morona-Santiago|Napo|Orellana|Pastaza|Pichincha|Sucumbios|Tungurahua|Zamora-Chinchipe\";\ncity_states[\"Guyana\"] = \"Georgetown|Barima-Waini|Cuyuni-Mazaruni|Demerara-Mahaica|East Berbice-Corentyne|Essequibo Islands-West Demerara|Mahaica-Berbice|Pomeroon-Supenaam|Potaro-Siparuni|Upper Demerara-Berbice|Upper Takutu-Upper Essequibo\";\ncity_states[\"Paraguay\"] = \"Asuncion|Alto Paraguay|Alto Parana|Amambay|Boqueron|Caaguazu|Caazapa|Canindeyu|Central|Concepcion|Cordillera|Guaira|Itapua|Misiones|Neembucu|Paraguari|Presidente Hayes|San Pedro\";\ncity_states[\"Peru\"] = \"Lima|Amazonas|Ancash|Apurimac|Arequipa|Ayacucho|Cajamarca|Callao|Cusco|Huancavelica|Huanuco|Ica|Junin|La Libertad|Lambayeque|Loreto|Madre de Dios|Moquegua|Pasco|Piura|Puno|San Martin|Tacna|Tumbes|Ucayali\";\ncity_states[\"Suriname\"] = \"Paramaribo|Brokopondo|Commewijne|Coronie|Marowijne|Nickerie|Para|Saramacca|Sipaliwini|Wanica\";\ncity_states[\"Uruguay\"] = \"Montevideo|Artigas|Canelones|Cerro Largo|Colonia|Durazno|Flores|Florida|Lavalleja|Maldonado|Paysandu|Rio Negro|Rivera|Rocha|Salto|San Jose|Soriano|Tacuarembo|Treinta y Tres\";\ncity_states[\"Venezuela\"] = \"Caracas|Amazonas|Anzoategui|Apure|Aragua|Barinas|Bolivar|Carabobo|Cojedes|Delta Amacuro|Dependencias Federales|Distrito Federal|Falcon|Guarico|Lara|Merida|Miranda|Monagas|Nueva Esparta|Portuguesa|Sucre|Tachira|Trujillo|Vargas|Yaracuy|Zulia\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./services/extra/countrySelectorOption.js\n");

/***/ }),

/***/ "./services/extra/getCountryName.js":
/*!******************************************!*\
  !*** ./services/extra/getCountryName.js ***!
  \******************************************/
/*! exports provided: getCountryName, getCountryCode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCountryName\", function() { return getCountryName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCountryCode\", function() { return getCountryCode; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"./services/extra/index.js\");\n\nconst getCountryName = code => {\n  let country = ___WEBPACK_IMPORTED_MODULE_0__[\"AllCountryObj\"].map(el => {\n    if (el.code === code) {\n      return el.name;\n    }\n\n    return null;\n  });\n  return country.join(\"\");\n};\nconst getCountryCode = countryName => {\n  let country = ___WEBPACK_IMPORTED_MODULE_0__[\"AllCountryObj\"].map(el => {\n    if (countryName) {\n      if (el.name.trim().toLowerCase() === countryName.trim().toLowerCase()) {\n        return el.code;\n      }\n    }\n\n    return null;\n  });\n  return country.join(\"\");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zZXJ2aWNlcy9leHRyYS9nZXRDb3VudHJ5TmFtZS5qcz9kMTk5Il0sIm5hbWVzIjpbImdldENvdW50cnlOYW1lIiwiY29kZSIsImNvdW50cnkiLCJBbGxDb3VudHJ5T2JqIiwibWFwIiwiZWwiLCJuYW1lIiwiam9pbiIsImdldENvdW50cnlDb2RlIiwiY291bnRyeU5hbWUiLCJ0cmltIiwidG9Mb3dlckNhc2UiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDTyxNQUFNQSxjQUFjLEdBQUdDLElBQUksSUFBSTtBQUNwQyxNQUFJQyxPQUFPLEdBQUdDLCtDQUFhLENBQUNDLEdBQWQsQ0FBa0JDLEVBQUUsSUFBSTtBQUNwQyxRQUFJQSxFQUFFLENBQUNKLElBQUgsS0FBWUEsSUFBaEIsRUFBc0I7QUFDcEIsYUFBT0ksRUFBRSxDQUFDQyxJQUFWO0FBQ0Q7O0FBRUQsV0FBTyxJQUFQO0FBQ0QsR0FOYSxDQUFkO0FBT0EsU0FBT0osT0FBTyxDQUFDSyxJQUFSLENBQWEsRUFBYixDQUFQO0FBQ0QsQ0FUTTtBQVdBLE1BQU1DLGNBQWMsR0FBR0MsV0FBVyxJQUFJO0FBQzNDLE1BQUlQLE9BQU8sR0FBR0MsK0NBQWEsQ0FBQ0MsR0FBZCxDQUFrQkMsRUFBRSxJQUFJO0FBQ3BDLFFBQUdJLFdBQUgsRUFBZTtBQUNiLFVBQUlKLEVBQUUsQ0FBQ0MsSUFBSCxDQUFRSSxJQUFSLEdBQWVDLFdBQWYsT0FBaUNGLFdBQVcsQ0FBQ0MsSUFBWixHQUFtQkMsV0FBbkIsRUFBckMsRUFBdUU7QUFDckUsZUFBT04sRUFBRSxDQUFDSixJQUFWO0FBQ0Q7QUFDRjs7QUFFRCxXQUFPLElBQVA7QUFDRCxHQVJhLENBQWQ7QUFTQSxTQUFPQyxPQUFPLENBQUNLLElBQVIsQ0FBYSxFQUFiLENBQVA7QUFDRCxDQVhNIiwiZmlsZSI6Ii4vc2VydmljZXMvZXh0cmEvZ2V0Q291bnRyeU5hbWUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBbGxDb3VudHJ5T2JqIH0gZnJvbSBcIi4vXCI7XG5leHBvcnQgY29uc3QgZ2V0Q291bnRyeU5hbWUgPSBjb2RlID0+IHtcbiAgbGV0IGNvdW50cnkgPSBBbGxDb3VudHJ5T2JqLm1hcChlbCA9PiB7XG4gICAgaWYgKGVsLmNvZGUgPT09IGNvZGUpIHtcbiAgICAgIHJldHVybiBlbC5uYW1lO1xuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9KTtcbiAgcmV0dXJuIGNvdW50cnkuam9pbihcIlwiKTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRDb3VudHJ5Q29kZSA9IGNvdW50cnlOYW1lID0+IHtcbiAgbGV0IGNvdW50cnkgPSBBbGxDb3VudHJ5T2JqLm1hcChlbCA9PiB7XG4gICAgaWYoY291bnRyeU5hbWUpe1xuICAgICAgaWYgKGVsLm5hbWUudHJpbSgpLnRvTG93ZXJDYXNlKCkgPT09IGNvdW50cnlOYW1lLnRyaW0oKS50b0xvd2VyQ2FzZSgpKSB7XG4gICAgICAgIHJldHVybiBlbC5jb2RlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9KTtcbiAgcmV0dXJuIGNvdW50cnkuam9pbihcIlwiKTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./services/extra/getCountryName.js\n");

/***/ }),

/***/ "./services/extra/index.js":
/*!*********************************!*\
  !*** ./services/extra/index.js ***!
  \*********************************/
/*! exports provided: AllCountryObj, CountryCodes, getCountryName, getCountryCode, required, email, fieldValidation, getWishList, addToWhisList, isProductInWishList, removeFromWhisList, toggleWishListItem, getItemTotal, returnSubTotal, returnUnSubscribeTotal, getTotalWeight, getTotalVolume, getTotalVariation, variablePriceSet, changeCartItemVariation, verifyProduct, addItem, setSlugInCart, modifyProduct, removeItem, getPageContent, getContinentName, encodeUrlFn, filteredAttr, removeDuplicateObjAr, findByMatchingProperties, findByMatchingProperties2, getBasicPrice, directAddToCart, getAttrListing, getSizes, getImagePath, getFeaturedProduct, getVisibleProducts, applyVariationFilter, getCategoraiesProducts, getVisibleCategory, getProductsByCategory, getMatchCategory, generateProductSlug, addSlugToProduct */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _allCountry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./allCountry */ \"./services/extra/allCountry.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AllCountryObj\", function() { return _allCountry__WEBPACK_IMPORTED_MODULE_0__[\"AllCountryObj\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CountryCodes\", function() { return _allCountry__WEBPACK_IMPORTED_MODULE_0__[\"CountryCodes\"]; });\n\n/* harmony import */ var _getCountryName__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getCountryName */ \"./services/extra/getCountryName.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getCountryName\", function() { return _getCountryName__WEBPACK_IMPORTED_MODULE_1__[\"getCountryName\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getCountryCode\", function() { return _getCountryName__WEBPACK_IMPORTED_MODULE_1__[\"getCountryCode\"]; });\n\n/* harmony import */ var _validations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validations */ \"./services/extra/validations.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"required\", function() { return _validations__WEBPACK_IMPORTED_MODULE_2__[\"required\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"email\", function() { return _validations__WEBPACK_IMPORTED_MODULE_2__[\"email\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fieldValidation\", function() { return _validations__WEBPACK_IMPORTED_MODULE_2__[\"fieldValidation\"]; });\n\n/* harmony import */ var _wishListHelpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./wishListHelpers */ \"./services/extra/wishListHelpers.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getWishList\", function() { return _wishListHelpers__WEBPACK_IMPORTED_MODULE_3__[\"getWishList\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"addToWhisList\", function() { return _wishListHelpers__WEBPACK_IMPORTED_MODULE_3__[\"addToWhisList\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isProductInWishList\", function() { return _wishListHelpers__WEBPACK_IMPORTED_MODULE_3__[\"isProductInWishList\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"removeFromWhisList\", function() { return _wishListHelpers__WEBPACK_IMPORTED_MODULE_3__[\"removeFromWhisList\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"toggleWishListItem\", function() { return _wishListHelpers__WEBPACK_IMPORTED_MODULE_3__[\"toggleWishListItem\"]; });\n\n/* harmony import */ var _cartHealpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cartHealpers */ \"./services/extra/cartHealpers.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getItemTotal\", function() { return _cartHealpers__WEBPACK_IMPORTED_MODULE_4__[\"getItemTotal\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"returnSubTotal\", function() { return _cartHealpers__WEBPACK_IMPORTED_MODULE_4__[\"returnSubTotal\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"returnUnSubscribeTotal\", function() { return _cartHealpers__WEBPACK_IMPORTED_MODULE_4__[\"returnUnSubscribeTotal\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getTotalWeight\", function() { return _cartHealpers__WEBPACK_IMPORTED_MODULE_4__[\"getTotalWeight\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getTotalVolume\", function() { return _cartHealpers__WEBPACK_IMPORTED_MODULE_4__[\"getTotalVolume\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getTotalVariation\", function() { return _cartHealpers__WEBPACK_IMPORTED_MODULE_4__[\"getTotalVariation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"variablePriceSet\", function() { return _cartHealpers__WEBPACK_IMPORTED_MODULE_4__[\"variablePriceSet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"changeCartItemVariation\", function() { return _cartHealpers__WEBPACK_IMPORTED_MODULE_4__[\"changeCartItemVariation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"verifyProduct\", function() { return _cartHealpers__WEBPACK_IMPORTED_MODULE_4__[\"verifyProduct\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"addItem\", function() { return _cartHealpers__WEBPACK_IMPORTED_MODULE_4__[\"addItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"setSlugInCart\", function() { return _cartHealpers__WEBPACK_IMPORTED_MODULE_4__[\"setSlugInCart\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"modifyProduct\", function() { return _cartHealpers__WEBPACK_IMPORTED_MODULE_4__[\"modifyProduct\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"removeItem\", function() { return _cartHealpers__WEBPACK_IMPORTED_MODULE_4__[\"removeItem\"]; });\n\n/* harmony import */ var _pageHelpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pageHelpers */ \"./services/extra/pageHelpers.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getPageContent\", function() { return _pageHelpers__WEBPACK_IMPORTED_MODULE_5__[\"getPageContent\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getContinentName\", function() { return _pageHelpers__WEBPACK_IMPORTED_MODULE_5__[\"getContinentName\"]; });\n\n/* harmony import */ var _productHelpers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./productHelpers */ \"./services/extra/productHelpers.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"encodeUrlFn\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"encodeUrlFn\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"filteredAttr\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"filteredAttr\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"removeDuplicateObjAr\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"removeDuplicateObjAr\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findByMatchingProperties\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"findByMatchingProperties\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findByMatchingProperties2\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"findByMatchingProperties2\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getBasicPrice\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"getBasicPrice\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"directAddToCart\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"directAddToCart\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getAttrListing\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"getAttrListing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getSizes\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"getSizes\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getImagePath\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"getImagePath\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getFeaturedProduct\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"getFeaturedProduct\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getVisibleProducts\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"getVisibleProducts\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"applyVariationFilter\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"applyVariationFilter\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getCategoraiesProducts\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"getCategoraiesProducts\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getVisibleCategory\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"getVisibleCategory\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getProductsByCategory\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"getProductsByCategory\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getMatchCategory\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"getMatchCategory\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"generateProductSlug\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"generateProductSlug\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"addSlugToProduct\", function() { return _productHelpers__WEBPACK_IMPORTED_MODULE_6__[\"addSlugToProduct\"]; });\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zZXJ2aWNlcy9leHRyYS9pbmRleC5qcz9jNDRmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwiZmlsZSI6Ii4vc2VydmljZXMvZXh0cmEvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9hbGxDb3VudHJ5XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9nZXRDb3VudHJ5TmFtZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vdmFsaWRhdGlvbnNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3dpc2hMaXN0SGVscGVyc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vY2FydEhlYWxwZXJzXCI7XG5cbmV4cG9ydCAqIGZyb20gXCIuL3BhZ2VIZWxwZXJzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wcm9kdWN0SGVscGVyc1wiO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./services/extra/index.js\n");

/***/ }),

/***/ "./services/extra/pageHelpers.js":
/*!***************************************!*\
  !*** ./services/extra/pageHelpers.js ***!
  \***************************************/
/*! exports provided: getPageContent, getContinentName */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPageContent\", function() { return getPageContent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getContinentName\", function() { return getContinentName; });\n/* harmony import */ var _countrySelectorOption__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./countrySelectorOption */ \"./services/extra/countrySelectorOption.js\");\n\nconst getPageContent = (array = [], cnt = \"North America\", altCnt = \"North America\", altCnt1 = \"South America\") => {\n  const res1 = array.find(el => {\n    return el.continent.includes(cnt);\n  });\n\n  if (res1) {\n    return res1;\n  }\n\n  const res2 = array.find(el => {\n    return el.continent.includes(altCnt) || el.continent.includes(altCnt1);\n  });\n\n  if (res2) {\n    return res2;\n  }\n\n  return array[0];\n};\nconst getContinentName = countryName => {\n  let continentName = null;\n  Object.values(_countrySelectorOption__WEBPACK_IMPORTED_MODULE_0__[\"countries\"]).map((el, index) => {\n    const arr = el.split(\"|\");\n\n    if (arr.some(ctr => ctr === countryName)) {\n      continentName = Object.keys(_countrySelectorOption__WEBPACK_IMPORTED_MODULE_0__[\"countries\"])[index];\n    }\n\n    return null;\n  });\n  return continentName;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zZXJ2aWNlcy9leHRyYS9wYWdlSGVscGVycy5qcz83OGFlIl0sIm5hbWVzIjpbImdldFBhZ2VDb250ZW50IiwiYXJyYXkiLCJjbnQiLCJhbHRDbnQiLCJhbHRDbnQxIiwicmVzMSIsImZpbmQiLCJlbCIsImNvbnRpbmVudCIsImluY2x1ZGVzIiwicmVzMiIsImdldENvbnRpbmVudE5hbWUiLCJjb3VudHJ5TmFtZSIsImNvbnRpbmVudE5hbWUiLCJPYmplY3QiLCJ2YWx1ZXMiLCJjb3VudHJpZXMiLCJtYXAiLCJpbmRleCIsImFyciIsInNwbGl0Iiwic29tZSIsImN0ciIsImtleXMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDTyxNQUFNQSxjQUFjLEdBQUcsQ0FDNUJDLEtBQUssR0FBRyxFQURvQixFQUU1QkMsR0FBRyxHQUFHLGVBRnNCLEVBRzVCQyxNQUFNLEdBQUcsZUFIbUIsRUFJNUJDLE9BQU8sR0FBRyxlQUprQixLQUt6QjtBQUNILFFBQU1DLElBQUksR0FBR0osS0FBSyxDQUFDSyxJQUFOLENBQVdDLEVBQUUsSUFBSTtBQUM1QixXQUFPQSxFQUFFLENBQUNDLFNBQUgsQ0FBYUMsUUFBYixDQUFzQlAsR0FBdEIsQ0FBUDtBQUNELEdBRlksQ0FBYjs7QUFHQSxNQUFJRyxJQUFKLEVBQVU7QUFDUixXQUFPQSxJQUFQO0FBQ0Q7O0FBQ0QsUUFBTUssSUFBSSxHQUFHVCxLQUFLLENBQUNLLElBQU4sQ0FBV0MsRUFBRSxJQUFJO0FBQzVCLFdBQU9BLEVBQUUsQ0FBQ0MsU0FBSCxDQUFhQyxRQUFiLENBQXNCTixNQUF0QixLQUFpQ0ksRUFBRSxDQUFDQyxTQUFILENBQWFDLFFBQWIsQ0FBc0JMLE9BQXRCLENBQXhDO0FBQ0QsR0FGWSxDQUFiOztBQUdBLE1BQUlNLElBQUosRUFBVTtBQUNSLFdBQU9BLElBQVA7QUFDRDs7QUFDRCxTQUFPVCxLQUFLLENBQUMsQ0FBRCxDQUFaO0FBQ0QsQ0FuQk07QUFxQkEsTUFBTVUsZ0JBQWdCLEdBQUdDLFdBQVcsSUFBSTtBQUM3QyxNQUFJQyxhQUFhLEdBQUcsSUFBcEI7QUFDQUMsUUFBTSxDQUFDQyxNQUFQLENBQWNDLGdFQUFkLEVBQXlCQyxHQUF6QixDQUE2QixDQUFDVixFQUFELEVBQUtXLEtBQUwsS0FBZTtBQUMxQyxVQUFNQyxHQUFHLEdBQUdaLEVBQUUsQ0FBQ2EsS0FBSCxDQUFTLEdBQVQsQ0FBWjs7QUFDQSxRQUFJRCxHQUFHLENBQUNFLElBQUosQ0FBU0MsR0FBRyxJQUFJQSxHQUFHLEtBQUtWLFdBQXhCLENBQUosRUFBMEM7QUFDeENDLG1CQUFhLEdBQUdDLE1BQU0sQ0FBQ1MsSUFBUCxDQUFZUCxnRUFBWixFQUF1QkUsS0FBdkIsQ0FBaEI7QUFDRDs7QUFDRCxXQUFPLElBQVA7QUFDRCxHQU5EO0FBT0EsU0FBT0wsYUFBUDtBQUNELENBVk0iLCJmaWxlIjoiLi9zZXJ2aWNlcy9leHRyYS9wYWdlSGVscGVycy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvdW50cmllcyB9IGZyb20gXCIuL2NvdW50cnlTZWxlY3Rvck9wdGlvblwiO1xuZXhwb3J0IGNvbnN0IGdldFBhZ2VDb250ZW50ID0gKFxuICBhcnJheSA9IFtdLFxuICBjbnQgPSBcIk5vcnRoIEFtZXJpY2FcIixcbiAgYWx0Q250ID0gXCJOb3J0aCBBbWVyaWNhXCIsXG4gIGFsdENudDEgPSBcIlNvdXRoIEFtZXJpY2FcIlxuKSA9PiB7XG4gIGNvbnN0IHJlczEgPSBhcnJheS5maW5kKGVsID0+IHtcbiAgICByZXR1cm4gZWwuY29udGluZW50LmluY2x1ZGVzKGNudCk7XG4gIH0pO1xuICBpZiAocmVzMSkge1xuICAgIHJldHVybiByZXMxO1xuICB9XG4gIGNvbnN0IHJlczIgPSBhcnJheS5maW5kKGVsID0+IHtcbiAgICByZXR1cm4gZWwuY29udGluZW50LmluY2x1ZGVzKGFsdENudCkgfHwgZWwuY29udGluZW50LmluY2x1ZGVzKGFsdENudDEpO1xuICB9KTtcbiAgaWYgKHJlczIpIHtcbiAgICByZXR1cm4gcmVzMjtcbiAgfVxuICByZXR1cm4gYXJyYXlbMF07XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Q29udGluZW50TmFtZSA9IGNvdW50cnlOYW1lID0+IHtcbiAgbGV0IGNvbnRpbmVudE5hbWUgPSBudWxsO1xuICBPYmplY3QudmFsdWVzKGNvdW50cmllcykubWFwKChlbCwgaW5kZXgpID0+IHtcbiAgICBjb25zdCBhcnIgPSBlbC5zcGxpdChcInxcIik7XG4gICAgaWYgKGFyci5zb21lKGN0ciA9PiBjdHIgPT09IGNvdW50cnlOYW1lKSkge1xuICAgICAgY29udGluZW50TmFtZSA9IE9iamVjdC5rZXlzKGNvdW50cmllcylbaW5kZXhdO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfSk7XG4gIHJldHVybiBjb250aW5lbnROYW1lO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./services/extra/pageHelpers.js\n");

/***/ }),

/***/ "./services/extra/productHelpers.js":
/*!******************************************!*\
  !*** ./services/extra/productHelpers.js ***!
  \******************************************/
/*! exports provided: encodeUrlFn, filteredAttr, removeDuplicateObjAr, findByMatchingProperties, findByMatchingProperties2, getBasicPrice, directAddToCart, getAttrListing, getSizes, getImagePath, getFeaturedProduct, getVisibleProducts, applyVariationFilter, getCategoraiesProducts, getVisibleCategory, getProductsByCategory, getMatchCategory, generateProductSlug, addSlugToProduct */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeUrlFn\", function() { return encodeUrlFn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"filteredAttr\", function() { return filteredAttr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeDuplicateObjAr\", function() { return removeDuplicateObjAr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findByMatchingProperties\", function() { return findByMatchingProperties; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findByMatchingProperties2\", function() { return findByMatchingProperties2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBasicPrice\", function() { return getBasicPrice; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"directAddToCart\", function() { return directAddToCart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAttrListing\", function() { return getAttrListing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSizes\", function() { return getSizes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getImagePath\", function() { return getImagePath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFeaturedProduct\", function() { return getFeaturedProduct; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getVisibleProducts\", function() { return getVisibleProducts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applyVariationFilter\", function() { return applyVariationFilter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCategoraiesProducts\", function() { return getCategoraiesProducts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getVisibleCategory\", function() { return getVisibleCategory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getProductsByCategory\", function() { return getProductsByCategory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMatchCategory\", function() { return getMatchCategory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateProductSlug\", function() { return generateProductSlug; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addSlugToProduct\", function() { return addSlugToProduct; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"./services/extra/index.js\");\n/* harmony import */ var _cartHealpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cartHealpers */ \"./services/extra/cartHealpers.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n // import { encodeUrlFn } from \"../../components\";\n\nconst encodeUrlFn = url => url.replace(/-/g, \"_\").replace(/ /g, \"-\");\nconst filteredAttr = (variation, attr) => {\n  const attrX = variation.map(el => {\n    const {\n      sale_price,\n      sku,\n      bar,\n      regular_price\n    } = el,\n          rest = _objectWithoutProperties(el, [\"sale_price\", \"sku\", \"bar\", \"regular_price\"]);\n\n    return _objectSpread({}, rest);\n  });\n  const attrY = attrX.filter(el => Object.keys(el).length === attr.length);\n  const attrZ = removeDuplicateObjAr(attrY);\n  return attrZ;\n};\nconst removeDuplicateObjAr = arr => arr.reduce((r, i) => !r.some(j => Object.keys(i).length === Object.keys(j).length && !Object.keys(i).some(k => i[k] !== j[k])) ? [...r, i] : r, []);\nconst findByMatchingProperties = (set, properties) => set.filter(function (entry) {\n  return Object.keys(properties).every(function (key) {\n    return entry[properties[key].names] === properties[key].values;\n  });\n});\nconst findByMatchingProperties2 = (set, properties) => set.filter(function (entry) {\n  return Object.keys(properties).every(function (key) {\n    return entry[key] === properties[key];\n  });\n});\nconst getBasicPrice = product => {\n  const {\n    verifiedAttr,\n    variation,\n    combo,\n    producttype\n  } = product;\n\n  if (combo || producttype !== \"variable\") {\n    return {\n      regular_price: product.dregularprice,\n      sale_price: product.dsaleprice\n    };\n  }\n\n  if (verifiedAttr) {\n    if (verifiedAttr.constructor === Array) {\n      if (verifiedAttr.length > 0) {\n        const findItem = variation.find(el => {\n          const keyList = Object.keys(verifiedAttr[0]);\n          const flag = keyList.every(elx => el[elx]);\n          return flag;\n        });\n\n        if (findItem) {\n          const {\n            regular_price,\n            sale_price\n          } = findItem;\n          return {\n            regular_price,\n            sale_price\n          };\n        }\n      }\n    }\n  }\n};\nconst directAddToCart = product => {\n  const {\n    verifiedAttr\n  } = product;\n  const arr = verifiedAttr && verifiedAttr.constructor === Array ? verifiedAttr.map(el => {\n    const keys = Object.keys(el);\n    return keys.map(elx => {\n      return {\n        [elx]: {\n          label: el[elx],\n          value: el[elx]\n        }\n      };\n    });\n  }) : []; // const nulledArr =\n  //   verifiedAttr && verifiedAttr.constructor === Array\n  //     ? verifiedAttr.map(el => {\n  //         const keys = Object.keys(el);\n  //         return keys.map(elx => {\n  //           return {\n  //             [elx]: {\n  //               label: null,\n  //               value: null\n  //             }\n  //           };\n  //         });\n  //       })\n  //     : [];\n\n  const obj = arr.map(el => {\n    return el.reduce((a, b) => {\n      return _objectSpread(_objectSpread({}, a), b);\n    }, {});\n  }); // const nulledObj = nulledArr.map(el => {\n  //   return el.reduce((a, b) => {\n  //     return { ...a, ...b };\n  //   }, {});\n  // });\n\n  const newVariation = obj && obj.length ? _objectSpread({}, obj[0]) : {}; // const nulledVariation =\n  //   nulledObj && nulledObj.length\n  //     ? {\n  //         ...nulledObj[0]\n  //       }\n  //     : {};\n  // console.log({\n  //   newVariation,\n  //   product: {\n  //     ...product,\n  //     ...newVariation,\n  //   }\n  // })\n  // return {\n  //   ...product,\n  //   ...nulledVariation,\n  //   isNull: true,\n  //   qty: {\n  //     label: \"1\",\n  //     value: \"1\",\n  //   }\n  // }\n\n  return Object(_cartHealpers__WEBPACK_IMPORTED_MODULE_1__[\"variablePriceSet\"])(_objectSpread(_objectSpread(_objectSpread({}, product), newVariation), {}, {\n    qty: 1\n  }));\n};\nconst getAttrListing = (attr = []) => attr.length > 0 ? Object.keys(attr[0]).map(el => ({\n  names: el,\n  values: [...new Set(attr.map(elx => elx[el]))]\n})) : [];\nconst getSizes = product => {\n  const {\n    combo,\n    attributes\n  } = product;\n\n  if (combo !== true) {\n    const size = attributes.find(el => el.names === \"size\");\n    if (size) if (typeof size.values === \"function\") return size.values;\n  }\n\n  return [];\n};\nconst getImagePath = product => {\n  if (product.productid) {\n    if (product.productid.featurefilepath) return product.productid.featurefilepath;\n  }\n\n  if (product.featureimage) return product.featureimage;\n  if (product.galleryimgdetails) return product.galleryimgdetails[0];\n};\nconst getFeaturedProduct = ({\n  products,\n  countryCode = \"US\"\n}) => {\n  const filterProduct = getVisibleProducts({\n    products,\n    countryCode\n  }).filter(el => {\n    if (!el) return false;\n    if (el.featured !== true) return false;\n    return true;\n  });\n  return filterProduct;\n};\nconst getVisibleProducts = ({\n  products,\n  countryCode = \"US\"\n}) => {\n  const countryName = Object(___WEBPACK_IMPORTED_MODULE_0__[\"getCountryName\"])(countryCode);\n  const productsList = products.filter(el => {\n    if (!el) return false;\n    if (el.visibilitytype !== true) return false;\n\n    if (el.combo) {\n      if (el.blockedcountries) {\n        if (el.blockedcountries.includes(countryName)) return false;\n      }\n    }\n\n    if (el.productid) {\n      if (el.productid.blockedcountries) {\n        if (el.productid.blockedcountries.includes(countryName)) return false;\n      }\n    }\n\n    return true;\n  });\n  return productsList.map(el => {\n    if (el.variation) {\n      const verifiedAttr = filteredAttr(el.variation, el.attributes);\n      return _objectSpread(_objectSpread({}, el), {}, {\n        verifiedAttr,\n        visibleAttrList: getAttrListing(verifiedAttr)\n      });\n    } else return el;\n  });\n};\nconst applyVariationFilter = (product, selectedVariation = {}) => {\n  const visibleAttr = findByMatchingProperties(product.verifiedAttr, selectedVariation);\n  return _objectSpread(_objectSpread({}, product), {}, {\n    visibleAttr,\n    visibleAttrList: getAttrListing(visibleAttr)\n  });\n};\nconst getCategoraiesProducts = products => {\n  const productsN = products.filter(el => el.categoryid);\n  const combos = products.filter(el => el.combo);\n  const filtered = productsN.map(el => {\n    return productsN.filter(elx => {\n      if (el.categoryid[0] && elx.categoryid[0]) return el.categoryid[0]._id === elx.categoryid[0]._id;\n      return false;\n    });\n  }).sort((a, b) => {\n    if (a[0] && b[0]) if (a[0].categoryid[0] && b[0].categoryid[0]) {\n      if (a[0].categoryid[0]._id < b[0].categoryid[0]._id) return -1;\n      if (a[0].categoryid[0]._id > b[0].categoryid[0]._id) return 1;\n    }\n    return 0;\n  });\n  const productsF = filtered.filter((el, x) => {\n    if (x === 0) return true;\n\n    if (filtered[x - 1] && el[0]) {\n      if (filtered[x - 1][0]) {\n        if (filtered[x - 1][0].categoryid[0] && el[0].categoryid[0]) {\n          const prevEl = filtered[x - 1][0].categoryid[0]._id;\n          const currentEl = el[0].categoryid[0]._id;\n          return prevEl !== currentEl;\n        }\n      }\n    }\n\n    return false; // const prevEl = filtered[x - 1][0].categoryid[0]._id;\n    // const currentEl = el[0].categoryid[0]._id;\n    // return prevEl !== currentEl;\n  });\n  const cate = [...productsF, combos];\n  return cate.map(el => {\n    if (el.length) {\n      if (el[0].combo) {\n        return {\n          category: {\n            blockedcountries: [],\n            catdescription: \"Bundles\",\n            categoryid: \"Bundles\",\n            categoryslug: \"Bundles\",\n            categorytitle: \"Bundles\",\n            _id: \"Bundles\"\n          },\n          products: el\n        };\n      }\n\n      return {\n        category: _objectSpread({}, el[0].categoryid[0]),\n        products: el\n      };\n    }\n\n    return null;\n  }).filter(el => el);\n};\nconst getVisibleCategory = (arr = [], countryCode = \"US\") => {\n  const countryName = Object(___WEBPACK_IMPORTED_MODULE_0__[\"getCountryName\"])(countryCode);\n  return arr.filter(el => {\n    if (!el) return false;\n    if (!el.category) return false;\n\n    if (el.category.blockedcountries) {\n      if (el.category.blockedcountries.includes(countryName)) return false;\n    }\n\n    return true;\n  });\n};\nconst getProductsByCategory = (products = [], category = \"\") => {\n  if (category.toLowerCase() === \"combos\" || category.toLowerCase() === \"kits\" || category.toLowerCase() === \"bundles\") {\n    return products.filter(el => el.combo);\n  }\n\n  return products.filter(el => {\n    if (!el.categoryid) return false;\n    const found = el.categoryid.find(elx => elx.categorytitle === category);\n    return found;\n  });\n};\nconst getMatchCategory = (arr = [], category = \"\") => arr.find(el => el.categorytitle === category);\nconst generateProductSlug = product => {\n  const productSlug = product.title ? product.title.toLocaleLowerCase() : product.productid && product.productid.producttitle.toLocaleLowerCase();\n  return encodeUrlFn(productSlug);\n};\nconst addSlugToProduct = product => _objectSpread(_objectSpread({}, product), {}, {\n  productSlug: generateProductSlug(product)\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./services/extra/productHelpers.js\n");

/***/ }),

/***/ "./services/extra/validations.js":
/*!***************************************!*\
  !*** ./services/extra/validations.js ***!
  \***************************************/
/*! exports provided: required, email, fieldValidation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"required\", function() { return required; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"email\", function() { return email; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fieldValidation\", function() { return fieldValidation; });\n/* harmony import */ var validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! validator */ \"validator\");\n/* harmony import */ var validator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(validator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _constants_constantMessage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants/constantMessage */ \"./constants/constantMessage.js\");\n/* harmony import */ var _constants_projectSettings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants/projectSettings */ \"./constants/projectSettings.js\");\n // import { isValidPhoneNumber } from \"react-phone-number-input\";\n\n\n\nconst {\n  enableCountry\n} = _constants_projectSettings__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\nconst required = value => {\n  if (!value.toString().trim().length) {\n    // We can return string or jsx as the 'error' prop for the validated Component\n    return \"require\";\n  }\n};\nconst email = value => {\n  if (!Object(validator__WEBPACK_IMPORTED_MODULE_0__[\"isEmail\"])(value)) {\n    return `${value} is not a valid email.`;\n  }\n};\nconst fieldValidation = (field = \" \", type = \" \") => {\n  const typeArr = type.split(\",\").map(el => el.trim());\n\n  if (typeArr.includes(\"required\")) {\n    if (Object(validator__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(field.trim())) {\n      return {\n        isError: true,\n        errorMsg: \"can't be empty\"\n      };\n    }\n  }\n\n  if (typeArr.includes(\"name\")) {\n    if (!Object(validator__WEBPACK_IMPORTED_MODULE_0__[\"isAlpha\"])(field)) {\n      return {\n        isError: true,\n        errorMsg: \"Only Alphabets\"\n      };\n    }\n  }\n\n  if (typeArr.includes(\"email\")) {\n    if (!Object(validator__WEBPACK_IMPORTED_MODULE_0__[\"isEmail\"])(field)) {\n      return {\n        isError: true,\n        errorMsg: _constants_constantMessage__WEBPACK_IMPORTED_MODULE_1__[\"emailNotValidErrMsg\"]\n      };\n    }\n  } // if (typeArr.includes(\"phone\")) {\n  //   if (!isValidPhoneNumber(field)) {\n  //     return {\n  //       isError: true,\n  //       errorMsg: phoneNotValidErrMsg\n  //     };\n  //   }\n  // }\n\n\n  if (typeArr.includes(\"zipcode\")) {\n    // if(isPostalCode(this.state[field])){\n    if (!Object(validator__WEBPACK_IMPORTED_MODULE_0__[\"isNumeric\"])(field)) {\n      return {\n        isError: true,\n        errorMsg: _constants_constantMessage__WEBPACK_IMPORTED_MODULE_1__[\"zipValidErrMsg\"]\n      };\n    }\n  }\n\n  if (typeArr.includes(\"routingNumber\")) {\n    // if(isPostalCode(this.state[field])){\n    if (!Object(validator__WEBPACK_IMPORTED_MODULE_0__[\"isNumeric\"])(field)) {\n      if (field.length === 9) {\n        return {\n          isError: true,\n          errorMsg: \"Bank routing number should be 9 digits.\"\n        };\n      }\n\n      return {\n        isError: true,\n        errorMsg: \"Bank routing number is not Correct.\"\n      };\n    }\n  }\n\n  if (typeArr.includes(\"country\")) {\n    if (!enableCountry.includes(field)) {\n      return {\n        isError: true,\n        errorMsg: `${_constants_projectSettings__WEBPACK_IMPORTED_MODULE_2__[\"projectName\"]} offers shipping to USA only`\n      };\n    }\n  }\n\n  return {\n    isError: false,\n    errorMsg: \"\"\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zZXJ2aWNlcy9leHRyYS92YWxpZGF0aW9ucy5qcz9mNDYzIl0sIm5hbWVzIjpbImVuYWJsZUNvdW50cnkiLCJwcm9qZWN0U2V0dGluZ3MiLCJyZXF1aXJlZCIsInZhbHVlIiwidG9TdHJpbmciLCJ0cmltIiwibGVuZ3RoIiwiZW1haWwiLCJpc0VtYWlsIiwiZmllbGRWYWxpZGF0aW9uIiwiZmllbGQiLCJ0eXBlIiwidHlwZUFyciIsInNwbGl0IiwibWFwIiwiZWwiLCJpbmNsdWRlcyIsImlzRW1wdHkiLCJpc0Vycm9yIiwiZXJyb3JNc2ciLCJpc0FscGhhIiwiZW1haWxOb3RWYWxpZEVyck1zZyIsImlzTnVtZXJpYyIsInppcFZhbGlkRXJyTXNnIiwicHJvamVjdE5hbWUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Q0FDQTs7QUFDQTtBQUtBO0FBRUEsTUFBTTtBQUFFQTtBQUFGLElBQW9CQyxrRUFBMUI7QUFDTyxNQUFNQyxRQUFRLEdBQUlDLEtBQUQsSUFBVztBQUNsQyxNQUFJLENBQUNBLEtBQUssQ0FBQ0MsUUFBTixHQUFpQkMsSUFBakIsR0FBd0JDLE1BQTdCLEVBQXFDO0FBQ3BDO0FBQ0EsV0FBTyxTQUFQO0FBQ0E7QUFDRCxDQUxNO0FBT0EsTUFBTUMsS0FBSyxHQUFJSixLQUFELElBQVc7QUFDL0IsTUFBSSxDQUFDSyx5REFBTyxDQUFDTCxLQUFELENBQVosRUFBcUI7QUFDcEIsV0FBUSxHQUFFQSxLQUFNLHdCQUFoQjtBQUNBO0FBQ0QsQ0FKTTtBQU1BLE1BQU1NLGVBQWUsR0FBRyxDQUFDQyxLQUFLLEdBQUcsR0FBVCxFQUFjQyxJQUFJLEdBQUcsR0FBckIsS0FBNkI7QUFDM0QsUUFBTUMsT0FBTyxHQUFHRCxJQUFJLENBQUNFLEtBQUwsQ0FBVyxHQUFYLEVBQWdCQyxHQUFoQixDQUFxQkMsRUFBRCxJQUFRQSxFQUFFLENBQUNWLElBQUgsRUFBNUIsQ0FBaEI7O0FBQ0EsTUFBSU8sT0FBTyxDQUFDSSxRQUFSLENBQWlCLFVBQWpCLENBQUosRUFBa0M7QUFDakMsUUFBSUMseURBQU8sQ0FBQ1AsS0FBSyxDQUFDTCxJQUFOLEVBQUQsQ0FBWCxFQUEyQjtBQUMxQixhQUFPO0FBQ05hLGVBQU8sRUFBRSxJQURIO0FBRU5DLGdCQUFRLEVBQUU7QUFGSixPQUFQO0FBSUE7QUFDRDs7QUFDRCxNQUFJUCxPQUFPLENBQUNJLFFBQVIsQ0FBaUIsTUFBakIsQ0FBSixFQUE4QjtBQUM3QixRQUFJLENBQUNJLHlEQUFPLENBQUNWLEtBQUQsQ0FBWixFQUFxQjtBQUNwQixhQUFPO0FBQ05RLGVBQU8sRUFBRSxJQURIO0FBRU5DLGdCQUFRLEVBQUU7QUFGSixPQUFQO0FBSUE7QUFDRDs7QUFDRCxNQUFJUCxPQUFPLENBQUNJLFFBQVIsQ0FBaUIsT0FBakIsQ0FBSixFQUErQjtBQUM5QixRQUFJLENBQUNSLHlEQUFPLENBQUNFLEtBQUQsQ0FBWixFQUFxQjtBQUNwQixhQUFPO0FBQ05RLGVBQU8sRUFBRSxJQURIO0FBRU5DLGdCQUFRLEVBQUVFLDhFQUFtQkE7QUFGdkIsT0FBUDtBQUlBO0FBQ0QsR0F6QjBELENBMEIzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSxNQUFJVCxPQUFPLENBQUNJLFFBQVIsQ0FBaUIsU0FBakIsQ0FBSixFQUFpQztBQUNoQztBQUNBLFFBQUksQ0FBQ00sMkRBQVMsQ0FBQ1osS0FBRCxDQUFkLEVBQXVCO0FBQ3RCLGFBQU87QUFDTlEsZUFBTyxFQUFFLElBREg7QUFFTkMsZ0JBQVEsRUFBRUkseUVBQWNBO0FBRmxCLE9BQVA7QUFJQTtBQUNEOztBQUNELE1BQUlYLE9BQU8sQ0FBQ0ksUUFBUixDQUFpQixlQUFqQixDQUFKLEVBQXVDO0FBQ3RDO0FBQ0EsUUFBSSxDQUFDTSwyREFBUyxDQUFDWixLQUFELENBQWQsRUFBdUI7QUFDdEIsVUFBSUEsS0FBSyxDQUFDSixNQUFOLEtBQWlCLENBQXJCLEVBQXdCO0FBQ3ZCLGVBQU87QUFDTlksaUJBQU8sRUFBRSxJQURIO0FBRU5DLGtCQUFRLEVBQUU7QUFGSixTQUFQO0FBSUE7O0FBQ0QsYUFBTztBQUNORCxlQUFPLEVBQUUsSUFESDtBQUVOQyxnQkFBUSxFQUFFO0FBRkosT0FBUDtBQUlBO0FBQ0Q7O0FBQ0QsTUFBSVAsT0FBTyxDQUFDSSxRQUFSLENBQWlCLFNBQWpCLENBQUosRUFBaUM7QUFDaEMsUUFBSSxDQUFDaEIsYUFBYSxDQUFDZ0IsUUFBZCxDQUF1Qk4sS0FBdkIsQ0FBTCxFQUFvQztBQUNuQyxhQUFPO0FBQ05RLGVBQU8sRUFBRSxJQURIO0FBRU5DLGdCQUFRLEVBQUcsR0FBRUssc0VBQVk7QUFGbkIsT0FBUDtBQUlBO0FBQ0Q7O0FBRUQsU0FBTztBQUNOTixXQUFPLEVBQUUsS0FESDtBQUVOQyxZQUFRLEVBQUU7QUFGSixHQUFQO0FBSUEsQ0F2RU0iLCJmaWxlIjoiLi9zZXJ2aWNlcy9leHRyYS92YWxpZGF0aW9ucy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzQWxwaGEsIGlzRW1haWwsIGlzRW1wdHksIGlzTnVtZXJpYyB9IGZyb20gXCJ2YWxpZGF0b3JcIjtcbi8vIGltcG9ydCB7IGlzVmFsaWRQaG9uZU51bWJlciB9IGZyb20gXCJyZWFjdC1waG9uZS1udW1iZXItaW5wdXRcIjtcbmltcG9ydCB7XG5cdGVtYWlsTm90VmFsaWRFcnJNc2csXG5cdHBob25lTm90VmFsaWRFcnJNc2csXG5cdHppcFZhbGlkRXJyTXNnLFxufSBmcm9tIFwiLi4vLi4vY29uc3RhbnRzL2NvbnN0YW50TWVzc2FnZVwiO1xuaW1wb3J0IHByb2plY3RTZXR0aW5ncywgeyBwcm9qZWN0TmFtZSB9IGZyb20gXCIuLi8uLi9jb25zdGFudHMvcHJvamVjdFNldHRpbmdzXCI7XG5cbmNvbnN0IHsgZW5hYmxlQ291bnRyeSB9ID0gcHJvamVjdFNldHRpbmdzO1xuZXhwb3J0IGNvbnN0IHJlcXVpcmVkID0gKHZhbHVlKSA9PiB7XG5cdGlmICghdmFsdWUudG9TdHJpbmcoKS50cmltKCkubGVuZ3RoKSB7XG5cdFx0Ly8gV2UgY2FuIHJldHVybiBzdHJpbmcgb3IganN4IGFzIHRoZSAnZXJyb3InIHByb3AgZm9yIHRoZSB2YWxpZGF0ZWQgQ29tcG9uZW50XG5cdFx0cmV0dXJuIFwicmVxdWlyZVwiO1xuXHR9XG59O1xuXG5leHBvcnQgY29uc3QgZW1haWwgPSAodmFsdWUpID0+IHtcblx0aWYgKCFpc0VtYWlsKHZhbHVlKSkge1xuXHRcdHJldHVybiBgJHt2YWx1ZX0gaXMgbm90IGEgdmFsaWQgZW1haWwuYDtcblx0fVxufTtcblxuZXhwb3J0IGNvbnN0IGZpZWxkVmFsaWRhdGlvbiA9IChmaWVsZCA9IFwiIFwiLCB0eXBlID0gXCIgXCIpID0+IHtcblx0Y29uc3QgdHlwZUFyciA9IHR5cGUuc3BsaXQoXCIsXCIpLm1hcCgoZWwpID0+IGVsLnRyaW0oKSk7XG5cdGlmICh0eXBlQXJyLmluY2x1ZGVzKFwicmVxdWlyZWRcIikpIHtcblx0XHRpZiAoaXNFbXB0eShmaWVsZC50cmltKCkpKSB7XG5cdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRpc0Vycm9yOiB0cnVlLFxuXHRcdFx0XHRlcnJvck1zZzogXCJjYW4ndCBiZSBlbXB0eVwiLFxuXHRcdFx0fTtcblx0XHR9XG5cdH1cblx0aWYgKHR5cGVBcnIuaW5jbHVkZXMoXCJuYW1lXCIpKSB7XG5cdFx0aWYgKCFpc0FscGhhKGZpZWxkKSkge1xuXHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0aXNFcnJvcjogdHJ1ZSxcblx0XHRcdFx0ZXJyb3JNc2c6IFwiT25seSBBbHBoYWJldHNcIixcblx0XHRcdH07XG5cdFx0fVxuXHR9XG5cdGlmICh0eXBlQXJyLmluY2x1ZGVzKFwiZW1haWxcIikpIHtcblx0XHRpZiAoIWlzRW1haWwoZmllbGQpKSB7XG5cdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRpc0Vycm9yOiB0cnVlLFxuXHRcdFx0XHRlcnJvck1zZzogZW1haWxOb3RWYWxpZEVyck1zZyxcblx0XHRcdH07XG5cdFx0fVxuXHR9XG5cdC8vIGlmICh0eXBlQXJyLmluY2x1ZGVzKFwicGhvbmVcIikpIHtcblx0Ly8gICBpZiAoIWlzVmFsaWRQaG9uZU51bWJlcihmaWVsZCkpIHtcblx0Ly8gICAgIHJldHVybiB7XG5cdC8vICAgICAgIGlzRXJyb3I6IHRydWUsXG5cdC8vICAgICAgIGVycm9yTXNnOiBwaG9uZU5vdFZhbGlkRXJyTXNnXG5cdC8vICAgICB9O1xuXHQvLyAgIH1cblx0Ly8gfVxuXHRpZiAodHlwZUFyci5pbmNsdWRlcyhcInppcGNvZGVcIikpIHtcblx0XHQvLyBpZihpc1Bvc3RhbENvZGUodGhpcy5zdGF0ZVtmaWVsZF0pKXtcblx0XHRpZiAoIWlzTnVtZXJpYyhmaWVsZCkpIHtcblx0XHRcdHJldHVybiB7XG5cdFx0XHRcdGlzRXJyb3I6IHRydWUsXG5cdFx0XHRcdGVycm9yTXNnOiB6aXBWYWxpZEVyck1zZyxcblx0XHRcdH07XG5cdFx0fVxuXHR9XG5cdGlmICh0eXBlQXJyLmluY2x1ZGVzKFwicm91dGluZ051bWJlclwiKSkge1xuXHRcdC8vIGlmKGlzUG9zdGFsQ29kZSh0aGlzLnN0YXRlW2ZpZWxkXSkpe1xuXHRcdGlmICghaXNOdW1lcmljKGZpZWxkKSkge1xuXHRcdFx0aWYgKGZpZWxkLmxlbmd0aCA9PT0gOSkge1xuXHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdGlzRXJyb3I6IHRydWUsXG5cdFx0XHRcdFx0ZXJyb3JNc2c6IFwiQmFuayByb3V0aW5nIG51bWJlciBzaG91bGQgYmUgOSBkaWdpdHMuXCIsXG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRpc0Vycm9yOiB0cnVlLFxuXHRcdFx0XHRlcnJvck1zZzogXCJCYW5rIHJvdXRpbmcgbnVtYmVyIGlzIG5vdCBDb3JyZWN0LlwiLFxuXHRcdFx0fTtcblx0XHR9XG5cdH1cblx0aWYgKHR5cGVBcnIuaW5jbHVkZXMoXCJjb3VudHJ5XCIpKSB7XG5cdFx0aWYgKCFlbmFibGVDb3VudHJ5LmluY2x1ZGVzKGZpZWxkKSkge1xuXHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0aXNFcnJvcjogdHJ1ZSxcblx0XHRcdFx0ZXJyb3JNc2c6IGAke3Byb2plY3ROYW1lfSBvZmZlcnMgc2hpcHBpbmcgdG8gVVNBIG9ubHlgLFxuXHRcdFx0fTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4ge1xuXHRcdGlzRXJyb3I6IGZhbHNlLFxuXHRcdGVycm9yTXNnOiBcIlwiLFxuXHR9O1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./services/extra/validations.js\n");

/***/ }),

/***/ "./services/extra/wishListHelpers.js":
/*!*******************************************!*\
  !*** ./services/extra/wishListHelpers.js ***!
  \*******************************************/
/*! exports provided: getWishList, addToWhisList, isProductInWishList, removeFromWhisList, toggleWishListItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getWishList\", function() { return getWishList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addToWhisList\", function() { return addToWhisList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isProductInWishList\", function() { return isProductInWishList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeFromWhisList\", function() { return removeFromWhisList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toggleWishListItem\", function() { return toggleWishListItem; });\n// import { addToWishListApi, deleteWishList } from \"../api\";\nconst getWishList = (userid = \"guest\") => {\n  return [];\n};\nconst addToWhisList = (productmeta, productid, userid = \"guest\") => {\n  if (!isProductInWishList(productmeta)) {}\n\n  if (userid !== \"guest\") {\n    const wishList = getWishList(); // addToWishListApi(userid, productid, productmeta)\n    //   .then(res => res.json())\n    //   .then(resJson2 => {\n    //     if (resJson2.status) {\n    //       var wishListId = resJson2.wishlist._id;\n    //       //var setinde\n    //       wishList.map((itm, index) => {\n    //         if (itm.productmeta === resJson2.wishlist.productmeta) {\n    //           wishList[index] = {\n    //             productmeta,\n    //             productid,\n    //             userid,\n    //             wishListId\n    //           };\n    //         } else {\n    //         }\n    //         return null;\n    //       });\n    //     }\n    //   })\n    //   .catch(err => {});\n  }\n};\nconst isProductInWishList = (productmeta, list = []) => {\n  const wishList = list || []; // console.log({\n  //   wishList\n  // });\n\n  return wishList.some(pr => pr.productmeta === productmeta);\n};\nconst removeFromWhisList = (productmeta, productid, productDetails, userid = \"guest\") => {\n  const wishList = getWishList();\n\n  if (isProductInWishList(productmeta)) {\n    if (wishList.length > 0) {\n      wishList.map(itm => {\n        if (itm.productmeta === productmeta && itm.userid !== \"guest\") {\n          var id = itm.wishListId; // deleteWishList({ id })\n          //   .then(res => res.json())\n          //   .then(resJson => {\n          //     if (resJson.success) {\n          //     }\n          //   })\n          //   .catch();\n        }\n\n        return null;\n      });\n    }\n  }\n};\nconst toggleWishListItem = (productmeta, productid, productDetails, userid = \"guest\") => {\n  if (isProductInWishList(productmeta)) {\n    removeFromWhisList(productmeta, productid, productDetails, userid);\n  } else {\n    addToWhisList(productmeta, productid, productDetails, userid);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zZXJ2aWNlcy9leHRyYS93aXNoTGlzdEhlbHBlcnMuanM/NTA2NyJdLCJuYW1lcyI6WyJnZXRXaXNoTGlzdCIsInVzZXJpZCIsImFkZFRvV2hpc0xpc3QiLCJwcm9kdWN0bWV0YSIsInByb2R1Y3RpZCIsImlzUHJvZHVjdEluV2lzaExpc3QiLCJ3aXNoTGlzdCIsImxpc3QiLCJzb21lIiwicHIiLCJyZW1vdmVGcm9tV2hpc0xpc3QiLCJwcm9kdWN0RGV0YWlscyIsImxlbmd0aCIsIm1hcCIsIml0bSIsImlkIiwid2lzaExpc3RJZCIsInRvZ2dsZVdpc2hMaXN0SXRlbSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFTyxNQUFNQSxXQUFXLEdBQUcsQ0FBQ0MsTUFBTSxHQUFHLE9BQVYsS0FBc0I7QUFDL0MsU0FBTyxFQUFQO0FBQ0QsQ0FGTTtBQUdBLE1BQU1DLGFBQWEsR0FBRyxDQUFDQyxXQUFELEVBQWNDLFNBQWQsRUFBeUJILE1BQU0sR0FBRyxPQUFsQyxLQUE4QztBQUN6RSxNQUFJLENBQUNJLG1CQUFtQixDQUFDRixXQUFELENBQXhCLEVBQXVDLENBQ3RDOztBQUVELE1BQUlGLE1BQU0sS0FBSyxPQUFmLEVBQXdCO0FBQ3RCLFVBQU1LLFFBQVEsR0FBR04sV0FBVyxFQUE1QixDQURzQixDQUV0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDRDtBQUNGLENBNUJNO0FBNkJBLE1BQU1LLG1CQUFtQixHQUFHLENBQUNGLFdBQUQsRUFBY0ksSUFBSSxHQUFHLEVBQXJCLEtBQTRCO0FBQzdELFFBQU1ELFFBQVEsR0FBR0MsSUFBSSxJQUFJLEVBQXpCLENBRDZELENBRTdEO0FBQ0E7QUFDQTs7QUFDQSxTQUFPRCxRQUFRLENBQUNFLElBQVQsQ0FBY0MsRUFBRSxJQUFJQSxFQUFFLENBQUNOLFdBQUgsS0FBbUJBLFdBQXZDLENBQVA7QUFDRCxDQU5NO0FBT0EsTUFBTU8sa0JBQWtCLEdBQUcsQ0FDaENQLFdBRGdDLEVBRWhDQyxTQUZnQyxFQUdoQ08sY0FIZ0MsRUFJaENWLE1BQU0sR0FBRyxPQUp1QixLQUs3QjtBQUNILFFBQU1LLFFBQVEsR0FBR04sV0FBVyxFQUE1Qjs7QUFFQSxNQUFJSyxtQkFBbUIsQ0FBQ0YsV0FBRCxDQUF2QixFQUFzQztBQUNwQyxRQUFJRyxRQUFRLENBQUNNLE1BQVQsR0FBa0IsQ0FBdEIsRUFBeUI7QUFDdkJOLGNBQVEsQ0FBQ08sR0FBVCxDQUFhQyxHQUFHLElBQUk7QUFDbEIsWUFBSUEsR0FBRyxDQUFDWCxXQUFKLEtBQW9CQSxXQUFwQixJQUFtQ1csR0FBRyxDQUFDYixNQUFKLEtBQWUsT0FBdEQsRUFBK0Q7QUFDN0QsY0FBSWMsRUFBRSxHQUFHRCxHQUFHLENBQUNFLFVBQWIsQ0FENkQsQ0FFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDRDs7QUFDRCxlQUFPLElBQVA7QUFDRCxPQVpEO0FBYUQ7QUFDRjtBQUNGLENBekJNO0FBMEJBLE1BQU1DLGtCQUFrQixHQUFHLENBQ2hDZCxXQURnQyxFQUVoQ0MsU0FGZ0MsRUFHaENPLGNBSGdDLEVBSWhDVixNQUFNLEdBQUcsT0FKdUIsS0FLN0I7QUFDSCxNQUFJSSxtQkFBbUIsQ0FBQ0YsV0FBRCxDQUF2QixFQUFzQztBQUNwQ08sc0JBQWtCLENBQUNQLFdBQUQsRUFBY0MsU0FBZCxFQUF5Qk8sY0FBekIsRUFBeUNWLE1BQXpDLENBQWxCO0FBQ0QsR0FGRCxNQUVPO0FBQ0xDLGlCQUFhLENBQUNDLFdBQUQsRUFBY0MsU0FBZCxFQUF5Qk8sY0FBekIsRUFBeUNWLE1BQXpDLENBQWI7QUFDRDtBQUNGLENBWE0iLCJmaWxlIjoiLi9zZXJ2aWNlcy9leHRyYS93aXNoTGlzdEhlbHBlcnMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgeyBhZGRUb1dpc2hMaXN0QXBpLCBkZWxldGVXaXNoTGlzdCB9IGZyb20gXCIuLi9hcGlcIjtcblxuZXhwb3J0IGNvbnN0IGdldFdpc2hMaXN0ID0gKHVzZXJpZCA9IFwiZ3Vlc3RcIikgPT4ge1xuICByZXR1cm4gW107XG59O1xuZXhwb3J0IGNvbnN0IGFkZFRvV2hpc0xpc3QgPSAocHJvZHVjdG1ldGEsIHByb2R1Y3RpZCwgdXNlcmlkID0gXCJndWVzdFwiKSA9PiB7XG4gIGlmICghaXNQcm9kdWN0SW5XaXNoTGlzdChwcm9kdWN0bWV0YSkpIHtcbiAgfVxuXG4gIGlmICh1c2VyaWQgIT09IFwiZ3Vlc3RcIikge1xuICAgIGNvbnN0IHdpc2hMaXN0ID0gZ2V0V2lzaExpc3QoKTtcbiAgICAvLyBhZGRUb1dpc2hMaXN0QXBpKHVzZXJpZCwgcHJvZHVjdGlkLCBwcm9kdWN0bWV0YSlcbiAgICAvLyAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKVxuICAgIC8vICAgLnRoZW4ocmVzSnNvbjIgPT4ge1xuICAgIC8vICAgICBpZiAocmVzSnNvbjIuc3RhdHVzKSB7XG4gICAgLy8gICAgICAgdmFyIHdpc2hMaXN0SWQgPSByZXNKc29uMi53aXNobGlzdC5faWQ7XG4gICAgLy8gICAgICAgLy92YXIgc2V0aW5kZVxuICAgIC8vICAgICAgIHdpc2hMaXN0Lm1hcCgoaXRtLCBpbmRleCkgPT4ge1xuICAgIC8vICAgICAgICAgaWYgKGl0bS5wcm9kdWN0bWV0YSA9PT0gcmVzSnNvbjIud2lzaGxpc3QucHJvZHVjdG1ldGEpIHtcbiAgICAvLyAgICAgICAgICAgd2lzaExpc3RbaW5kZXhdID0ge1xuICAgIC8vICAgICAgICAgICAgIHByb2R1Y3RtZXRhLFxuICAgIC8vICAgICAgICAgICAgIHByb2R1Y3RpZCxcbiAgICAvLyAgICAgICAgICAgICB1c2VyaWQsXG4gICAgLy8gICAgICAgICAgICAgd2lzaExpc3RJZFxuICAgIC8vICAgICAgICAgICB9O1xuICAgIC8vICAgICAgICAgfSBlbHNlIHtcbiAgICAvLyAgICAgICAgIH1cbiAgICAvLyAgICAgICAgIHJldHVybiBudWxsO1xuICAgIC8vICAgICAgIH0pO1xuICAgIC8vICAgICB9XG4gICAgLy8gICB9KVxuICAgIC8vICAgLmNhdGNoKGVyciA9PiB7fSk7XG4gIH1cbn07XG5leHBvcnQgY29uc3QgaXNQcm9kdWN0SW5XaXNoTGlzdCA9IChwcm9kdWN0bWV0YSwgbGlzdCA9IFtdKSA9PiB7XG4gIGNvbnN0IHdpc2hMaXN0ID0gbGlzdCB8fCBbXTtcbiAgLy8gY29uc29sZS5sb2coe1xuICAvLyAgIHdpc2hMaXN0XG4gIC8vIH0pO1xuICByZXR1cm4gd2lzaExpc3Quc29tZShwciA9PiBwci5wcm9kdWN0bWV0YSA9PT0gcHJvZHVjdG1ldGEpO1xufTtcbmV4cG9ydCBjb25zdCByZW1vdmVGcm9tV2hpc0xpc3QgPSAoXG4gIHByb2R1Y3RtZXRhLFxuICBwcm9kdWN0aWQsXG4gIHByb2R1Y3REZXRhaWxzLFxuICB1c2VyaWQgPSBcImd1ZXN0XCJcbikgPT4ge1xuICBjb25zdCB3aXNoTGlzdCA9IGdldFdpc2hMaXN0KCk7XG5cbiAgaWYgKGlzUHJvZHVjdEluV2lzaExpc3QocHJvZHVjdG1ldGEpKSB7XG4gICAgaWYgKHdpc2hMaXN0Lmxlbmd0aCA+IDApIHtcbiAgICAgIHdpc2hMaXN0Lm1hcChpdG0gPT4ge1xuICAgICAgICBpZiAoaXRtLnByb2R1Y3RtZXRhID09PSBwcm9kdWN0bWV0YSAmJiBpdG0udXNlcmlkICE9PSBcImd1ZXN0XCIpIHtcbiAgICAgICAgICB2YXIgaWQgPSBpdG0ud2lzaExpc3RJZDtcbiAgICAgICAgICAvLyBkZWxldGVXaXNoTGlzdCh7IGlkIH0pXG4gICAgICAgICAgLy8gICAudGhlbihyZXMgPT4gcmVzLmpzb24oKSlcbiAgICAgICAgICAvLyAgIC50aGVuKHJlc0pzb24gPT4ge1xuICAgICAgICAgIC8vICAgICBpZiAocmVzSnNvbi5zdWNjZXNzKSB7XG4gICAgICAgICAgLy8gICAgIH1cbiAgICAgICAgICAvLyAgIH0pXG4gICAgICAgICAgLy8gICAuY2F0Y2goKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufTtcbmV4cG9ydCBjb25zdCB0b2dnbGVXaXNoTGlzdEl0ZW0gPSAoXG4gIHByb2R1Y3RtZXRhLFxuICBwcm9kdWN0aWQsXG4gIHByb2R1Y3REZXRhaWxzLFxuICB1c2VyaWQgPSBcImd1ZXN0XCJcbikgPT4ge1xuICBpZiAoaXNQcm9kdWN0SW5XaXNoTGlzdChwcm9kdWN0bWV0YSkpIHtcbiAgICByZW1vdmVGcm9tV2hpc0xpc3QocHJvZHVjdG1ldGEsIHByb2R1Y3RpZCwgcHJvZHVjdERldGFpbHMsIHVzZXJpZCk7XG4gIH0gZWxzZSB7XG4gICAgYWRkVG9XaGlzTGlzdChwcm9kdWN0bWV0YSwgcHJvZHVjdGlkLCBwcm9kdWN0RGV0YWlscywgdXNlcmlkKTtcbiAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./services/extra/wishListHelpers.js\n");

/***/ })

};;